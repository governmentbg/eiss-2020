@using IOWebApplication.Infrastructure.Models.ViewModels.Case
@using IOWebApplication.Infrastructure.Constants
@model CaseMoneyCollectionEditNewVM

@{
    IAccessControl access = (IAccessControl)ViewBag.AccessControl;
}

@using (Html.BeginForm(FormMethod.Post, null, new { id = "mcModalForm" }))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.CaseId)
    @Html.HiddenFor(x => x.CourtId)
    @Html.HiddenFor(x => x.CaseMoneyClaimId)
    <div id="saveContainer">
        <partial name="_SaveFormContent" model="@("#saveContainer")" />
        <!--Основен вид на вземането: Парично вземане, предаване на заместими вещи-->
        <div class="row" id="CaseMoneyCollectionGroup">
            <div class="col-lg-8">@Html.EditorFor(x => x.CaseMoneyCollectionGroupId, "GenericDropDown")</div>
            <!--Точен вид на вземането: Парично вземане: главница, друг вид вземане, Предавания на движима вещ,-->
            <div id="Money_CaseMoneyCollectionType" class="col-lg-4">@Html.EditorFor(x => x.Money_CaseMoneyCollectionTypeId, "GenericDropDown")</div>
        </div>

        <div id="Data_Div">
            <div id="divLabel" class="row">
                <div class="col-lg-12">@Html.EditorFor(x => x.Label)</div>
            </div>

            <!--Суми-->
            <div class="row">
                <div class="col-lg-3">@Html.EditorFor(x => x.CurrencyId, "GenericDropDown")</div>
                <!--За парично вземане-->
                <div id="InitialAmount_Div" class="col-lg-3">@Html.EditorFor(x => x.InitialAmount, "Decimal")</div>
                <div id="PretendedAmount_Div" class="col-lg-3">@Html.EditorFor(x => x.PretendedAmount, "Decimal")</div>
                <div id="RespectedAmount_Div" class="col-lg-3">@Html.EditorFor(x => x.RespectedAmount, "Decimal")</div>
                <!--За другите-->
                <div id="Amount_Div" class="col-lg-3">@Html.EditorFor(x => x.Amount, "Decimal")</div>
            </div>

            <div class="row" id="DateTimeDiv">
                <!--От дата до дата-->
                <div class="col-lg-3">@Html.EditorFor(x => x.DateFrom, "DateTime")</div>
                <div class="col-lg-6">@Html.EditorFor(x => x.MoneyCollectionEndDateTypeId, "GenericDropDown")</div>
                <div id="divDateTo" class="col-lg-3">@Html.EditorFor(x => x.DateTo, "DateTime")</div>
                <!--Законова лихва-->
            </div>

            <!--От какво произтича задължението за предаване-->
            <!--И това поле и Money_CaseMoneyCollectionTypeId се записват в едно и също поле CaseMoneyCollectionTypeId-->
            <div class="row" id="Movables_CaseMoneyCollectionTypeId_Div">
                <div class="col-lg-12">@Html.EditorFor(x => x.Movables_CaseMoneyCollectionTypeId, "GenericDropDown")</div>
            </div>

            <div class="row">
                <div class="col-lg-12">@Html.EditorFor(x => x.Description, "Textarea")</div>
            </div>
            <div class="cml-join-distribution-container">
                <div class="row">
                    <div class="col-lg-3">@Html.EditorFor(x => x.JointDistribution, "Boolean")</div>
                </div>

                <fieldset class="is-fieldset cpl-container">
                    <legend class="legend_1">Разпределение на вземането</legend>
                    @Html.EditorFor(x => x.IsFraction, "Boolean")
                    @Html.EditorFor(x => x.CasePersonListDecimals)
                </fieldset>
            </div>
            <div id="KindItems_Div">
                @*<fieldset class="is-fieldset">
                        <legend class="legend_1">Kind</legend>
                        @Html.EditorFor(x => x.CaseMoneyCollectionData)
                    </fieldset>*@
                @Html.EditorFor(x => x.CaseMoneyCollectionData)
            </div>
        </div>
    </div>
    <div class="form-group">
        @if (access.CanChange)
        {
            <input type="submit" value="Запис" class="btn btn-success" />
        }
        @if (Model.Id > 0)
        {
            <div class="pull-right">
                @await Html.PartialAsync("_ShowLogOperation", new IOWebApplication.Core.Models.ShowLogModel() { ObjectKey = Model.Id.ToString() })
            </div>
        }
    </div>
}

<div id="modalMessageContainer">
</div>

<script>
    $(document).ready(function () {
        debugger;
        CaseMoneyCollectionGroupIdChange();
        MoneyCollectionEndDateTypeIdChange();
        CaseMoneyCollectionTypeIdChange();
        CaseMoneyCollectionKindIdChange();

        $(document).on('change', '.cboxKindToggle', function () {
            //console.log(this);
            if ($(this).is(':checked')) {
                $(this).parents('.fsKindContainer:first').find('.divKindContainer').show();
            } else {
                $(this).parents('.fsKindContainer:first').find('.divKindContainer').hide();
            }
        });
        $(document).on('change', 'select[id*=MoneyCollectionEndDateTypeId]', function () {
            //console.log(this);
            if ($(this).val() == @NomenclatureConstants.MoneyCollectionEndDateType.WithDate) {
                $(this).parents('.fsKindContainer:first').find('.divDateTo').show();
            } else {
                $(this).parents('.fsKindContainer:first').find('.divDateTo').hide();
            }
        });
    });

    $(function () {
        attachAjaxForm('#mcModalForm', function (data) {
            var resultSave = data.responseJSON.result;
            if (resultSave > 0) {
                var position = "Collection" + resultSave;
                cmcLoadData(position);
                HideModal();
                messageHelper.ShowSuccessMessage('Вземането е добавено успешно.');
            } else {
                messageHelper.ShowErrorMessage(data.responseJSON.message, '#modalMessageContainer');
            }
        });
        initDatePicker();
    });

    function CaseMoneyCollectionGroupIdChange() {
        requestCombo('@Url.Action("GetDDL_MoneyCollectionType", "CaseFastProcess")', { moneyCollectionGroupId: $('#CaseMoneyCollectionGroupId').val() }, '#Money_CaseMoneyCollectionTypeId', @(Model.Money_CaseMoneyCollectionTypeId ?? 0), function () { $('#Money_CaseMoneyCollectionTypeId').trigger('change') });
        requestCombo('@Url.Action("GetDDL_MoneyCollectionType", "CaseFastProcess")', { moneyCollectionGroupId: $('#CaseMoneyCollectionGroupId').val() }, '#Movables_CaseMoneyCollectionTypeId', @(Model.Movables_CaseMoneyCollectionTypeId ?? 0), function () { $('#Movables_CaseMoneyCollectionTypeId').trigger('change') });
        SH_Elements();
    }

    $('#CaseMoneyCollectionGroupId').change(function () {
        CaseMoneyCollectionGroupIdChange();
    });

    $('#MoneyCollectionEndDateTypeId').change(function () {
        MoneyCollectionEndDateTypeIdChange();
    });

    function MoneyCollectionEndDateTypeIdChange() {
        var moneyCollectionEndDateTypeId = $('#MoneyCollectionEndDateTypeId').val();
        if (moneyCollectionEndDateTypeId == @NomenclatureConstants.MoneyCollectionEndDateType.WithDate) {
            $("#divDateTo").show();
        }
        else {
            $("#divDateTo").hide();
        }
    }

    $('#CaseMoneyCollectionKindId').change(function () {
        CaseMoneyCollectionKindIdChange();
    });

    function CaseMoneyCollectionKindIdChange() {
        debugger;
        //var isVisible = $('#CaseMoneyCollectionKindId').is(":visible");
        if (true == true) {
            var caseMoneyCollectionKindId = $('#CaseMoneyCollectionKindId').val();
            if (caseMoneyCollectionKindId == @NomenclatureConstants.CaseMoneyCollectionKind.Other) {
                $("#divLabel").show();
            }
            else {
                $("#divLabel").hide();
            }
        }
    }

    $('#Money_CaseMoneyCollectionTypeId').change(function () {
        CaseMoneyCollectionTypeIdChange();
    });

    function CaseMoneyCollectionTypeIdChange() {
        debugger;
        //var isVisible = $('#Money_CaseMoneyCollectionTypeId').is(":visible");
        if (true == true) {
            var caseMoneyCollectionTypeId = $('#Money_CaseMoneyCollectionTypeId').val();
            if (caseMoneyCollectionTypeId == @NomenclatureConstants.CaseMoneyCollectionType.Other) {
                $("#divLabel").show();
            }
            else {
                $("#divLabel").hide();
            }
        }
    }

    $('.cml-join-distribution-container input[id*="JointDistribution"]').change(function () {
        SH_PersonList();
    });

    $('.cpl-container input[id*="IsFraction"]').change(function () {
        SH_Fraction();
    });

    function SH_Fraction() {
        debugger;
        $('.cpl-container input[id*="IsFraction"]').each(function (i, e) {
            if ($(e).is(":checked")) {
                $(e).parents('.cpl-container').find('.cpl-fraction-edits').show();
                $(e).parents('.cpl-container').find('.cpl-decimal-edit').attr("disabled", true);
            } else {
                $(e).parents('.cpl-container').find('.cpl-fraction-edits').hide();
                $(e).parents('.cpl-container').find('.cpl-decimal-edit').removeAttr("disabled");
            }
        });

        //var cbox = $("#IsFraction");
        //var isFraction = $(cbox).is(":checked");
        //if (isFraction) {
        //    $(cbox).parents('.cpl-container').find('.cpl-fraction-edits').show();
        //    $(cbox).parents('.cpl-container').find('.cpl-decimal-edit').attr("disabled", true);
        //}
        //else {
        //    $(cbox).parents('.cpl-container').find('.cpl-fraction-edits').hide();
        //    $(cbox).parents('.cpl-container').find('.cpl-decimal-edit').removeAttr("disabled");
        //}
    }

    function SH_PersonList() {
        //debugger;

        $('.cml-join-distribution-container input[id*="JointDistribution"]').each(function (i, e) {
            if ($(e).is(":checked")) {
                $(e).parents('.cml-join-distribution-container').find('.cpl-container').hide();
            } else {
                $(e).parents('.cml-join-distribution-container').find('.cpl-container').show();
            }
        });

    //    var jointDistrib = $("#JointDistribution").is(":checked");
    //    if (jointDistrib) {
    //        $("#PersonList_Div").hide();
    //    }
    //    else {
    //        $("#PersonList_Div").show();
    //    }
    }

    function SH_Elements() {
        SH_PersonList();
        SH_Fraction();
        {
            var group = $('#CaseMoneyCollectionGroupId').val();
            switch (group) {
                case '1':
                    {
                        $("#Data_Div").show();
                        $("#Money_CaseMoneyCollectionType").show();
                        $("#CaseMoneyCollectionKind").hide();
                        $("#InitialAmount_Div").show();
                        $("#PretendedAmount_Div").show();
                        $("#RespectedAmount_Div").show();
                        $("#Amount_Div").hide();
                        $("#DateTimeDiv").show();
                        $("#DateFrom").show();
                        $("#DateTo").show();
                        $("#JointDistribution").show();
                        $("#Movables_CaseMoneyCollectionTypeId_Div").hide();
                        $("#CaseMoneyCollectionKind_Div").hide();
                        $("#KindItems_Div").show();
                    }
                    break;
                case '2':
                    {
                        $("#Data_Div").show();
                        $("#Money_CaseMoneyCollectionType").hide();
                        $("#CaseMoneyCollectionKind").hide();
                        $("#InitialAmount_Div").hide();
                        $("#PretendedAmount_Div").hide();
                        $("#RespectedAmount_Div").hide();
                        $("#Amount_Div").show();
                        $("#DateTimeDiv").hide();
                        $("#Movables_CaseMoneyCollectionTypeId_Div").hide();
                        $("#CaseMoneyCollectionKind_Div").hide();
                        $("#PersonList_Div").hide();
                        $("#KindItems_Div").hide();
                    }
                    break;
                case '3':
                    {
                        $("#Data_Div").show();
                        $("#Money_CaseMoneyCollectionType").hide();
                        $("#CaseMoneyCollectionKind").hide();
                        $("#InitialAmount_Div").hide();
                        $("#PretendedAmount_Div").hide();
                        $("#RespectedAmount_Div").hide();
                        $("#Amount_Div").show();
                        $("#DateTimeDiv").hide();
                        $("#Movables_CaseMoneyCollectionTypeId_Div").show();
                        $("#CaseMoneyCollectionKind_Div").hide();
                        $("#PersonList_Div").hide();
                        $("#KindItems_Div").hide();
                    }
                    break;
                default:
                    {
                        $("#Data_Div").hide();
                        $("#Money_CaseMoneyCollectionType").hide();
                        $("#PersonList_Div").hide();
                        $("#KindItems_Div").hide();
                    }
                    break;
            }
        }
    }
</script>
