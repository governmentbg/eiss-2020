@using IOWebApplication.Infrastructure.Models.ViewModels.Case
@using IOWebApplication.Infrastructure.Constants
@model CaseMoneyCollectionEditVM

@{
    IAccessControl access = (IAccessControl)ViewBag.AccessControl;
}

@using (Html.BeginForm(FormMethod.Post, null, new { id = "mcModalForm" }))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.CaseId)
    @Html.HiddenFor(x => x.CourtId)
    @Html.HiddenFor(x => x.MainCaseMoneyCollectionId)
    @Html.HiddenFor(x => x.CaseMoneyClaimId)

    <!--Основен вид на вземането: Парично вземане, предаване на заместими вещи-->
    <div class="row" id="CaseMoneyCollectionGroup">
        <div class="col-lg-8">@Html.EditorFor(x => x.CaseMoneyCollectionGroupId, "GenericDropDown")</div>
        <!--Точен вид на вземането: Парично вземане: главница, друг вид вземане, Предавания на движима вещ,-->
        <div id="Money_CaseMoneyCollectionType" class="col-lg-4">@Html.EditorFor(x => x.Money_CaseMoneyCollectionTypeId, "GenericDropDown")</div>
    </div>

    <div id="Data_Div">
        <!--Вид допълнително парично вземане: лихва, такса, друго-->
        <div class="row" id="CaseMoneyCollectionKind_Div">
            <div class="col-lg-6">@Html.EditorFor(x => x.CaseMoneyCollectionKindId, "GenericDropDown")</div>
        </div>

        <div id="divLabel" class="row">
            <div class="col-lg-12">@Html.EditorFor(x => x.Label)</div>
        </div>

        <!--Суми-->
        <div class="row">
            <div class="col-lg-3">@Html.EditorFor(x => x.CurrencyId, "GenericDropDown")</div>
            <!--За парично вземане-->
            <div id="InitialAmount_Div" class="col-lg-3">@Html.EditorFor(x => x.InitialAmount, "Decimal")</div>
            <div id="PretendedAmount_Div" class="col-lg-3">@Html.EditorFor(x => x.PretendedAmount, "Decimal")</div>
            <div id="RespectedAmount_Div" class="col-lg-3">@Html.EditorFor(x => x.RespectedAmount, "Decimal")</div>
            <!--За другите-->
            <div id="Amount_Div" class="col-lg-3">@Html.EditorFor(x => x.Amount, "Decimal")</div>
        </div>

        <div class="row" id="DateTimeDiv">
            <!--От дата до дата-->
            <div class="col-lg-3">@Html.EditorFor(x => x.DateFrom, "DateTime")</div>
            <div class="col-lg-6">@Html.EditorFor(x => x.MoneyCollectionEndDateTypeId, "GenericDropDown")</div>
            <div id="divDateTo" class="col-lg-3">@Html.EditorFor(x => x.DateTo, "DateTime")</div>
            <!--Законова лихва-->
        </div>

        <!--От какво произтича задължението за предаване-->
        <!--И това поле и Money_CaseMoneyCollectionTypeId се записват в едно и също поле CaseMoneyCollectionTypeId-->
        <div class="row" id="Movables_CaseMoneyCollectionTypeId_Div">
            <div class="col-lg-12">@Html.EditorFor(x => x.Movables_CaseMoneyCollectionTypeId, "GenericDropDown")</div>
        </div>

        <div class="row">
            <div class="col-lg-12">@Html.EditorFor(x => x.Description, "Textarea")</div>
        </div>

        <div class="row">
            <div class="col-lg-3">@Html.EditorFor(x => x.JointDistribution, "Boolean")</div>
        </div>

        <div id="PersonList_Div">
            <fieldset class="is-fieldset cpl-container">
                <legend class="legend_1">Разпределение на вземането</legend>
                @Html.EditorFor(x => x.CasePersonListDecimals)
            </fieldset>
        </div>
    </div>

    <div class="form-group">
        @if (access.CanChange)
        {
            <input type="submit" value="Запис" class="btn btn-success" />
        }
    </div>
}

<div id="modalMessageContainer">
</div>

<script>
    $(document).ready(function () {
        debugger;
        CaseMoneyCollectionGroupIdChange();
        MoneyCollectionEndDateTypeIdChange();
        CaseMoneyCollectionTypeIdChange();
        CaseMoneyCollectionKindIdChange();
    });

    $(function () {
        attachAjaxForm('#mcModalForm', function (data) {
            var resultSave = data.responseJSON.result;
            if (resultSave > 0) {
                var position = (@(Model.MainCaseMoneyCollectionId ?? 0) > 0) ? "CollectionExtra" + resultSave : "Collection" + resultSave;
                cmcLoadData(position);
                HideModal();
                messageHelper.ShowSuccessMessage('Вземането е добавено успешно.');
            } else {
                messageHelper.ShowErrorMessage(data.responseJSON.message, '#modalMessageContainer');
            }
        });
        initDatePicker();
    });

    function CaseMoneyCollectionGroupIdChange() {
        requestCombo('@Url.Action("GetDDL_MoneyCollectionType", "CaseFastProcess")', { moneyCollectionGroupId: $('#CaseMoneyCollectionGroupId').val() }, '#Money_CaseMoneyCollectionTypeId', @(Model.Money_CaseMoneyCollectionTypeId ?? 0), function () { $('#Money_CaseMoneyCollectionTypeId').trigger('change') });
        requestCombo('@Url.Action("GetDDL_MoneyCollectionType", "CaseFastProcess")', { moneyCollectionGroupId: $('#CaseMoneyCollectionGroupId').val() }, '#Movables_CaseMoneyCollectionTypeId', @(Model.Movables_CaseMoneyCollectionTypeId ?? 0), function () { $('#Movables_CaseMoneyCollectionTypeId').trigger('change') });
        requestCombo('@Url.Action("GetDDL_MoneyCollectionKind", "CaseFastProcess")', { moneyCollectionGroupId: $('#CaseMoneyCollectionGroupId').val() }, '#CaseMoneyCollectionKindId', @(Model.CaseMoneyCollectionKindId ?? 0), function () { $('#CaseMoneyCollectionKindId').trigger('change') });
        SH_Elements();
    }

    $('#CaseMoneyCollectionGroupId').change(function () {
        CaseMoneyCollectionGroupIdChange();
    });

    $('#MoneyCollectionEndDateTypeId').change(function () {
        MoneyCollectionEndDateTypeIdChange();
    });

    function MoneyCollectionEndDateTypeIdChange() {
        var moneyCollectionEndDateTypeId = $('#MoneyCollectionEndDateTypeId').val();
        if (moneyCollectionEndDateTypeId == @NomenclatureConstants.MoneyCollectionEndDateType.WithDate) {
            $("#divDateTo").show();
        }
        else {
            $("#divDateTo").hide();
        }
    }

    $('#CaseMoneyCollectionKindId').change(function () {
        CaseMoneyCollectionKindIdChange();
    });

    function CaseMoneyCollectionKindIdChange() {
        debugger;
        //var isVisible = $('#CaseMoneyCollectionKindId').is(":visible");
        if (true == true) {
            var caseMoneyCollectionKindId = $('#CaseMoneyCollectionKindId').val();
            if (caseMoneyCollectionKindId == @NomenclatureConstants.CaseMoneyCollectionKind.Other) {
                $("#divLabel").show();
            }
            else {
                $("#divLabel").hide();
            }
        }
    }

    $('#Money_CaseMoneyCollectionTypeId').change(function () {
        CaseMoneyCollectionTypeIdChange();
    });

    function CaseMoneyCollectionTypeIdChange() {
        debugger;
        //var isVisible = $('#Money_CaseMoneyCollectionTypeId').is(":visible");
        if (true == true) {
            var caseMoneyCollectionTypeId = $('#Money_CaseMoneyCollectionTypeId').val();
            if (caseMoneyCollectionTypeId == @NomenclatureConstants.CaseMoneyCollectionType.Other) {
                $("#divLabel").show();
            }
            else {
                $("#divLabel").hide();
            }
        }
    }

    $('#JointDistribution').change(function () {
        SH_PersonList();
    });

    function SH_PersonList() {
        //debugger;
        var jointDistrib = $("#JointDistribution").is(":checked");
        if (jointDistrib) {
            $("#PersonList_Div").hide();
        }
        else {
            $("#PersonList_Div").show();
        }
    }

    function SH_Fraction() {
        $('#PersonList_Div').find('.cpl-fraction-edits').hide();
    }

    function SH_Elements() {
        SH_PersonList();
        SH_Fraction();
        if (@(Model.MainCaseMoneyCollectionId ?? 0) > 0) {
            $("#CaseMoneyCollectionKind_Div").show();
            $("#CaseMoneyCollectionGroup").hide();
            $("#Money_CaseMoneyCollectionType").show();
            $("#CaseMoneyCollectionKind").show();
            $("#InitialAmount_Div").show();
            $("#PretendedAmount_Div").show();
            $("#RespectedAmount_Div").show();
            $("#Amount_Div").hide();
            $("#Movables_CaseMoneyCollectionTypeId_Div").hide();
        }
        else
        {
            var group = $('#CaseMoneyCollectionGroupId').val();
            switch (group) {
                case '1':
                    {
                        $("#Data_Div").show();
                        $("#Money_CaseMoneyCollectionType").show();
                        $("#CaseMoneyCollectionKind").hide();
                        $("#InitialAmount_Div").show();
                        $("#PretendedAmount_Div").show();
                        $("#RespectedAmount_Div").show();
                        $("#Amount_Div").hide();
                        $("#DateTimeDiv").show();
                        $("#DateFrom").show();
                        $("#DateTo").show();
                        $("#JointDistribution").show();
                        $("#Movables_CaseMoneyCollectionTypeId_Div").hide();
                        $("#CaseMoneyCollectionKind_Div").hide();
                    }
                    break;
                case '2':
                    {
                        $("#Data_Div").show();
                        $("#Money_CaseMoneyCollectionType").hide();
                        $("#CaseMoneyCollectionKind").hide();
                        $("#InitialAmount_Div").hide();
                        $("#PretendedAmount_Div").hide();
                        $("#RespectedAmount_Div").hide();
                        $("#Amount_Div").show();
                        $("#DateTimeDiv").hide();
                        $("#Movables_CaseMoneyCollectionTypeId_Div").hide();
                        $("#CaseMoneyCollectionKind_Div").hide();
                        $("#PersonList_Div").hide();
                    }
                    break;
                case '3':
                    {
                        $("#Data_Div").show();
                        $("#Money_CaseMoneyCollectionType").hide();
                        $("#CaseMoneyCollectionKind").hide();
                        $("#InitialAmount_Div").hide();
                        $("#PretendedAmount_Div").hide();
                        $("#RespectedAmount_Div").hide();
                        $("#Amount_Div").show();
                        $("#DateTimeDiv").hide();
                        $("#Movables_CaseMoneyCollectionTypeId_Div").show();
                        $("#CaseMoneyCollectionKind_Div").hide();
                        $("#PersonList_Div").hide();
                    }
                    break;
                default:
                    {
                        $("#Data_Div").hide();
                        $("#Money_CaseMoneyCollectionType").hide();
                        $("#PersonList_Div").hide();
                    }
                    break;
            }
        }
    }
</script>
