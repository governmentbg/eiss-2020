@model EisppChangeVM
@using IOWebApplication.Infrastructure.Models.ViewModels.Eispp
@{
    ViewData["Title"] = "Изпращане на събитие към ЕИСПП/Ново състояние";
    var currentHtmlPrefix = ViewData.TemplateInfo.HtmlFieldPrefix;
}

@section breadcrumb{
    @if (ViewBag.breadcrumbs != null)
    {
        <partial name="Breadcrumbs" model="@(List<IOWebApplication.Infrastructure.Models.ViewModels.Common.BreadcrumbsVM>)ViewBag.breadcrumbs" />
    }
}
<div class="row">
    <div class="col-md-12 col-lg-12">
        <form id="formEdit" asp-action="NewEventSave" method="post">
            @Html.ValidationSummary()
            @{
                ViewData.TemplateInfo.HtmlFieldPrefix = $"NewEventObj";
                @await Html.PartialAsync("_Event", Model.NewEventObj)
                ViewData.TemplateInfo.HtmlFieldPrefix = currentHtmlPrefix;
            }
            @Html.HiddenFor(x => x.ModelJson)
            @Html.HiddenFor(x => x.IsForSend)
            @Html.HiddenFor(x => x.MQEpepId)
            @Html.HiddenFor(x => x.EventId)
            @Html.HiddenFor(x => x.IsEdit)
            @Html.HiddenFor(x => x.EventFromId)
            <div class="form-group">
                @if (Model.IsEdit)
                {
                    <input type="submit" value="Потвърди" class="btn btn-success" />
                }
                @await Html.PartialAsync("_ButtonClose")
            </div>
        </form>
    </div>
</div>
<form id="formEventChange" asp-action="EisppChange" method="post">
    @Html.HiddenFor(x => x.ModelJson)
    @Html.HiddenFor(x => x.IsForSend)
    @Html.HiddenFor(x => x.MQEpepId)
    @Html.HiddenFor(x => x.EventId)
    @Html.HiddenFor(x => x.IsEdit)
    @Html.HiddenFor(x => x.EventFromId)
</form>
@await Html.PartialAsync("_EisppScript")
<script>
    $(document).ready(function () {
        EisppOnReady();
    });
    function PostToEventChange() {
        $("#formEventChange").submit();
    }
</script>