@model HtmlTemplate
@using IOWebApplication.Infrastructure.Data.Models.Common
@using IOWebApplication.Extensions
@{
    if (Model.Id > 0)
    {
        ViewData["Title"] = "Редакция на бланка";
    }
    else
    {
        ViewData["Title"] = "Добавяне на бланка";
    }
    var filterJson = ViewBag.filterJson;

}
@section breadcrumb{
    @if (ViewBag.breadcrumbs != null)
    {
        <partial name="Breadcrumbs" model="@(List<IOWebApplication.Infrastructure.Models.ViewModels.Common.BreadcrumbsVM>)ViewBag.breadcrumbs" />
    }
}
<div class="row">
    <div class="col-md-12 col-lg-6">

        <form action="@Url.Action("EditPost","HtmlTemplate")" id="cdnUploadFile" method="post" enctype="multipart/form-data">
            @*<form action="@Url.Action("ImportHtmlBlank","HtmlTemplate")" id="cdnUploadFile" method="post" enctype="multipart/form-data">*@
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.IsCreate)
            @Html.HiddenFor(x => filterJson)

            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HtmlTemplateTypeId, "GenericDropDown")
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.Alias)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.Label)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.Description)
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">@Html.EditorFor(x => x.DateFrom, "DateTime")</div>
                <div class="col-lg-6">@Html.EditorFor(x => x.DateTo, "DateTime")</div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.LandscapeVM)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.SmartShrinkingPDF)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveSessionAct)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveSessionActComplain)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.RequiredSessionActComplain)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveActComplainFree)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveMultiActComplain)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveExpertReport)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveCasePerson)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveDocumentSenderPerson)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveMoneyObligation)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveInstitutionDocument)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveNotificationIspnReason)
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.EditorFor(x => x.HaveFromToDate)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.EditorFor(x => x.XlsTitleRow, "Int32Nullable")
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(x => x.XlsDataRow, "Int32Nullable")
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(x => x.XlsRecapRow, "Int32Nullable")
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">

                    <div id="DownloadFileDiv">
                        <a href="#" class="DownloadFile" data-toggle='tooltip' title='Сваляне на файл'>Линк за сваляне на файла: @Model.FileName</a>
                        <p />
                    </div>

                    <input type="file" name="files" id="files" />
                    @*<input type="file" name="files" id="files" multiple="multiple" />*@
                    <br />
                    <input type="submit" value="Запис" id="cdnUploadButton" class="btn btn-success" />
                    @await Html.PartialAsync("_ButtonClose")
                </div>
            </div>

        </form>
    </div>
</div>
<form name="formPostFilter" id="formPostFilter" action="@Url.Action("Index")" method="post">
    @Html.HiddenFor(x => filterJson)
</form>
<script>

   $(document).ready(function () {
       SH_DownloadFile();
   });

   $(function () {
       $(".DownloadFile").click(function (e) {
           e.preventDefault();
           var link = document.createElement("a");
           link.download = name;
           link.href = '@Url.Action("DownloadFile","HtmlTemplate")' + '?id=' + @Model.Id;
           link.className = "hidden";
           document.body.appendChild(link);
           link.click();
       });
   });

   function SH_DownloadFile() {
       var x = document.getElementById("DownloadFileDiv");
       if (@Model.Id > 0) x.style.display = "block";
       else x.style.display = "none";
   }
   function postToFilterHtmlTemplate()
   {
      $("#formPostFilter").submit();
   }
</script>

