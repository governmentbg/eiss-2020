@model CourtLawUnit
@using IOWebApplication.Infrastructure.Data.Models.Common
@using IOWebApplication.Infrastructure.Constants

@{
    IAccessControl access = (IAccessControl)ViewBag.AccessControl;

    if (Model.Id > 0)
    {
        ViewData["Title"] = $"Редакция на {ViewBag.lawUnitTypeName} - {ViewBag.periodTypeName}";
    }
    else
    {
        ViewData["Title"] = $"Добавяне на {ViewBag.lawUnitTypeName} - {ViewBag.periodTypeName}";
    }
    string selectMode = NomenclatureConstants.LawUnitSelectMode.Current;
    if (NomenclatureConstants.PeriodTypes.CurrentlyAvailable.Contains(Model.PeriodTypeId))
    {
        selectMode = NomenclatureConstants.LawUnitSelectMode.All;       
    }
}
@section breadcrumb{
    @if (ViewBag.breadcrumbs != null)
    {
        <partial name="Breadcrumbs" model="@(List<IOWebApplication.Infrastructure.Models.ViewModels.Common.BreadcrumbsVM>)ViewBag.breadcrumbs" />
    }
}

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" method="post">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.CourtId)
            @Html.HiddenFor(x => x.PeriodTypeId)
            @Html.HiddenFor(x => x.MasterLawUnitTypeId)

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="saveContainer">
                <partial name="_SaveFormContent" model="@("#saveContainer")" />
                @Html.EditorFor(x => x.LawUnitId, "LawUnit", null, new { selectMode = selectMode, label = ViewBag.lawUnitTypeName, lawUnitType = Model.MasterLawUnitTypeId })

                @if (NomenclatureConstants.PeriodTypes.CurrentlyCourtActions.Contains(Model.PeriodTypeId))
                {
                    @Html.EditorFor(x => x.CourtOrganizationId, "GenericDropDown")
                    @Html.EditorFor(x => x.LawUnitPositionId, "GenericDropDown")
                }

                <div class="row">
                    <div class="col-lg-6">@Html.EditorFor(m => m.DateFrom)</div>
                    <div class="col-lg-6">@Html.EditorFor(m => m.DateTo)</div>
                </div>
                @Html.EditorFor(x => x.Description, "Textarea")
            </div>

            <div class="form-group">
                <input type="submit" value="Запис" class="btn btn-success" />
                <a asp-action="Index" asp-route-periodType="@Model.PeriodTypeId" asp-route-lawUnitType="@Model.MasterLawUnitTypeId" class="btn btn-danger">Назад</a>
                @if (Model.Id > 0)
                {
                    <div class="pull-right">
                        @if (Model.DateFrom > DateTime.Now)
                        {
                            @await Html.PartialAsync("_ExpiredInfoButton", new ExpiredInfoVM() { Id = Model.Id, OtherId = Model.MasterLawUnitTypeId, DialogTitle = "Премахване", ExpireSubmitUrl = Url.Action("CourtLawUnit_ExpiredInfo") })
                            <span>&nbsp;</span>
                        }

                        @await Html.PartialAsync("_ShowLogOperation", new IOWebApplication.Core.Models.ShowLogModel() { ObjectKey = Model.Id.ToString() })
                    </div>
                }
            </div>
        </form>
    </div>
</div>

<script>
    $(function () {
        initLawUnit();
    });
</script>
