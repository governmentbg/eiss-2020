@using IOWebApplication.Infrastructure.Extensions
@model long?
@{
    var fieldName = ViewData.TemplateInfo.HtmlFieldPrefix.Replace(".", "_") + "_source";
    var label = (string)ViewData["label"];
    var containerId = Guid.NewGuid().ToString();
    var reqClass = ViewData.ModelMetadata.GetIOReqClass();
}

<div class="source-container" data-container="@containerId" @if (ViewData["sourceTypeContainer"] != null) { <text> data-sourcetypecontainer="@ViewData["sourceTypeContainer"]" </text> } @if (ViewData["onChange"] != null) { <text> onchange="@(ViewData["onChange"])" </text> }>
    @if (string.IsNullOrEmpty(label))
    {
        <label asp-for="@Model" class="control-label @reqClass"></label>
        <input id="@fieldName" class="form-control source-control" autocomplete="false" />
    }
    else
    {
        <input id="@fieldName" class="form-control source-control" autocomplete="false" placeholder="@label" />
    }
    <input asp-for="@Model" type="hidden" class="source-val" />
    <span asp-validation-for="@Model" class="text-danger"></span>
    <div id="@String.Format("{0}list", fieldName)" style="z-index:1050;"></div>
</div>
