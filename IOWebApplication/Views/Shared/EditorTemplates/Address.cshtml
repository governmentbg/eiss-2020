@using IOWebApplication.Infrastructure.Data.Models.Common
@using IOWebApplication.Extensions
@using IOWebApplication.Infrastructure.Constants 
@model Address
<div class="form-group address--control">
    @Html.HiddenFor(x => x.Id)
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="AddressTypeId" class="control-label io-req"></label>
                <div>
                    @Html.DropDownListFor(x => x.AddressTypeId, (IEnumerable<SelectListItem>)ViewBag.AddressTypesDDL, new { @class = "form-control address-type" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="CountryCode" class="control-label io-req"></label>
                @Html.DropDownListFor(x => x.CountryCode, ((IEnumerable<SelectListItem>)ViewBag.CountriesDDL).ToSelectList(x => x.Value, x => x.Text, Model.CountryCode ?? ""), null, new { @class = "form-control country-code" })
            </div>
        </div>
    </div>
    <div class="row bg-address">
        <div class="col-md-12">
            <div class="form-group">
                @Html.EditorFor(x => x.CityCode, "Ekatte")
            </div>
        </div>
    </div>
    <div class="row bg-address">
        <div class="col-md-6">
            <div class="form-group">
                @Html.EditorFor(x => x.ResidentionAreaCode, "EkStreet", null, new { streetType = NomenclatureConstants.EkStreetTypes.Area })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.EditorFor(x => x.StreetCode, "EkStreet", null, new { streetType = NomenclatureConstants.EkStreetTypes.Street })
            </div>
        </div>
    </div>
    <div class="row bg-address">
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="StreetNumber"></label>
                <input asp-for="@Model.StreetNumber" class="form-control" min="1" />
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="SubNumber"></label>
                @Html.EditorFor(x => x.SubNumber, "StringInline")
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Block"></label>
                <input asp-for="@Model.Block" class="form-control" min="1" />
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="SubBlock"></label>
                @Html.EditorFor(x => x.SubBlock, "StringInline")
            </div>
        </div>
    </div>
    <div class="row bg-address">
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Entrance"></label>
                @Html.EditorFor(x => x.Entrance, "StringInline")
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Floor"></label>
                @Html.EditorFor(x => x.Floor, "StringInline")
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Appartment"></label>
                @Html.EditorFor(x => x.Appartment, "StringInline")
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Email"></label>
                @Html.EditorFor(x => x.Email, "StringInline")
            </div>
        </div>
    </div>
    <div class="row foreign-address">
        <div class="col-md-12">
            <div class="form-group">
                <label asp-for="ForeignAddress" class="io-req"></label>
                @Html.EditorFor(x => x.ForeignAddress, "StringInline")
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Phone"></label>
                @Html.EditorFor(x => x.Phone, "StringInline")
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Fax"></label>
                @Html.EditorFor(x => x.Fax, "StringInline")
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Description"></label>
                @Html.EditorFor(x => x.Description, "StringInline")
            </div>
        </div>
    </div>
</div>

