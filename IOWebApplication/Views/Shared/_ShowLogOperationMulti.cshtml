@model IOWebApplication.Core.Models.ShowLogModel
@{
    Model.IconOnly = true;
    string action = ViewContext.RouteData.Values["action"].ToString();
    string controller = ViewContext.RouteData.Values["controller"].ToString();
    if (!string.IsNullOrEmpty(Model.Action))
    {
        action = Model.Action;
    }
    if (!string.IsNullOrEmpty(Model.Controller))
    {
        controller = Model.Controller;
    }
    var title = "История на промените";
    var btnLabel = "Покажи история на промените";
    if (!string.IsNullOrEmpty(Model.Title))
    {
        title = Model.Title;

    }
    if (!string.IsNullOrEmpty(Model.ButtonLabel))
    {
        btnLabel = Model.ButtonLabel;

    }
    var containerId = $"historyContainer{Guid.NewGuid()}";
}
@if (Model.ObjectKey != "0")
{

    if (Model.IconOnly)
    {
        <a href="#" title="Покажи история на промените" class="btn btn-success" onclick="LoadLogOperation('@containerId');return false;"><i class="fa fa-history"></i></a>
    }
    else
    {
        <a href="#" title="@title" class="btn btn-success" onclick="LoadLogOperation('@containerId');return false;"><i class="icon-search"></i>@btnLabel</a>
    }

    <div id="@containerId" data-controller="@controller" data-action="@action" data-key="@Model.ObjectKey" style="display:none;" title="@title">
        <table border="0" width="100%">
            <tr>
                <td class="tdList" valign="top" width="40%">
                    <div class="grid">
                    </div>
                    <div class="pager">
                    </div>
                </td>
                <td class="tdHTML log-operation-container" valign="top" width="60%" style="padding-left: 20px;"></td>
            </tr>
        </table>
    </div>

    <script type="text/javascript">
        function LoadLogOperation(containerId) {
            MakeBigModalDialog('div#' + containerId, 'historyContainer');
            ShowLogOperationList(1,containerId);
        }

        function ShowLogOperationList(page_no, containerId) {
            $.ajax({
                dataType: "json",
                cache: false,
                url: '@Url.Action("Get_LogOperation", "Ajax")',
                data: { controller_name: $('#' + containerId).data('controller'), action_name: $('#' + containerId).data('action'), object_key: $('#' +containerId).data('key') },
                success: function (data) {
                    if (data.length > 0) {
                        var _template = '<table class="tblGrid table table-bordered table-striped"><tr><th>Дата</th><th>Операция</th><th>Потребител</th><th></th></tr>';
                        _template += '{{#each this}}<tr><td>{{oper_date}}</td><td>{{oper}}</td><td>{{user}}</td><td><a href="#" title="Преглед" onclick="ShowLogOperationCompared(\''+containerId+'\',{{id}},this);return false;"><i class="glyphicon glyphicon-search"></i></a></td></tr>{{/each}}'
                        _template += '</table>';
                        var _d = MakeJsonPager(data, 'div#' + containerId + ' div.pager', page_no, 'ShowLogOperationList', ',\'' + containerId+'\'');
                        $('div#' + containerId+' div.grid').html(HandlebarsToHtml(_template, _d));
                        $('div#' + containerId+' table.tblGrid').addClass("grid");

                    } else {
                        $('div#' + containerId+' div.grid').html("Няма намерени данни.");
                        $('div#' + containerId+' div.pager').html('');
                    }
                }
            });
        }
        function ShowLogOperationCompared(containerId,id, sender) {

            $('div#' + containerId+' TD.tdList td').removeClass("selected");
            $.ajax({
                type: 'GET',
                async: true,
                cache: false,
                url: '@Url.Action("Get_LogOperationHTMLwithPrior", "Ajax")',
                data: { controller_name: $('#' + containerId).data('controller'), action_name: $('#' + containerId).data('action'), object_key: $('#' +containerId).data('key'),currentId: id },
                success: function (data) {
                    $('div#' + containerId+' TD.tdHTML').html(LogOperationCompareVersions(htmlUnescape(data.current), htmlUnescape(data.prior)));
                    $(sender).closest('tr').find('td').addClass("selected");
                    return false;
                }
            });
            return false;
        }
        function SaveChangeInformation(changeDescription) {
            $.ajax({
                type: 'POST',
                async: false,
                cache: false,
                url: '@Url.Action("SaveChange_LogOperation", "Ajax")',
                data: { controller_name: '@controller', action_name: '@action', object_key: '@Model.ObjectKey', changeDescription: changeDescription }
            });
        }
    </script>

}
