@using IOWebApplication.Infrastructure.Models.ViewModels.Money
@using IOWebApplication.Infrastructure.Constants
@model ObligationMainDataVM

@{
    var nameAdd = "";
    var sourceTypeId = 0;
    @if (Model.CaseSessionActId > 0 || Model.CaseSessionId > 0)
    {
        nameAdd = "Добави (за лица)";
        sourceTypeId = SourceTypeSelectVM.CasePerson;
    }
    else if (Model.DocumentId > 0)
    {
        nameAdd = "Добави";
        sourceTypeId = SourceTypeSelectVM.DocumentPerson;
    }
    IAccessControl access = (IAccessControl)ViewBag.AccessControl;
}

@if (access.CanChange)
{
    <div class="row">
        <div class="col-md-12 text-right pb-15">
            <a asp-controller="Money" asp-action="AddObligation" asp-route-caseSessionActId="@Model.CaseSessionActId" asp-route-documentId="@Model.DocumentId" asp-route-caseSessionId="@Model.CaseSessionId" asp-route-sourceTypeId="@sourceTypeId" class="btn btn-success btn-sm">
                <i class="fa fa-plus"></i>
                @nameAdd
            </a>
        </div>
        @if (Model.CaseSessionActId > 0 || Model.CaseSessionId > 0)
        {
            <div class="col-md-12 text-right pb-15">
                <a asp-controller="Money" asp-action="AddObligation" asp-route-caseSessionActId="@Model.CaseSessionActId" asp-route-documentId="@Model.DocumentId" asp-route-caseSessionId="@Model.CaseSessionId" asp-route-sourceTypeId="@SourceTypeSelectVM.CaseLawUnit" class="btn btn-success btn-sm">
                    <i class="fa fa-plus"></i>
                    Добави (за съдебен състав)
                </a>
            </div>
        }
    </div>

    <div class="row">
        <div class="col-md-6 text-left pb-15">
            <button type="button" class="btn btn-primary" id="btnGetCheck" onclick="MakePay()" value="Плащане" title="Плащане">
                Плащане
                <i class="fa fa-paypal" title="Плащане"></i>
            </button>
            @if (Model.CaseSessionActId > 0)
            {

                <button type="button" class="btn btn-primary" id="btnExecList" onclick="MakeExecList()" value="Изпълнителен лист" title="Изпълнителен лист">
                    Изпълнителен лист
                    <i class="fa fa-paypal" title="Изпълнителен лист"></i>
                </button>
            }
            @if (Model.CaseSessionId > 0)
            {

                <button type="button" class="btn btn-primary" id="btnOrder" onclick="MakeExpenseOrder()" value="Разходен ордер" title="Разходен ордер">
                    Разходен ордер
                    <i class="fa fa-paypal" title="Разходен ордер"></i>
                </button>
            }
        </div>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <table id="mainTableObligation" class="table table-hover table-striped"></table>
    </div>
</div>

<script>
    var table;
    function ReloadDatatable() {
        refreshTable('#mainTableObligation');
    }

        $(function () {
            table = $('#mainTableObligation').DataTable({
                ajax: {
                    "url": "@Url.Action("ListDataObligation", "Money")",
                    "type": "POST",
                    "datatype": "json",
                    data: function (d) {
                        d.caseSessionActId = @(Model.CaseSessionActId??0);
                        d.documentId = @(Model.DocumentId??0);
                        d.caseSessionId = @(Model.CaseSessionId??0);
                    },
                    initialCall: false
                },
                deferLoading: deferLoadingOnTab('#mainTableObligation'),
                columns: [
                    {
                        name: "checkRow",
                        data: "checkRow",
                        title: '<input type="checkbox" id="select-all" onclick="selectAll();">',
                        sortable: false,
                        searchable: false,
                        "render": function (item, type, row, meta) {
                            return '<input type="checkbox" value="' + row.id + '">';
                        }
                    },
                    {
                        name: 'obligationNumber',
                        data: 'obligationNumber',
                        title: 'Номер',
                        sortable: true,
                        searchable: false
                    },
                    {
                        className: 'col-md-1',
                        name: 'obligationDate',
                        data: 'obligationDate',
                        title: 'От дата',
                        sortable: true,
                        searchable: false,
                        "render": function (value) {
                            if (value)
                                return moment(value).format("DD.MM.YYYY");
                            else
                                return "";
                        }
                    },
                    {
                        name: 'casePersonUic',
                        data: 'casePersonUic',
                        title: 'Идентификатор',
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'casePersonName',
                        data: 'casePersonName',
                        title: 'Лице',
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'moneyTypeName',
                        data: 'moneyTypeName',
                        title: 'Вид сума / задължение',
                        sortable: true,
                        searchable: true
                    },
                    {
                        className: "text-right",
                        name: 'amount',
                        data: 'amount',
                        title: 'Сума',
                        sortable: true,
                        searchable: true,
                        "render": function (value) {
                            if (value)
                                return parseFloat(value).toFixed(2);
                            else
                                return "0.00";
                        }
                    },
                    {
                        className: "text-right",
                        name: 'amountPay',
                        data: 'amountPay',
                        title: 'Платена сума',
                        sortable: true,
                        searchable: false,
                        "render": function (value) {
                            if (value)
                                return parseFloat(value).toFixed(2);
                            else
                                return "0.00";
                        }
                    },
                    {
                        className: "text-right",
                        name: 'amountForPay',
                        data: 'amountForPay',
                        title: 'Остатък',
                        sortable: true,
                        searchable: false,
                        "render": function (value) {
                            if (value)
                                return parseFloat(value).toFixed(2);
                            else
                                return "0.00";
                        }
                    }
                        @if (Model.CaseSessionId > 0)
                        {
                         <text>
                    ,
                    {
                        name: 'regNumberExpenseOrder',
                        data: 'regNumberExpenseOrder',
                        title: 'РКО',
                        sortable: true,
                        searchable: true,
                        "render": function (a, b, item, d) {
                            return TemplateToHtml('#templateExpenseOrder', item);
                        }
                    }
                        </text>
                        }

                        @if (Model.CaseSessionActId > 0 || Model.CaseSessionId > 0)
                        {
                         <text>
                        ,
                    {
                            className: "text-right",
                            name: 'regNumberExecList',
                            data: 'regNumberExecList',
                            title: 'ИЛ',
                            sortable: true,
                            searchable: true,
                            "render": function (a, b, item, d) {
                                return TemplateToHtml('#templateExecList', item);
                            }
                        }
                        </text>
                        }
                    ,
                    {
                            name: 'isActive',
                        data: "isActive",
                        title: 'Активен',
                        sortable: true,
                        searchable: false,
                        className: "text-center",
                        "render": function (value) {
                                    return value ? 'Да' : 'Не';
                                }
                            },
                    {
                            name: 'actions',
                        data: "id",
                        title: "",
                        sortable: false,
                        searchable: false,
                        className: "text-center noExport",
                        "render": function (value) {
                                    return TemplateToHtml('#templateEditObligation', value);
                                }
                            }
                ]
            });
        });
</script>

<script id="templateEditObligation" type="text/x-handlebars-template">
    @if (access.CanChange)
    {
        <a href="@Url.Action("EditObligation", "Money")?id={{this}}" class="btn btn-warning btn-sm" title="Редакция"><i class="fa fa-edit"></i><span class="hidden-sm hidden-xs"></span></a>
    }
</script>

<script>
    function selectAll() {
        var check = $("#select-all").is(':checked');
        var rows = table.rows({ 'search': 'applied' }).nodes();
        $('input[type="checkbox"]', rows).prop('checked', check);
    }

    function GetAllCheckIds() {
        var ids = "";
        table.$('input[type="checkbox"]').each(function () {
            if (this.checked) {
                if (ids != "") {
                    ids = ids + ",";
                }
                ids = ids + this.value;
            }
        });
        return ids;
    }

    function MakePay()
    {
        if (table === undefined) return;
        var ids = GetAllCheckIds();

        if (ids == "") {
            messageHelper.ShowErrorMessage('Изберете поне едно задължение.');
            return;
        }
        requestContent('@Url.Action("Payment","Money")'
            , { idStr:ids}
            , function (data) {
                ShowModalDialog('Плащане', data);
            });
    }

    function MakeExecList() {
        if (table === undefined) return;
        var ids = GetAllCheckIds();

        if (ids == "") {
            messageHelper.ShowErrorMessage('Изберете поне едно задължение.');
            return;
        }
        tinymce.remove('#Content');
        requestContent('@Url.Action("ExecList", "Money")'
            , { idStr: ids }
            , function (data) {
                ShowModalDialog('Изпълнителен лист', data);
            });
    }

    function MakeExpenseOrder() {
        if (table === undefined) return;
        var ids = GetAllCheckIds();

        if (ids == "") {
            messageHelper.ShowErrorMessage('Изберете поне едно задължение.');
            return;
        }
        requestContent('@Url.Action("ExpenseOrder","Money")'
            , { idStr:ids}
            , function (data) {
                ShowModalDialog('Разходен ордер', data);
            });
    }

</script>
<script id="templateExpenseOrder" type="text/x-handlebars-template">
    {{#if expenseOrderId}}
    <a href="@Url.Action("EditExpenseOrder","Money")/{{expenseOrderId}}" target="_blank" title="Преглед Разходен ордер">{{regNumberExpenseOrder}}</a>
    {{/if}}
</script>
<script id="templateExecList" type="text/x-handlebars-template">
    {{#if execListId}}
    <a href="@Url.Action("EditExecList","Money")/{{execListId}}" target="_blank" title="Преглед Изпълнителен лист">{{regNumberExecList}}</a>
    {{/if}}
</script>
