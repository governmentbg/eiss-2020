@model CaseSessionActCommandVM
@using IOWebApplication.Infrastructure.Models.ViewModels.Case
@{
    Layout = null;
}

<style>
    div.just {
        text-align: justify;
        text-justify: inter-word;
    }
</style>

<div style="font-family: 'Times New Roman'">
    <center>
        <b>ЗАПОВЕД № @Model.CaseSessionActPrint.ActRegNumber</b><br />
        <b>ЗА ИЗПЪЛНЕНИЕ НА ПАРИЧНО ЗАДЪЛЖЕНИЕ</b><br />
        <b>по чл. 410 от ГПК</b><br />
        @Model.CaseSessionActPrint.CourtCity на @Model.CaseSessionActPrint.SessionDate.ToString("dd.MM.yyyy") г.<br />
    </center>
    <div class="just">
        @Model.CaseSessionActPrint.CourtName, @Model.CaseSessionActPrint.DepartmentName в проведеното на @Model.CaseSessionActPrint.SessionDate.ToString("dd.MM.yyyy") г. в закрито разпоредително заседание по @Model.CaseSessionActPrint.CaseTypeName № @Model.CaseSessionActPrint.CaseRegNumber/@Model.CaseSessionActPrint.CaseRegYear г., по описа на съда за @Model.CaseSessionActPrint.CaseRegYear г.@(string.IsNullOrEmpty(Model.CaseSessionActPrint.DepartmentName) ? string.Empty : " " + Model.CaseSessionActPrint.DepartmentName), докладвано от @Model.CaseSessionActPrint.JudgeReporter, районен съдия, като разгледа подаденото заявление за издаване на заповед за изпълнение по реда на чл. 410 и сл. ГПК, и след като прецени, че са налице предпоставките за уважаване на искането и на основание чл. 411, ал. 3 от ГПК<br />
    </div>
    <center>
        <b>РАЗПОРЕЖДА:</b><br />
    </center>
    <br />

    @Html.Raw("<div class='just'>")
    @Html.Raw(string.Join(" и ", Model.CaseSessionActPrint.RightSide) + "<br />")
    @Html.Raw("</div>")

    @if (Model.CaseSessionActPrint.RightSide.Count() > 1)
    {
        @Html.Raw("да заплатят на " + "<br />")
    }
    else
    {
        @Html.Raw("да заплати на " + "<br />")
    }

    @Html.Raw("<div class='just'>")
    @Html.Raw(string.Join(" и ", Model.CaseSessionActPrint.LeftSide) + "<br />")
    @Html.Raw("</div>")

    <br />
    @foreach (var caseMoneyClaim in Model.CaseFastProcessView.CaseMoneyClaims)
    {
        @foreach (var caseMoneyCollectionTotal in caseMoneyClaim.CaseMoneyCollectionTotalSums.OrderBy(x => x.CurrencyId))
        {
            @Html.Raw("сумата " + caseMoneyCollectionTotal.TotalSum.ToString("### ### ##0.00") + " /" + caseMoneyCollectionTotal.TotalSumText + "/" + "<br />");
        }
        foreach (var caseMoneyCollection in caseMoneyClaim.CaseMoneyCollections.Where(x => x.IsMoney && ((x.RespectedAmount > 0) || (x.PretendedAmount == 0 && x.RespectedAmount == 0))))
        {
            @Html.Raw("<div class='just'>")
            @Html.Raw("за " + caseMoneyCollection.CaseMoneyCollectionTypeLabel + (caseMoneyCollection.RespectedAmount > 0 ? " в размер на " + caseMoneyCollection.RespectedAmount.ToString("### ### ##0.00") + " " + caseMoneyCollection.CurrencyCode + " /" + caseMoneyCollection.RespectedAmountString + "/ " : string.Empty) + " от " + caseMoneyCollection.DateFrom?.ToString("dd.MM.yyyy") + " г. " + caseMoneyCollection.DateToLabel + ((caseMoneyCollection.JointDistributionBool && (Model.CaseSessionActPrint.RightSide.Count() > 1)) ? " солидарно" : string.Empty) + (!string.IsNullOrEmpty(caseMoneyCollection.Description) ? " " + caseMoneyCollection.Description : string.Empty) + " <br />");
            @Html.Raw("</div>")

            @if (!caseMoneyCollection.JointDistributionBool)
            {
                @if (caseMoneyCollection.MoneyCollectionPersons.Where(x => x.RespectedAmount > 0).ToList().Count > 0)
                {
                    @Html.Raw("Разделно на:" + "<br />");
                    foreach (var caseMoneyCollectionPerson in caseMoneyCollection.MoneyCollectionPersons.Where(x => x.RespectedAmount > 0))
                    {
                        @Html.Raw(caseMoneyCollectionPerson.CasePersonLabel + " в размер на " + caseMoneyCollectionPerson.RespectedAmount.ToString("### ### ##0.00") + " " + caseMoneyCollectionPerson.CurrencyCode + " /" + caseMoneyCollectionPerson.RespectedAmountString + "/ " + "<br />");
                    }
                }
            }

            foreach (var caseMoneyCollectionExtra in caseMoneyCollection.CaseMoneyCollectionExtras.Where(x => ((x.RespectedAmount > 0) || (x.PretendedAmount == 0 && x.RespectedAmount == 0))))
            {
                @Html.Raw("<div class='just'>")
                @Html.Raw("с/със " + (caseMoneyCollectionExtra.RespectedAmount > 0 ? caseMoneyCollectionExtra.RespectedAmount.ToString("### ### ##0.00") + " " + caseMoneyCollectionExtra.CurrencyCode + " /" + caseMoneyCollectionExtra.RespectedAmountString + "/ " : string.Empty) + caseMoneyCollectionExtra.CaseMoneyCollectionKindLabel + " от " + caseMoneyCollectionExtra.DateFrom?.ToString("dd.MM.yyyy") + " г. " + caseMoneyCollectionExtra.DateToLabel + ((caseMoneyCollectionExtra.JointDistributionBool && (Model.CaseSessionActPrint.RightSide.Count() > 1)) ? " солидарно" : string.Empty) + (!string.IsNullOrEmpty(caseMoneyCollectionExtra.Description) ? " " + caseMoneyCollectionExtra.Description : string.Empty) + " <br />");
                @Html.Raw("</div>")

                @if (!caseMoneyCollectionExtra.JointDistributionBool)
                {
                    @if (caseMoneyCollectionExtra.MoneyCollectionPersons.Where(x => x.RespectedAmount > 0).ToList().Count > 0)
                    {
                        @Html.Raw("Разделно на:" + "<br />");
                        foreach (var caseMoneyCollectionPerson in caseMoneyCollectionExtra.MoneyCollectionPersons.Where(x => x.RespectedAmount > 0))
                        {
                            @Html.Raw(caseMoneyCollectionPerson.CasePersonLabel + " в размер на " + caseMoneyCollectionPerson.RespectedAmount.ToString("### ### ##0.00") + " " + caseMoneyCollectionPerson.CurrencyCode + " /" + caseMoneyCollectionPerson.RespectedAmountString + "/ " + "<br />");
                        }
                    }
                }
            }
        }

        if (!string.IsNullOrEmpty(caseMoneyClaim.Motive))
        {
            @Html.Raw("<br />");
            @Html.Raw("<div class='just'>")
            @Html.Raw(caseMoneyClaim.Motive + "<br />");
            @Html.Raw("</div>")
        }

        if (!string.IsNullOrEmpty(caseMoneyClaim.PartyNames))
        {
            @Html.Raw("<br />");
            @Html.Raw("<div class='just'>")
            @Html.Raw(caseMoneyClaim.PartyNames + "<br />");
            @Html.Raw("</div>")
        }
    }
    <br />

    @foreach (var caseMoneyClaim in Model.CaseFastProcessView.CaseMoneyClaims)
    {
        foreach (var caseMoneyCollection in caseMoneyClaim.CaseMoneyCollections.Where(x => x.IsItem))
        {
            @Html.Raw("и да върне:<br />");
            @Html.Raw(caseMoneyCollection.Description + " на стойност " + caseMoneyCollection.PretendedAmount.ToString("### ### ##0.00") + " " + caseMoneyCollection.CurrencyCode + " /" + caseMoneyCollection.PretendedAmountString + "/ " + "<br />");
            foreach (var caseMoneyCollectionExtra in caseMoneyCollection.CaseMoneyCollectionExtras)
            {
                @Html.Raw("с/със " + caseMoneyCollectionExtra.PretendedAmount.ToString("### ### ##0.00") + " " + caseMoneyCollectionExtra.CurrencyCode + " /" + caseMoneyCollectionExtra.PretendedAmountString + "/ " + caseMoneyCollectionExtra.CaseMoneyCollectionKindLabel + " от " + caseMoneyCollectionExtra.DateFrom?.ToString("dd.MM.yyyy") + " г. до " + caseMoneyCollectionExtra.DateTo?.ToString("dd.MM.yyyy") + " г.<br />");
            }
        }
    }
    @if (Model.CaseFastProcessView.CaseMoneyExpenses.Count > 0)
    {
        @Html.Raw("както и сумите:<br />");
        foreach (var caseMoneyExpense in Model.CaseFastProcessView.CaseMoneyExpenses)
        {
            @Html.Raw("&nbsp;&nbsp; - " + caseMoneyExpense.Amount.ToString("### ### ##0.00") + " " + caseMoneyExpense.CurrencyCode + " /" + caseMoneyExpense.AmountString + "/ " + caseMoneyExpense.CaseMoneyExpenseTypeLabel + (!string.IsNullOrEmpty(caseMoneyExpense.Description) ? " " + caseMoneyExpense.Description : string.Empty) + "<br />");
            @if (!caseMoneyExpense.JointDistributionBool)
            {
                @if (caseMoneyExpense.MoneyExpensePeople.Where(x => x.PersonAmount > 0).ToList().Count > 0)
                {
                    @Html.Raw("&nbsp;&nbsp;&nbsp; Разделно на:" + "<br />");
                    foreach (var caseMoneyExpensePerson in caseMoneyExpense.MoneyExpensePeople.Where(x => x.PersonAmount > 0))
                    {
                        @Html.Raw("&nbsp;&nbsp;&nbsp; " + caseMoneyExpensePerson.CasePersonLabel + " в размер на " + caseMoneyExpensePerson.PersonAmount.ToString("### ### ##0.00") + " " + caseMoneyExpensePerson.CurrencyCode + " /" + caseMoneyExpensePerson.PersonAmountString + "/ " + "<br />");
                    }
                }
            }
        }
        @Html.Raw("разноски по делото.<br />");
    }
    Вземането произтича от следните обстоятелства:<br />
    @foreach (var caseMoneyClaim in Model.CaseFastProcessView.CaseMoneyClaims)
    {
        if (caseMoneyClaim.CaseMoneyCollections.Any(x => x.IsMoney || x.IsItem))
        {
            @Html.Raw("<div class='just'>")
            @Html.Raw("&nbsp;&nbsp;" + (caseMoneyClaim.CaseMoneyClaimTypeLabel == string.Empty ? " - " + caseMoneyClaim.CaseMoneyClaimGroupLabel : string.Empty) + ((caseMoneyClaim.CaseMoneyClaimTypeLabel != string.Empty) ? " - " + caseMoneyClaim.CaseMoneyClaimTypeLabel : string.Empty) + (!string.IsNullOrEmpty(caseMoneyClaim.ClaimNumber) ? " Номер: " + caseMoneyClaim.ClaimNumber : string.Empty) + (!string.IsNullOrEmpty(caseMoneyClaim.Description) ? " " + caseMoneyClaim.Description : string.Empty) + " <br />");
            @Html.Raw("</div>")
        }
    }
    Присъдената сума може да бъде:<br />
    @foreach (var caseBankAccount in Model.CaseFastProcessView.CaseBankAccounts.OrderBy(x => x.CaseBankAccountTypeId))
    {
        if (caseBankAccount.CaseBankAccountTypeId == 1)
        {
            @Html.Raw("&nbsp;&nbsp; - внесена по следната банкова сметка на заявителя/кредитора IBAN: " + caseBankAccount.LabelIBAN + " BIC: " + caseBankAccount.LabelBIC + " " + caseBankAccount.BankName + (!string.IsNullOrEmpty(caseBankAccount.Description) ? " " + caseBankAccount.Description : string.Empty) + "<br />");
        }
        else
        {
            @Html.Raw("&nbsp;&nbsp; - платена по следния начин: " + caseBankAccount.Description + "<br />");
        }
    }
    <br />
    @if (Model.CaseFastProcessView.CaseMoneyClaims.Any(x => x.CaseMoneyCollections.Any(c => c.IsMoney && ((c.RespectedAmount < 0.001m && c.PretendedAmount > 0) || (c.CaseMoneyCollectionExtras.Any(e => e.RespectedAmount < 0.001m && e.PretendedAmount > 0))))))
    {
        @Html.Raw("Неуважени суми: <br />");
        @foreach (var caseMoneyClaim in Model.CaseFastProcessView.CaseMoneyClaims)
        {
            foreach (var caseMoneyCollection in caseMoneyClaim.CaseMoneyCollections.Where(x => x.IsMoney))
            {
                @if ((caseMoneyCollection.RespectedAmount < (decimal)0.001 && caseMoneyCollection.PretendedAmount > 0))
                {
                    @Html.Raw("<div class='just'>")
                    @Html.Raw(caseMoneyCollection.CaseMoneyCollectionTypeLabel + (!string.IsNullOrEmpty(caseMoneyCollection.Description) ? " " + caseMoneyCollection.Description : string.Empty) + "<br />");
                    @Html.Raw("</div>")
                }

                foreach (var caseMoneyCollectionExtra in caseMoneyCollection.CaseMoneyCollectionExtras.Where(x => x.RespectedAmount < (decimal)0.001 && x.PretendedAmount > 0))
                {
                    @Html.Raw(caseMoneyCollectionExtra.CaseMoneyCollectionKindLabel + (!string.IsNullOrEmpty(caseMoneyCollectionExtra.Description) ? " " + caseMoneyCollectionExtra.Description : string.Empty) + "<br />");
                }
            }
        }
    }
    @*else
    {
        @Html.Raw("Неуважени суми: няма <br />");
    }*@

    <br />

    @if (!string.IsNullOrEmpty(Model.CaseFastProcessView.FastProcessVM.Description))
    {
        @Html.Raw(Model.CaseFastProcessView.FastProcessVM.Description)
        <br />
        <br />
    }

    <center>
        <b>ВАЖНА ИНФОРМАЦИЯ ЗА ДЛЪЖНИКА</b>
    </center>
    <br />
    Предоставя Ви се възможност в едномесечен срок:<br />
    &nbsp; &nbsp; &nbsp; &nbsp; 1.Да подадете в съда писмено възражение по образец, приложен към заповедта, че не дължите изпълнение на вземането по издадената заповед за изпълнение.В случай че възражението е неоснователно, може да понесете разноски в по - висок размер от посочения в заповедта.<br />
    &nbsp; &nbsp; &nbsp; &nbsp; 2.Да платите сумата, посочена в настоящата заповед, и да подадете в съда писмено възражение по образец, приложен към заповедта, за изпълнение изцяло или частично на задължението Ви. Към това възражение се прилагат доказателства за изпълнението на задължението с препис за заявителя.<br />
    &nbsp; &nbsp; &nbsp; &nbsp; 3.Ако възражението бъде подадено в едномесечния срок, заповедта няма да влезе в сила.<br />
    &nbsp; &nbsp; &nbsp; &nbsp; 4.Настоящата заповед е издадена единствено на информация, предоставена от кредитора. Информацията, съдържаща се в заявлението, не е проверявана от съда.<br />
    &nbsp; &nbsp; &nbsp; &nbsp; 5.Ако до изтичане на едномесечния срок не изпълните задължението или не подадете писмено възражение до съда, заповедта влиза в сила и подлежи на принудително изпълнение.<br />
    &nbsp; &nbsp; &nbsp; &nbsp; 6.Заповедта подлежи на обжалване пред @Model.CaseSessionActPrint.CourtParent само в частта за разноските в едномесечен срок от връчването.<br />
    <br />
    <br />
    <div align="right">
        Районен съдия: ...............................................<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;( @Model.CaseSessionActPrint.JudgeReporter )
    </div>
</div>

