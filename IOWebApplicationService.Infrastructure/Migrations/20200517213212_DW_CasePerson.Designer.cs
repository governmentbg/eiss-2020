// <auto-generated />
using System;
using IOWebApplicationService.Infrastructure.Data.DW;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IOWebApplicationService.Infrastructure.Migrations
{
    [DbContext(typeof(DWDbContext))]
    [Migration("20200517213212_DW_CasePerson")]
    partial class DW_CasePerson
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCase", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseCharacterId")
                        .HasColumnName("case_character_id");

                    b.Property<string>("CaseCharacterName")
                        .HasColumnName("case_character_name");

                    b.Property<string>("CaseCodeFullObject")
                        .HasColumnName("case_code_full_object");

                    b.Property<int?>("CaseCodeId")
                        .HasColumnName("case_code_id");

                    b.Property<string>("CaseCodeLawbaseDescription")
                        .HasColumnName("case_code_lawbase_description");

                    b.Property<string>("CaseCodeName")
                        .HasColumnName("case_code_name");

                    b.Property<int>("CaseDurationMonths")
                        .HasColumnName("case_duration_months");

                    b.Property<int>("CaseGroupId")
                        .HasColumnName("case_group_id");

                    b.Property<string>("CaseGroupName")
                        .HasColumnName("case_group_name");

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<DateTime?>("CaseInforcedDate")
                        .HasColumnName("case_inforced_date");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int?>("CaseReasonId")
                        .HasColumnName("case_reason_id");

                    b.Property<string>("CaseReasonName")
                        .HasColumnName("case_reason_name");

                    b.Property<int>("CaseStateId")
                        .HasColumnName("case_state_id");

                    b.Property<string>("CaseStateName")
                        .HasColumnName("case_state_name");

                    b.Property<string>("CaseTypeCode")
                        .HasColumnName("case_type_code");

                    b.Property<int>("CaseTypeId")
                        .HasColumnName("case_type_id");

                    b.Property<string>("CaseTypeName")
                        .HasColumnName("case_type_name");

                    b.Property<int?>("CaseTypeUnitId")
                        .HasColumnName("case_type_unit_id");

                    b.Property<string>("CaseTypeUnitName")
                        .HasColumnName("case_type_unit_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<decimal>("ComplexIndex")
                        .HasColumnName("complex_index");

                    b.Property<decimal?>("CorrectionLoadIndex")
                        .HasColumnName("correction_load_index");

                    b.Property<int?>("CourtGroupId")
                        .HasColumnName("court_group_id");

                    b.Property<string>("CourtGroupName")
                        .HasColumnName("court_group_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<long>("DocumentId")
                        .HasColumnName("document_id");

                    b.Property<string>("DocumentName")
                        .HasColumnName("document_name");

                    b.Property<long>("DocumentTypeId")
                        .HasColumnName("document_type_id");

                    b.Property<string>("DocumentTypeName")
                        .HasColumnName("document_type_name");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EISSPNumber")
                        .HasColumnName("eispp_number");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<bool?>("IsOldNumber")
                        .HasColumnName("is_old_number");

                    b.Property<bool>("IsRestictedAccess")
                        .HasColumnName("is_resticted_access");

                    b.Property<int?>("LoadGrouId")
                        .HasColumnName("load_group_id");

                    b.Property<string>("LoadGrouName")
                        .HasColumnName("load_group_name");

                    b.Property<int?>("LoadGroupLinkId")
                        .HasColumnName("load_group_link_id");

                    b.Property<decimal>("LoadIndex")
                        .HasColumnName("load_index");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<int?>("ProcessPriorityId")
                        .HasColumnName("process_priority_id");

                    b.Property<string>("ProcessPriorityName")
                        .HasColumnName("process_priority_name");

                    b.Property<DateTime>("RegDate")
                        .HasColumnName("reg_date");

                    b.Property<string>("RegDateStr")
                        .HasColumnName("reg_date_str");

                    b.Property<string>("RegNumber")
                        .HasColumnName("reg_number");

                    b.Property<string>("ShortNumber")
                        .HasColumnName("short_number");

                    b.Property<int?>("ShortNumberValue")
                        .HasColumnName("short_number_value");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseLawUnit", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int?>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtDepartmentId")
                        .HasColumnName("court_department_id");

                    b.Property<string>("CourtDepartmentName")
                        .HasColumnName("court_department_name");

                    b.Property<int?>("CourtDutyId")
                        .HasColumnName("court_duty_id");

                    b.Property<string>("CourtDutyName")
                        .HasColumnName("court_duty_name");

                    b.Property<int?>("CourtGroupId")
                        .HasColumnName("court_group_id");

                    b.Property<string>("CourtGroupName")
                        .HasColumnName("court_group_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnName("date_from");

                    b.Property<string>("DateFromStr")
                        .HasColumnName("date_from_str");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnName("date_to");

                    b.Property<string>("DateToStr")
                        .HasColumnName("date_to_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("JudgeDepartmentRoleId")
                        .HasColumnName("judge_department_role_id");

                    b.Property<string>("JudgeDepartmentRoleName")
                        .HasColumnName("judge_department_role_name");

                    b.Property<int>("JudgeRoleId")
                        .HasColumnName("judge_role_id");

                    b.Property<string>("JudgeRoleName")
                        .HasColumnName("judge_role_name");

                    b.Property<string>("LawUnitFullName")
                        .HasColumnName("lawunit_full_name");

                    b.Property<int>("LawUnitId")
                        .HasColumnName("lawunit_id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_lawunit");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseLifecycle", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnName("date_from");

                    b.Property<string>("DateFromStr")
                        .HasColumnName("date_from_str");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnName("date_to");

                    b.Property<string>("DateToStr")
                        .HasColumnName("date_to_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int>("DurationMonths")
                        .HasColumnName("duration_months");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int>("Iteration")
                        .HasColumnName("iteration");

                    b.Property<int>("LifecycleTypeId")
                        .HasColumnName("lifecycle_type_id");

                    b.Property<string>("LifecycleTypeIdName")
                        .HasColumnName("lifecycle_type_id_name");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_lifecycle");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCasePerson", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthCityCode")
                        .HasColumnName("birth_city_code");

                    b.Property<string>("BirthCityName")
                        .HasColumnName("birth_city_code");

                    b.Property<string>("BirthCountryCode")
                        .HasColumnName("birth_country_code");

                    b.Property<string>("BirthCountryName")
                        .HasColumnName("birth_country_name");

                    b.Property<string>("BirthForeignPlace")
                        .HasColumnName("birth_foreign_place");

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CasePersonIdentificator")
                        .HasColumnName("case_person_identificator");

                    b.Property<int?>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnName("date_from");

                    b.Property<string>("DateFromStr")
                        .HasColumnName("date_from_str");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnName("date_to");

                    b.Property<string>("DateToStr")
                        .HasColumnName("date_to_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("DescriptionExpired")
                        .HasColumnName("description_expired");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<bool?>("ForNotification")
                        .HasColumnName("for_notification");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<bool?>("IsArrested")
                        .HasColumnName("is_arrested");

                    b.Property<bool>("IsInitialPerson")
                        .HasColumnName("is_initial_person");

                    b.Property<string>("LinkRelationsString")
                        .HasColumnName("link_relations_string");

                    b.Property<int?>("MilitaryRangId")
                        .HasColumnName("military_rang_id");

                    b.Property<string>("MilitaryRangName")
                        .HasColumnName("military_rang_name");

                    b.Property<int?>("NotificationNumber")
                        .HasColumnName("notification_number");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<int?>("PersonMaturityId")
                        .HasColumnName("person_maturity_id");

                    b.Property<string>("PersonMaturityName")
                        .HasColumnName("person_maturity_name");

                    b.Property<int>("PersonRoleId")
                        .HasColumnName("person_role_id");

                    b.Property<string>("PersonRoleName")
                        .HasColumnName("person_role_name");

                    b.Property<int>("RowNumber")
                        .HasColumnName("row_number");

                    b.Property<string>("UserExpiredId")
                        .HasColumnName("user_expired_id");

                    b.Property<string>("UserExpiredName")
                        .HasColumnName("user_expired_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_person");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSelectionProtocol", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int?>("CaseLawUnitDismisalId")
                        .HasColumnName("case_lawunit_dismisal_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CompartmentID")
                        .HasColumnName("compartment_id");

                    b.Property<string>("CompartmentName")
                        .HasColumnName("compartment_name");

                    b.Property<int?>("CourtDutyId")
                        .HasColumnName("court_duty_id");

                    b.Property<string>("CourtDutyName")
                        .HasColumnName("court_duty_name");

                    b.Property<int?>("CourtGroupId")
                        .HasColumnName("court_group_id");

                    b.Property<string>("CourtGroupName")
                        .HasColumnName("court_group_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<bool>("IncludeCompartmentJudges")
                        .HasColumnName("include_compartment_judges");

                    b.Property<int>("JudgeRoleId")
                        .HasColumnName("judge_role_id");

                    b.Property<string>("JudgeRoleName")
                        .HasColumnName("judge_role_name");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<int?>("SelectedLawUnitId")
                        .HasColumnName("selected_lawunit_id");

                    b.Property<string>("SelectedLawUnitName")
                        .HasColumnName("selected_lawunit_name");

                    b.Property<DateTime>("SelectionDate")
                        .HasColumnName("selection_date");

                    b.Property<int>("SelectionModeId")
                        .HasColumnName("selection_mode_id");

                    b.Property<string>("SelectionModeName")
                        .HasColumnName("selection_mode_name");

                    b.Property<int>("SelectionProtokolStateId")
                        .HasColumnName("selection_protokol_state_id");

                    b.Property<string>("SelectionProtokolStateName")
                        .HasColumnName("selection_protokol_state_name");

                    b.Property<int?>("SpecialityId")
                        .HasColumnName("speciality_id");

                    b.Property<string>("SpecialityName")
                        .HasColumnName("speciality_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_selection_protocol");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSelectionProtocolCompartment", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CaseSelectionProtokolId")
                        .HasColumnName("case_selection_protokol_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int>("LawUnitId")
                        .HasColumnName("lawunit_id");

                    b.Property<string>("LawUnitName")
                        .HasColumnName("lawunit_name");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_selection_protocol_compartment");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSelectionProtocolLawunit", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseCount")
                        .HasColumnName("case_count");

                    b.Property<int?>("CaseGroupId")
                        .HasColumnName("case_group_id");

                    b.Property<string>("CaseGroupName")
                        .HasColumnName("case_group_name");

                    b.Property<int?>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CaseSelectionProtokolId")
                        .HasColumnName("case_selection_protokol_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int>("LawUnitId")
                        .HasColumnName("lawunit_id");

                    b.Property<string>("LawUnitName")
                        .HasColumnName("lawunit_name");

                    b.Property<int>("LoadIndex")
                        .HasColumnName("load_index");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<bool>("SelectedFromCaseGroup")
                        .HasColumnName("selected_from_case_group");

                    b.Property<int>("StateId")
                        .HasColumnName("state_id");

                    b.Property<string>("StateName")
                        .HasColumnName("state_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_selection_protocol_lawunit");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSession", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int>("CompartmentId")
                        .HasColumnName("compartment_id");

                    b.Property<string>("CompartmentName")
                        .HasColumnName("compartment_name");

                    b.Property<int?>("CourtHallId")
                        .HasColumnName("court_hall_id");

                    b.Property<string>("CourtHallName")
                        .HasColumnName("court_hall_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnName("date_from");

                    b.Property<string>("DateFromStr")
                        .HasColumnName("date_from_str");

                    b.Property<DateTime?>("DateReturned")
                        .HasColumnName("date_returned");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnName("date_to");

                    b.Property<string>("DateToStr")
                        .HasColumnName("date_to_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionExpired")
                        .HasColumnName("description_expired");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int>("JudgeReporterId")
                        .HasColumnName("judge_reporter_id");

                    b.Property<string>("JudgeReporterName")
                        .HasColumnName("judge_reporter_name");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("SessionFullJudgeStaff")
                        .HasColumnName("session_full_judge_staff");

                    b.Property<string>("SessionFullStaff")
                        .HasColumnName("session_full_staff");

                    b.Property<string>("SessionJudgeStaff")
                        .HasColumnName("session_judge_staff");

                    b.Property<string>("SessionJuriStaff")
                        .HasColumnName("session_juri_staff");

                    b.Property<int>("SessionStateId")
                        .HasColumnName("session_state_id");

                    b.Property<string>("SessionStateName")
                        .HasColumnName("session_state_name");

                    b.Property<int>("SessionTypeId")
                        .HasColumnName("session_type_id");

                    b.Property<string>("SessionTypeName")
                        .HasColumnName("session_type_name");

                    b.Property<string>("UserExpiredId")
                        .HasColumnName("user_expired_id");

                    b.Property<string>("UserExpiredName")
                        .HasColumnName("user_expired_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionAct", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActComplainResultId")
                        .HasColumnName("act_complain_result_id");

                    b.Property<int?>("ActComplainResultStateId")
                        .HasColumnName("act_complain_result_state_id");

                    b.Property<string>("ActComplainResultStateName")
                        .HasColumnName("act_complain_result_state_name");

                    b.Property<DateTime?>("ActDate")
                        .HasColumnName("act_date");

                    b.Property<string>("ActDateStr")
                        .HasColumnName("act_date_str");

                    b.Property<DateTime?>("ActDeclaredDate")
                        .HasColumnName("act_declared_date");

                    b.Property<string>("ActDeclaredDateStr")
                        .HasColumnName("act_declared_date_str");

                    b.Property<DateTime?>("ActInforcedDate")
                        .HasColumnName("act_inforced_date");

                    b.Property<string>("ActInforcedDateStr")
                        .HasColumnName("act_inforced_date_str");

                    b.Property<int?>("ActKindId")
                        .HasColumnName("act_kind_id");

                    b.Property<string>("ActKindName")
                        .HasColumnName("act_kind_name");

                    b.Property<DateTime?>("ActMotivesDeclaredDate")
                        .HasColumnName("act_motives_declared_date");

                    b.Property<string>("ActMotivesDeclaredDateStr")
                        .HasColumnName("act_motives_declared_date_str");

                    b.Property<int?>("ActResultId")
                        .HasColumnName("act_result_id");

                    b.Property<string>("ActResultName")
                        .HasColumnName("act_result_name");

                    b.Property<DateTime?>("ActReturnDate")
                        .HasColumnName("act_return_date");

                    b.Property<string>("ActReturnDateStr")
                        .HasColumnName("act_return_date_str");

                    b.Property<int>("ActStateId")
                        .HasColumnName("act_state_id");

                    b.Property<string>("ActStateName")
                        .HasColumnName("act_state_name");

                    b.Property<int>("ActTypeId")
                        .HasColumnName("act_type_id");

                    b.Property<string>("ActTypeName")
                        .HasColumnName("act_type_name");

                    b.Property<bool?>("CanAppeal")
                        .HasColumnName("can_appeal");

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("DepersonalizeUserId")
                        .HasColumnName("depersonalize_user_id");

                    b.Property<string>("DepersonalizeUserName")
                        .HasColumnName("depersonalize_user_name");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<bool>("IsFinalDoc")
                        .HasColumnName("is_final_doc");

                    b.Property<bool>("IsReadyForPublish")
                        .HasColumnName("is_ready_for_publish");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<DateTime?>("RegDate")
                        .HasColumnName("reg_date");

                    b.Property<string>("RegDateStr")
                        .HasColumnName("reg_date_str");

                    b.Property<string>("RegNumber")
                        .HasColumnName("reg_number");

                    b.Property<string>("RegNumberFull")
                        .HasColumnName("reg_number_full");

                    b.Property<string>("SecretaryUserId")
                        .HasColumnName("secretary_user_id");

                    b.Property<string>("SecretaryUserName")
                        .HasColumnName("secretary_user_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_act");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionActComplain", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CaseSessionActId")
                        .HasColumnName("case_session_act_id");

                    b.Property<int?>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<long>("ComplainDocumentId")
                        .HasColumnName("complain_document_id");

                    b.Property<string>("ComplainDocumentName")
                        .HasColumnName("document_name");

                    b.Property<long>("ComplainDocumentTypeId")
                        .HasColumnName("document_type_id");

                    b.Property<string>("ComplainDocumentTypeName")
                        .HasColumnName("document_type_name");

                    b.Property<int>("ComplainStateId")
                        .HasColumnName("complaint_state_id");

                    b.Property<string>("ComplainStateName")
                        .HasColumnName("complaint_state_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnName("document_date");

                    b.Property<string>("DocumentDateStr")
                        .HasColumnName("document_date_str");

                    b.Property<string>("DocumentNumber")
                        .HasColumnName("document_number");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("RejectDescription")
                        .HasColumnName("reject_description");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_act_complain");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionActComplainPerson", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CasePersonId")
                        .HasColumnName("complain_case_person_id");

                    b.Property<string>("CasePersonName")
                        .HasColumnName("complain_case_person_name");

                    b.Property<int>("CaseSessionActComplainId")
                        .HasColumnName("case_session_act_complain_id");

                    b.Property<int?>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_act_complain_person");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionActComplainResult", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActResultId")
                        .HasColumnName("act_result_id");

                    b.Property<string>("ActResultName")
                        .HasColumnName("act_result_name");

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<DateTime>("CaseRegDate")
                        .HasColumnName("case_reg_date");

                    b.Property<string>("CaseRegNumber")
                        .HasColumnName("case_reg_number");

                    b.Property<int>("CaseSessionActComplainId")
                        .HasColumnName("case_session_act_complain_id");

                    b.Property<int>("CaseSessionActId")
                        .HasColumnName("case_session_act_id");

                    b.Property<int?>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<int?>("CaseShortNumberValue")
                        .HasColumnName("case_short_number_value");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime?>("DateResult")
                        .HasColumnName("date_result");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_act_complain_result");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionActCoordination", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActCoordinationTypeId")
                        .HasColumnName("act_coordination_type_id");

                    b.Property<string>("ActCoordinationTypeName")
                        .HasColumnName("act_coordination_type_name");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CaseLawUnitId")
                        .HasColumnName("case_lawunit_id");

                    b.Property<string>("CaseLawUnitName")
                        .HasColumnName("case_lawunit_name");

                    b.Property<int>("CaseSessionActId")
                        .HasColumnName("case_session_act_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<string>("Content")
                        .HasColumnName("content");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_act_coordination");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionActDivorce", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDayMan")
                        .HasColumnName("birth_day_man");

                    b.Property<DateTime>("BirthDayWoman")
                        .HasColumnName("birth_day_woman");

                    b.Property<int?>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CasePersonManId")
                        .HasColumnName("case_person_man_id");

                    b.Property<string>("CasePersonManName")
                        .HasColumnName("case_person_man_name");

                    b.Property<int>("CasePersonWomanId")
                        .HasColumnName("case_person_woman_id");

                    b.Property<string>("CasePersonWomanName")
                        .HasColumnName("case_person_woman_name");

                    b.Property<int>("CaseSessionActId")
                        .HasColumnName("case_session_act_id");

                    b.Property<int>("ChildrenOver18")
                        .HasColumnName("children_over_18");

                    b.Property<int>("ChildrenUnder18")
                        .HasColumnName("children_under_18");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<string>("CountryCode")
                        .HasColumnName("country_code");

                    b.Property<DateTime?>("CountryCodeDate")
                        .HasColumnName("country_code_date");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<int>("DivorceCountMan")
                        .HasColumnName("divorce_count_man");

                    b.Property<int>("DivorceCountWoman")
                        .HasColumnName("divorce_count_woman");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<string>("EducationMan")
                        .HasColumnName("education_man");

                    b.Property<string>("EducationWoman")
                        .HasColumnName("education_woman");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int>("MarriageCountMan")
                        .HasColumnName("marriage_count_man");

                    b.Property<int>("MarriageCountWoman")
                        .HasColumnName("marriage_count_woman");

                    b.Property<DateTime>("MarriageDate")
                        .HasColumnName("marriage_date");

                    b.Property<string>("MarriageFault")
                        .HasColumnName("marriage_fault");

                    b.Property<string>("MarriageFaultDescription")
                        .HasColumnName("marriage_fault_description");

                    b.Property<string>("MarriageNumber")
                        .HasColumnName("marriage_number");

                    b.Property<string>("MarriagePlace")
                        .HasColumnName("marriage_place");

                    b.Property<string>("MarriedStatusBeforeMan")
                        .HasColumnName("married_status_before_man");

                    b.Property<string>("MarriedStatusBeforeWoman")
                        .HasColumnName("married_status_before_woman");

                    b.Property<string>("NameAfterMarriageMan")
                        .HasColumnName("name_after_marriage_man");

                    b.Property<string>("NameAfterMarriageWoman")
                        .HasColumnName("name_after_marriage_woman");

                    b.Property<string>("NationalityMan")
                        .HasColumnName("nationality_man");

                    b.Property<string>("NationalityWoman")
                        .HasColumnName("nationality_woman");

                    b.Property<long?>("OutDocumentId")
                        .HasColumnName("out_document_id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<DateTime>("RegDate")
                        .HasColumnName("reg_date");

                    b.Property<string>("RegNumber")
                        .HasColumnName("reg_number");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_act_divorce");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionLawUnit", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int?>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtDepartmentId")
                        .HasColumnName("court_department_id");

                    b.Property<string>("CourtDepartmentName")
                        .HasColumnName("court_department_name");

                    b.Property<int?>("CourtDutyId")
                        .HasColumnName("court_duty_id");

                    b.Property<string>("CourtDutyName")
                        .HasColumnName("court_duty_name");

                    b.Property<int?>("CourtGroupId")
                        .HasColumnName("court_group_id");

                    b.Property<string>("CourtGroupName")
                        .HasColumnName("court_group_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnName("date_from");

                    b.Property<string>("DateFromStr")
                        .HasColumnName("date_from_str");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnName("date_to");

                    b.Property<string>("DateToStr")
                        .HasColumnName("date_to_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("JudgeDepartmentRoleId")
                        .HasColumnName("judge_department_role_id");

                    b.Property<string>("JudgeDepartmentRoleName")
                        .HasColumnName("judge_department_role_name");

                    b.Property<int>("JudgeRoleId")
                        .HasColumnName("judge_role_id");

                    b.Property<string>("JudgeRoleName")
                        .HasColumnName("judge_role_name");

                    b.Property<string>("LawUnitFullName")
                        .HasColumnName("lawunit_full_name");

                    b.Property<int>("LawUnitId")
                        .HasColumnName("lawunit_id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_lawunit");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWCaseSessionResult", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<int>("CaseSessionId")
                        .HasColumnName("case_session_id");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnName("date_expired");

                    b.Property<string>("DateExpiredStr")
                        .HasColumnName("date_expired_str");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsMain")
                        .HasColumnName("is_main");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<int?>("SessionResultBaseId")
                        .HasColumnName("session_result_base_id");

                    b.Property<string>("SessionResultBaseName")
                        .HasColumnName("session_result_base_name");

                    b.Property<int>("SessionResultId")
                        .HasColumnName("session_result_id");

                    b.Property<string>("SessionResultName")
                        .HasColumnName("session_result_name");

                    b.Property<string>("UserExpiredId")
                        .HasColumnName("user_expired_id");

                    b.Property<string>("UserExpiredName")
                        .HasColumnName("user_expired_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_case_session_result");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWDocument", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualDocumentDate")
                        .HasColumnName("actual_document_date");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<int?>("DeliveryGroupId")
                        .HasColumnName("delivery_group_id");

                    b.Property<string>("DeliveryGroupName")
                        .HasColumnName("delivery_group_name");

                    b.Property<int?>("DeliveryTypeId")
                        .HasColumnName("delivery_type_id");

                    b.Property<string>("DeliveryTypeName")
                        .HasColumnName("delivery_type_name");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnName("document_date");

                    b.Property<int>("DocumentDirectionId")
                        .HasColumnName("document_direction_id");

                    b.Property<string>("DocumentDirectionName")
                        .HasColumnName("document_direction_name");

                    b.Property<int>("DocumentGroupId")
                        .HasColumnName("document_group_id");

                    b.Property<string>("DocumentGroupName")
                        .HasColumnName("document_group_name");

                    b.Property<string>("DocumentNumber")
                        .HasColumnName("document_number");

                    b.Property<int?>("DocumentNumberValue")
                        .HasColumnName("document_number_value");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnName("document_type_id");

                    b.Property<string>("DocumentTypeName")
                        .HasColumnName("document_type_name");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<long>("Id")
                        .HasColumnName("id");

                    b.Property<bool?>("IsOldNumber")
                        .HasColumnName("is_old_number");

                    b.Property<bool>("IsRestictedAccess")
                        .HasColumnName("is_resticted_access");

                    b.Property<bool?>("IsSecret")
                        .HasColumnName("is_secret");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_document");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWDocumentCaseInfo", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActDate")
                        .HasColumnName("law_act_date");

                    b.Property<string>("ActNumber")
                        .HasColumnName("law_act_number");

                    b.Property<int?>("ActTypeId")
                        .HasColumnName("act_type_id");

                    b.Property<string>("ActTypeName")
                        .HasColumnName("act_type_name");

                    b.Property<int?>("CaseGroupId")
                        .HasColumnName("case_group_id");

                    b.Property<string>("CaseGroupName")
                        .HasColumnName("case_group_name");

                    b.Property<int?>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CaseRegNumber")
                        .HasColumnName("case_reg_number");

                    b.Property<string>("CaseShortNumber")
                        .HasColumnName("case_short_number");

                    b.Property<int?>("CaseYear")
                        .HasColumnName("case_year");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<long>("DocumentId")
                        .HasColumnName("document_id");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<long>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<int?>("SessionActId")
                        .HasColumnName("session_act_id");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_document_case_info");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWDocumentDecision", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<int?>("DecisionTypeId")
                        .HasColumnName("decision_type_id");

                    b.Property<string>("DecisionTypeName")
                        .HasColumnName("decision_type_name");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int>("DocumentDecisionStateId")
                        .HasColumnName("document_decision_state_id");

                    b.Property<string>("DocumentDecisionStateName")
                        .HasColumnName("document_decision_state_name");

                    b.Property<long>("DocumentId")
                        .HasColumnName("document_id");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<long>("Id")
                        .HasColumnName("id");

                    b.Property<long?>("OutDocumentId")
                        .HasColumnName("out_document_id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<DateTime?>("RegDate")
                        .HasColumnName("reg_date");

                    b.Property<string>("RegNumber")
                        .HasColumnName("reg_number");

                    b.Property<string>("UserDecisionId")
                        .HasColumnName("user_decision_id");

                    b.Property<string>("UserDecisionName")
                        .HasColumnName("user_decision_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_document_decision");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWDocumentDecisionCase", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaseId")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<int?>("DecisionTypeId")
                        .HasColumnName("decision_type_id");

                    b.Property<string>("DecisionTypeName")
                        .HasColumnName("decision_type_name");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<long>("DocumentDecisionId")
                        .HasColumnName("document_decision_id");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<long>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_document_decision_case");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWDocumentInstitutionCaseInfo", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CaseNumber")
                        .HasColumnName("case_number");

                    b.Property<int>("CaseYear")
                        .HasColumnName("case_year");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<long>("DocumentId")
                        .HasColumnName("document_id");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<long>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("InstitutionCaseTypeId")
                        .HasColumnName("institution_case_type_id");

                    b.Property<string>("InstitutionCaseTypeName")
                        .HasColumnName("institution_case_type_name");

                    b.Property<int>("InstitutionId")
                        .HasColumnName("institution_id");

                    b.Property<string>("InstitutionName")
                        .HasColumnName("institution_name");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_document_institution_case_info");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWDocumentLink", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("DocumentDirectionId")
                        .HasColumnName("document_direction_id");

                    b.Property<string>("DocumentDirectionName")
                        .HasColumnName("document_direction_name");

                    b.Property<long>("DocumentId")
                        .HasColumnName("document_id");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<long>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<DateTime?>("PrevDocumentDate")
                        .HasColumnName("prev_document_date");

                    b.Property<long?>("PrevDocumentId")
                        .HasColumnName("prev_document_id");

                    b.Property<string>("PrevDocumentNumber")
                        .HasColumnName("prev_document_number");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_document_link");
                });

            modelBuilder.Entity("IOWebApplicationService.Infrastructure.Data.DW.Models.DWDocumentPerson", b =>
                {
                    b.Property<int>("dw_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dw_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseInstanceCode")
                        .HasColumnName("case_instance_code");

                    b.Property<int?>("CaseInstanceId")
                        .HasColumnName("case_instance_id");

                    b.Property<string>("CaseInstanceName")
                        .HasColumnName("case_instance_name");

                    b.Property<string>("CityCode")
                        .HasColumnName("city_code");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name");

                    b.Property<int?>("CourtId")
                        .HasColumnName("court_id");

                    b.Property<string>("CourtName")
                        .HasColumnName("court_name");

                    b.Property<int?>("CourtRegionId")
                        .HasColumnName("court_region_id");

                    b.Property<string>("CourtRegionName")
                        .HasColumnName("court_region_name");

                    b.Property<int?>("CourtTypeId")
                        .HasColumnName("court_type_id");

                    b.Property<string>("CourtTypeName")
                        .HasColumnName("court_type_name");

                    b.Property<DateTime?>("DateTransferedDW")
                        .HasColumnName("date_transfered_dw");

                    b.Property<DateTime>("DateWrt")
                        .HasColumnName("date_wrt");

                    b.Property<string>("DepartmentName")
                        .HasColumnName("department_name");

                    b.Property<long>("DocumentId")
                        .HasColumnName("document_id");

                    b.Property<int?>("DwCount")
                        .HasColumnName("dw_count");

                    b.Property<string>("EISPPCode")
                        .HasColumnName("eispp_code");

                    b.Property<string>("EcliCode")
                        .HasColumnName("ecli_code");

                    b.Property<string>("Family2Name")
                        .HasColumnName("family_2_name");

                    b.Property<string>("FamilyName")
                        .HasColumnName("family_name");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name");

                    b.Property<string>("FullName")
                        .HasColumnName("full_name");

                    b.Property<long>("Id")
                        .HasColumnName("id");

                    b.Property<string>("LatinName")
                        .HasColumnName("latin_name");

                    b.Property<string>("MiddleName")
                        .HasColumnName("middle_name");

                    b.Property<int?>("MilitaryRangId")
                        .HasColumnName("military_rang_id");

                    b.Property<string>("MilitaryRangName")
                        .HasColumnName("military_rang_name");

                    b.Property<int?>("ParentCourtId")
                        .HasColumnName("parent_court_id");

                    b.Property<string>("ParentCourtName")
                        .HasColumnName("parent_court_name");

                    b.Property<int?>("PersonId")
                        .HasColumnName("person_id");

                    b.Property<int?>("PersonMaturityId")
                        .HasColumnName("person_maturity_id");

                    b.Property<string>("PersonMaturityName")
                        .HasColumnName("person_maturity_name");

                    b.Property<int>("PersonRoleId")
                        .HasColumnName("person_role_id");

                    b.Property<string>("PersonRoleName")
                        .HasColumnName("person_role_name");

                    b.Property<long?>("Person_SourceId")
                        .HasColumnName("person_source_id");

                    b.Property<long?>("Person_SourceName")
                        .HasColumnName("person_source_name");

                    b.Property<int?>("Person_SourceType")
                        .HasColumnName("person_source_type");

                    b.Property<string>("Person_SourceTypeName")
                        .HasColumnName("person_source_type_name");

                    b.Property<string>("Uic")
                        .HasColumnName("uic");

                    b.Property<int>("UicTypeId")
                        .HasColumnName("uic_type_id");

                    b.Property<string>("UicTypeName")
                        .HasColumnName("uic_type_name");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("dw_Id");

                    b.ToTable("dw_document_person");
                });
#pragma warning restore 612, 618
        }
    }
}
