//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Integration.Epep
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Side", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Side : object
    {
        
        private System.Guid CaseIdField;
        
        private Integration.Epep.Entity EntityField;
        
        private System.DateTime InsertDateField;
        
        private bool IsActiveField;
        
        private Integration.Epep.Person PersonField;
        
        private string ProceduralRelationField;
        
        private System.Nullable<System.Guid> SideIdField;
        
        private string SideInvolvementKindCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Integration.Epep.Entity Entity
        {
            get
            {
                return this.EntityField;
            }
            set
            {
                this.EntityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertDate
        {
            get
            {
                return this.InsertDateField;
            }
            set
            {
                this.InsertDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Integration.Epep.Person Person
        {
            get
            {
                return this.PersonField;
            }
            set
            {
                this.PersonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProceduralRelation
        {
            get
            {
                return this.ProceduralRelationField;
            }
            set
            {
                this.ProceduralRelationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SideId
        {
            get
            {
                return this.SideIdField;
            }
            set
            {
                this.SideIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SideInvolvementKindCode
        {
            get
            {
                return this.SideInvolvementKindCodeField;
            }
            set
            {
                this.SideInvolvementKindCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Entity : object
    {
        
        private string AddressField;
        
        private string BulstatField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bulstat
        {
            get
            {
                return this.BulstatField;
            }
            set
            {
                this.BulstatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Person : object
    {
        
        private string AddressField;
        
        private string EGNField;
        
        private string FirstnameField;
        
        private string LastnameField;
        
        private string SecondnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EGN
        {
            get
            {
                return this.EGNField;
            }
            set
            {
                this.EGNField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname
        {
            get
            {
                return this.FirstnameField;
            }
            set
            {
                this.FirstnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname
        {
            get
            {
                return this.LastnameField;
            }
            set
            {
                this.LastnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Secondname
        {
            get
            {
                return this.SecondnameField;
            }
            set
            {
                this.SecondnameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfocaseFault", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class InfocaseFault : object
    {
        
        private int ErrorCodeField;
        
        private string ErrorFieldField;
        
        private string ReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorField
        {
            get
            {
                return this.ErrorFieldField;
            }
            set
            {
                this.ErrorFieldField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason
        {
            get
            {
                return this.ReasonField;
            }
            set
            {
                this.ReasonField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LawyerAssignment", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class LawyerAssignment : object
    {
        
        private System.DateTime DateField;
        
        private bool IsActiveField;
        
        private System.Nullable<System.Guid> LawyerAssignmentIdField;
        
        private System.Guid LawyerRegistrationIdField;
        
        private System.Nullable<System.Guid> SideIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LawyerAssignmentId
        {
            get
            {
                return this.LawyerAssignmentIdField;
            }
            set
            {
                this.LawyerAssignmentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LawyerRegistrationId
        {
            get
            {
                return this.LawyerRegistrationIdField;
            }
            set
            {
                this.LawyerRegistrationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SideId
        {
            get
            {
                return this.SideIdField;
            }
            set
            {
                this.SideIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonAssignment", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PersonAssignment : object
    {
        
        private System.DateTime DateField;
        
        private bool IsActiveField;
        
        private System.Nullable<System.Guid> PersonAssignmentIdField;
        
        private System.Guid PersonRegistrationIdField;
        
        private System.Nullable<System.Guid> SideIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PersonAssignmentId
        {
            get
            {
                return this.PersonAssignmentIdField;
            }
            set
            {
                this.PersonAssignmentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonRegistrationId
        {
            get
            {
                return this.PersonRegistrationIdField;
            }
            set
            {
                this.PersonRegistrationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SideId
        {
            get
            {
                return this.SideIdField;
            }
            set
            {
                this.SideIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LawyerRegistration", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class LawyerRegistration : object
    {
        
        private System.DateTime BirthDateField;
        
        private string DescriptionField;
        
        private string EmailField;
        
        private System.Guid LawyerIdField;
        
        private System.Nullable<System.Guid> LawyerRegistrationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate
        {
            get
            {
                return this.BirthDateField;
            }
            set
            {
                this.BirthDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LawyerId
        {
            get
            {
                return this.LawyerIdField;
            }
            set
            {
                this.LawyerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LawyerRegistrationId
        {
            get
            {
                return this.LawyerRegistrationIdField;
            }
            set
            {
                this.LawyerRegistrationIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonRegistration", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PersonRegistration : object
    {
        
        private string AddressField;
        
        private System.DateTime BirthDateField;
        
        private string DescriptionField;
        
        private string EGNField;
        
        private string EmailField;
        
        private string NameField;
        
        private System.Nullable<System.Guid> PersonRegistrationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate
        {
            get
            {
                return this.BirthDateField;
            }
            set
            {
                this.BirthDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EGN
        {
            get
            {
                return this.EGNField;
            }
            set
            {
                this.EGNField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PersonRegistrationId
        {
            get
            {
                return this.PersonRegistrationIdField;
            }
            set
            {
                this.PersonRegistrationIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Summon", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Summon : object
    {
        
        private string AddressField;
        
        private string AddresseeField;
        
        private System.DateTime DateCreatedField;
        
        private System.Nullable<System.DateTime> DateServedField;
        
        private System.Guid ParentIdField;
        
        private System.Guid SideIdField;
        
        private string SubjectField;
        
        private System.Nullable<System.Guid> SummonIdField;
        
        private string SummonKindField;
        
        private string SummonTypeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Addressee
        {
            get
            {
                return this.AddresseeField;
            }
            set
            {
                this.AddresseeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                this.DateCreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateServed
        {
            get
            {
                return this.DateServedField;
            }
            set
            {
                this.DateServedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentId
        {
            get
            {
                return this.ParentIdField;
            }
            set
            {
                this.ParentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SideId
        {
            get
            {
                return this.SideIdField;
            }
            set
            {
                this.SideIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SummonId
        {
            get
            {
                return this.SummonIdField;
            }
            set
            {
                this.SummonIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SummonKind
        {
            get
            {
                return this.SummonKindField;
            }
            set
            {
                this.SummonKindField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SummonTypeCode
        {
            get
            {
                return this.SummonTypeCodeField;
            }
            set
            {
                this.SummonTypeCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScannedDocument", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class ScannedDocument : object
    {
        
        private System.Guid CaseIdField;
        
        private string DescriptionField;
        
        private byte[] ScannedDocumentContentField;
        
        private System.Nullable<System.Guid> ScannedDocumentIdField;
        
        private string ScannedDocumentMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ScannedDocumentContent
        {
            get
            {
                return this.ScannedDocumentContentField;
            }
            set
            {
                this.ScannedDocumentContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ScannedDocumentId
        {
            get
            {
                return this.ScannedDocumentIdField;
            }
            set
            {
                this.ScannedDocumentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScannedDocumentMimeType
        {
            get
            {
                return this.ScannedDocumentMimeTypeField;
            }
            set
            {
                this.ScannedDocumentMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignmentFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class AssignmentFile : object
    {
        
        private System.Nullable<System.Guid> AssignmentFileIdField;
        
        private System.Guid AssignmentIdField;
        
        private byte[] ProtocolContentField;
        
        private string ProtocolMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AssignmentFileId
        {
            get
            {
                return this.AssignmentFileIdField;
            }
            set
            {
                this.AssignmentFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AssignmentId
        {
            get
            {
                return this.AssignmentIdField;
            }
            set
            {
                this.AssignmentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProtocolContent
        {
            get
            {
                return this.ProtocolContentField;
            }
            set
            {
                this.ProtocolContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolMimeType
        {
            get
            {
                return this.ProtocolMimeTypeField;
            }
            set
            {
                this.ProtocolMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrivateProtocolFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PrivateProtocolFile : object
    {
        
        private System.Guid HearingIdField;
        
        private System.Nullable<System.Guid> PrivateProtocolFileIdField;
        
        private byte[] ProtocolContentField;
        
        private string ProtocolMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid HearingId
        {
            get
            {
                return this.HearingIdField;
            }
            set
            {
                this.HearingIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PrivateProtocolFileId
        {
            get
            {
                return this.PrivateProtocolFileIdField;
            }
            set
            {
                this.PrivateProtocolFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProtocolContent
        {
            get
            {
                return this.ProtocolContentField;
            }
            set
            {
                this.ProtocolContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolMimeType
        {
            get
            {
                return this.ProtocolMimeTypeField;
            }
            set
            {
                this.ProtocolMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicProtocolFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PublicProtocolFile : object
    {
        
        private System.Guid HearingIdField;
        
        private byte[] ProtocolContentField;
        
        private string ProtocolMimeTypeField;
        
        private System.Nullable<System.Guid> PublicProtocolFileIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid HearingId
        {
            get
            {
                return this.HearingIdField;
            }
            set
            {
                this.HearingIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProtocolContent
        {
            get
            {
                return this.ProtocolContentField;
            }
            set
            {
                this.ProtocolContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolMimeType
        {
            get
            {
                return this.ProtocolMimeTypeField;
            }
            set
            {
                this.ProtocolMimeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PublicProtocolFileId
        {
            get
            {
                return this.PublicProtocolFileIdField;
            }
            set
            {
                this.PublicProtocolFileIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomingDocumentFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class IncomingDocumentFile : object
    {
        
        private byte[] IncomingDocumentContentField;
        
        private System.Nullable<System.Guid> IncomingDocumentFileIdField;
        
        private System.Guid IncomingDocumentIdField;
        
        private string IncomingDocumentMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] IncomingDocumentContent
        {
            get
            {
                return this.IncomingDocumentContentField;
            }
            set
            {
                this.IncomingDocumentContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> IncomingDocumentFileId
        {
            get
            {
                return this.IncomingDocumentFileIdField;
            }
            set
            {
                this.IncomingDocumentFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IncomingDocumentId
        {
            get
            {
                return this.IncomingDocumentIdField;
            }
            set
            {
                this.IncomingDocumentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomingDocumentMimeType
        {
            get
            {
                return this.IncomingDocumentMimeTypeField;
            }
            set
            {
                this.IncomingDocumentMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutgoingDocumentFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class OutgoingDocumentFile : object
    {
        
        private byte[] OutgoingDocumentContentField;
        
        private System.Nullable<System.Guid> OutgoingDocumentFileIdField;
        
        private System.Guid OutgoingDocumentIdField;
        
        private string OutgoingDocumentMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] OutgoingDocumentContent
        {
            get
            {
                return this.OutgoingDocumentContentField;
            }
            set
            {
                this.OutgoingDocumentContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> OutgoingDocumentFileId
        {
            get
            {
                return this.OutgoingDocumentFileIdField;
            }
            set
            {
                this.OutgoingDocumentFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OutgoingDocumentId
        {
            get
            {
                return this.OutgoingDocumentIdField;
            }
            set
            {
                this.OutgoingDocumentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutgoingDocumentMimeType
        {
            get
            {
                return this.OutgoingDocumentMimeTypeField;
            }
            set
            {
                this.OutgoingDocumentMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SummonFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class SummonFile : object
    {
        
        private byte[] ContentField;
        
        private string MimeTypeField;
        
        private System.Nullable<System.Guid> SummonFileIdField;
        
        private System.Guid SummonIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content
        {
            get
            {
                return this.ContentField;
            }
            set
            {
                this.ContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MimeType
        {
            get
            {
                return this.MimeTypeField;
            }
            set
            {
                this.MimeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SummonFileId
        {
            get
            {
                return this.SummonFileIdField;
            }
            set
            {
                this.SummonFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SummonId
        {
            get
            {
                return this.SummonIdField;
            }
            set
            {
                this.SummonIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrivateActFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PrivateActFile : object
    {
        
        private System.Guid ActIdField;
        
        private byte[] PrivateActContentField;
        
        private System.Nullable<System.Guid> PrivateActFileIdField;
        
        private string PrivateActMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PrivateActContent
        {
            get
            {
                return this.PrivateActContentField;
            }
            set
            {
                this.PrivateActContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PrivateActFileId
        {
            get
            {
                return this.PrivateActFileIdField;
            }
            set
            {
                this.PrivateActFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateActMimeType
        {
            get
            {
                return this.PrivateActMimeTypeField;
            }
            set
            {
                this.PrivateActMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicActFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PublicActFile : object
    {
        
        private System.Guid ActIdField;
        
        private byte[] PublicActContentField;
        
        private System.Nullable<System.Guid> PublicActFileIdField;
        
        private string PublicActMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PublicActContent
        {
            get
            {
                return this.PublicActContentField;
            }
            set
            {
                this.PublicActContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PublicActFileId
        {
            get
            {
                return this.PublicActFileIdField;
            }
            set
            {
                this.PublicActFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicActMimeType
        {
            get
            {
                return this.PublicActMimeTypeField;
            }
            set
            {
                this.PublicActMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrivateMotiveFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PrivateMotiveFile : object
    {
        
        private System.Guid ActIdField;
        
        private byte[] PrivateMotiveContentField;
        
        private System.Nullable<System.Guid> PrivateMotiveFileIdField;
        
        private string PrivateMotiveMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PrivateMotiveContent
        {
            get
            {
                return this.PrivateMotiveContentField;
            }
            set
            {
                this.PrivateMotiveContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PrivateMotiveFileId
        {
            get
            {
                return this.PrivateMotiveFileIdField;
            }
            set
            {
                this.PrivateMotiveFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateMotiveMimeType
        {
            get
            {
                return this.PrivateMotiveMimeTypeField;
            }
            set
            {
                this.PrivateMotiveMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicMotiveFile", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class PublicMotiveFile : object
    {
        
        private System.Guid ActIdField;
        
        private byte[] PublicMotiveContentField;
        
        private System.Nullable<System.Guid> PublicMotiveFileIdField;
        
        private string PublicMotiveMimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PublicMotiveContent
        {
            get
            {
                return this.PublicMotiveContentField;
            }
            set
            {
                this.PublicMotiveContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PublicMotiveFileId
        {
            get
            {
                return this.PublicMotiveFileIdField;
            }
            set
            {
                this.PublicMotiveFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicMotiveMimeType
        {
            get
            {
                return this.PublicMotiveMimeTypeField;
            }
            set
            {
                this.PublicMotiveMimeTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncomingDocument", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class IncomingDocument : object
    {
        
        private System.Nullable<System.Guid> CaseIdField;
        
        private string CourtCodeField;
        
        private Integration.Epep.Entity EntityField;
        
        private System.DateTime IncomingDateField;
        
        private System.Nullable<System.Guid> IncomingDocumentIdField;
        
        private string IncomingDocumentTypeCodeField;
        
        private int IncomingNumberField;
        
        private Integration.Epep.Person PersonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtCode
        {
            get
            {
                return this.CourtCodeField;
            }
            set
            {
                this.CourtCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Integration.Epep.Entity Entity
        {
            get
            {
                return this.EntityField;
            }
            set
            {
                this.EntityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IncomingDate
        {
            get
            {
                return this.IncomingDateField;
            }
            set
            {
                this.IncomingDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> IncomingDocumentId
        {
            get
            {
                return this.IncomingDocumentIdField;
            }
            set
            {
                this.IncomingDocumentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncomingDocumentTypeCode
        {
            get
            {
                return this.IncomingDocumentTypeCodeField;
            }
            set
            {
                this.IncomingDocumentTypeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IncomingNumber
        {
            get
            {
                return this.IncomingNumberField;
            }
            set
            {
                this.IncomingNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Integration.Epep.Person Person
        {
            get
            {
                return this.PersonField;
            }
            set
            {
                this.PersonField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutgoingDocument", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class OutgoingDocument : object
    {
        
        private System.Nullable<System.Guid> CaseIdField;
        
        private Integration.Epep.Entity EntityField;
        
        private System.Nullable<System.DateTime> OutgoingDateField;
        
        private System.Nullable<System.Guid> OutgoingDocumentIdField;
        
        private string OutgoingDocumentTypeCodeField;
        
        private int OutgoingNumberField;
        
        private Integration.Epep.Person PersonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Integration.Epep.Entity Entity
        {
            get
            {
                return this.EntityField;
            }
            set
            {
                this.EntityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OutgoingDate
        {
            get
            {
                return this.OutgoingDateField;
            }
            set
            {
                this.OutgoingDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> OutgoingDocumentId
        {
            get
            {
                return this.OutgoingDocumentIdField;
            }
            set
            {
                this.OutgoingDocumentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutgoingDocumentTypeCode
        {
            get
            {
                return this.OutgoingDocumentTypeCodeField;
            }
            set
            {
                this.OutgoingDocumentTypeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OutgoingNumber
        {
            get
            {
                return this.OutgoingNumberField;
            }
            set
            {
                this.OutgoingNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Integration.Epep.Person Person
        {
            get
            {
                return this.PersonField;
            }
            set
            {
                this.PersonField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Case", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Case : object
    {
        
        private string CaseCodeField;
        
        private System.Nullable<System.Guid> CaseIdField;
        
        private string CaseKindCodeField;
        
        private string CaseTypeCodeField;
        
        private int CaseYearField;
        
        private string CourtCodeField;
        
        private string DepartmentNameField;
        
        private System.DateTime FormationDateField;
        
        private System.Nullable<System.Guid> IncomingDocumentIdField;
        
        private string LegalSubjectField;
        
        private int NumberField;
        
        private string PanelNameField;
        
        private System.Nullable<bool> RestrictedAccessField;
        
        private string StatisticCodeField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseCode
        {
            get
            {
                return this.CaseCodeField;
            }
            set
            {
                this.CaseCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseKindCode
        {
            get
            {
                return this.CaseKindCodeField;
            }
            set
            {
                this.CaseKindCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTypeCode
        {
            get
            {
                return this.CaseTypeCodeField;
            }
            set
            {
                this.CaseTypeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseYear
        {
            get
            {
                return this.CaseYearField;
            }
            set
            {
                this.CaseYearField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtCode
        {
            get
            {
                return this.CourtCodeField;
            }
            set
            {
                this.CourtCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName
        {
            get
            {
                return this.DepartmentNameField;
            }
            set
            {
                this.DepartmentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FormationDate
        {
            get
            {
                return this.FormationDateField;
            }
            set
            {
                this.FormationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> IncomingDocumentId
        {
            get
            {
                return this.IncomingDocumentIdField;
            }
            set
            {
                this.IncomingDocumentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalSubject
        {
            get
            {
                return this.LegalSubjectField;
            }
            set
            {
                this.LegalSubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                this.NumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PanelName
        {
            get
            {
                return this.PanelNameField;
            }
            set
            {
                this.PanelNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RestrictedAccess
        {
            get
            {
                return this.RestrictedAccessField;
            }
            set
            {
                this.RestrictedAccessField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatisticCode
        {
            get
            {
                return this.StatisticCodeField;
            }
            set
            {
                this.StatisticCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectedCase", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class ConnectedCase : object
    {
        
        private System.Guid CaseIdField;
        
        private string ConnectedCaseTypeCodeField;
        
        private System.Guid PredecessorCaseIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectedCaseTypeCode
        {
            get
            {
                return this.ConnectedCaseTypeCodeField;
            }
            set
            {
                this.ConnectedCaseTypeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PredecessorCaseId
        {
            get
            {
                return this.PredecessorCaseIdField;
            }
            set
            {
                this.PredecessorCaseIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reporter", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Reporter : object
    {
        
        private System.Guid CaseIdField;
        
        private System.DateTime DateAssignedField;
        
        private System.Nullable<System.DateTime> DateReplacedField;
        
        private string JudgeNameField;
        
        private string ReasonReplacedField;
        
        private System.Nullable<System.Guid> ReporterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAssigned
        {
            get
            {
                return this.DateAssignedField;
            }
            set
            {
                this.DateAssignedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReplaced
        {
            get
            {
                return this.DateReplacedField;
            }
            set
            {
                this.DateReplacedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JudgeName
        {
            get
            {
                return this.JudgeNameField;
            }
            set
            {
                this.JudgeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonReplaced
        {
            get
            {
                return this.ReasonReplacedField;
            }
            set
            {
                this.ReasonReplacedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ReporterId
        {
            get
            {
                return this.ReporterIdField;
            }
            set
            {
                this.ReporterIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Assignment", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Assignment : object
    {
        
        private System.Nullable<System.Guid> AssignmentIdField;
        
        private string AssignorField;
        
        private System.Guid CaseIdField;
        
        private System.DateTime DateField;
        
        private System.Guid IncomingDocumentIdField;
        
        private string JudgeNameField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AssignmentId
        {
            get
            {
                return this.AssignmentIdField;
            }
            set
            {
                this.AssignmentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Assignor
        {
            get
            {
                return this.AssignorField;
            }
            set
            {
                this.AssignorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IncomingDocumentId
        {
            get
            {
                return this.IncomingDocumentIdField;
            }
            set
            {
                this.IncomingDocumentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JudgeName
        {
            get
            {
                return this.JudgeNameField;
            }
            set
            {
                this.JudgeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hearing", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Hearing : object
    {
        
        private System.Guid CaseIdField;
        
        private string CourtRoomField;
        
        private System.DateTime DateField;
        
        private System.Nullable<System.Guid> HearingIdField;
        
        private string HearingResultField;
        
        private string HearingTypeField;
        
        private bool IsCanceledField;
        
        private string ProsecutorNameField;
        
        private string SecretaryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtRoom
        {
            get
            {
                return this.CourtRoomField;
            }
            set
            {
                this.CourtRoomField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> HearingId
        {
            get
            {
                return this.HearingIdField;
            }
            set
            {
                this.HearingIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HearingResult
        {
            get
            {
                return this.HearingResultField;
            }
            set
            {
                this.HearingResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HearingType
        {
            get
            {
                return this.HearingTypeField;
            }
            set
            {
                this.HearingTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCanceled
        {
            get
            {
                return this.IsCanceledField;
            }
            set
            {
                this.IsCanceledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProsecutorName
        {
            get
            {
                return this.ProsecutorNameField;
            }
            set
            {
                this.ProsecutorNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecretaryName
        {
            get
            {
                return this.SecretaryNameField;
            }
            set
            {
                this.SecretaryNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HearingParticipant", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class HearingParticipant : object
    {
        
        private System.Guid HearingIdField;
        
        private System.Nullable<System.Guid> HearingParticipantIdField;
        
        private string JudgeNameField;
        
        private string RoleField;
        
        private string SubstituteForField;
        
        private string SubstituteReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid HearingId
        {
            get
            {
                return this.HearingIdField;
            }
            set
            {
                this.HearingIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> HearingParticipantId
        {
            get
            {
                return this.HearingParticipantIdField;
            }
            set
            {
                this.HearingParticipantIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JudgeName
        {
            get
            {
                return this.JudgeNameField;
            }
            set
            {
                this.JudgeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role
        {
            get
            {
                return this.RoleField;
            }
            set
            {
                this.RoleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstituteFor
        {
            get
            {
                return this.SubstituteForField;
            }
            set
            {
                this.SubstituteForField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstituteReason
        {
            get
            {
                return this.SubstituteReasonField;
            }
            set
            {
                this.SubstituteReasonField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Act", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Act : object
    {
        
        private System.Nullable<System.Guid> ActIdField;
        
        private string ActKindCodeField;
        
        private System.Nullable<bool> CanBeSubjectToAppealField;
        
        private System.Guid CaseIdField;
        
        private System.Nullable<System.DateTime> DateInPowerField;
        
        private System.DateTime DateSignedField;
        
        private System.Nullable<bool> FinishingField;
        
        private System.Nullable<System.Guid> HearingIdField;
        
        private System.Nullable<System.DateTime> MotiveDateField;
        
        private System.Nullable<int> NumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActKindCode
        {
            get
            {
                return this.ActKindCodeField;
            }
            set
            {
                this.ActKindCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CanBeSubjectToAppeal
        {
            get
            {
                return this.CanBeSubjectToAppealField;
            }
            set
            {
                this.CanBeSubjectToAppealField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateInPower
        {
            get
            {
                return this.DateInPowerField;
            }
            set
            {
                this.DateInPowerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateSigned
        {
            get
            {
                return this.DateSignedField;
            }
            set
            {
                this.DateSignedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Finishing
        {
            get
            {
                return this.FinishingField;
            }
            set
            {
                this.FinishingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> HearingId
        {
            get
            {
                return this.HearingIdField;
            }
            set
            {
                this.HearingIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MotiveDate
        {
            get
            {
                return this.MotiveDateField;
            }
            set
            {
                this.MotiveDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                this.NumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActPreparator", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class ActPreparator : object
    {
        
        private System.Guid ActIdField;
        
        private System.Nullable<System.Guid> ActPreparatorIdField;
        
        private string JudgeNameField;
        
        private string RoleField;
        
        private string SubstituteForField;
        
        private string SubstituteReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ActPreparatorId
        {
            get
            {
                return this.ActPreparatorIdField;
            }
            set
            {
                this.ActPreparatorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JudgeName
        {
            get
            {
                return this.JudgeNameField;
            }
            set
            {
                this.JudgeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role
        {
            get
            {
                return this.RoleField;
            }
            set
            {
                this.RoleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstituteFor
        {
            get
            {
                return this.SubstituteForField;
            }
            set
            {
                this.SubstituteForField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstituteReason
        {
            get
            {
                return this.SubstituteReasonField;
            }
            set
            {
                this.SubstituteReasonField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appeal", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Appeal : object
    {
        
        private System.Guid ActIdField;
        
        private System.Nullable<System.Guid> AppealIdField;
        
        private string AppealKindCodeField;
        
        private System.DateTime DateFiledField;
        
        private System.Guid SideIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AppealId
        {
            get
            {
                return this.AppealIdField;
            }
            set
            {
                this.AppealIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppealKindCode
        {
            get
            {
                return this.AppealKindCodeField;
            }
            set
            {
                this.AppealKindCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFiled
        {
            get
            {
                return this.DateFiledField;
            }
            set
            {
                this.DateFiledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SideId
        {
            get
            {
                return this.SideIdField;
            }
            set
            {
                this.SideIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseRuling", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class CaseRuling : object
    {
        
        private System.Nullable<System.Guid> ActIdField;
        
        private System.Guid CaseIdField;
        
        private System.Nullable<System.Guid> CaseRulingIdField;
        
        private string CaseRulingKindCodeField;
        
        private System.Nullable<System.Guid> HearingIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ActId
        {
            get
            {
                return this.ActIdField;
            }
            set
            {
                this.ActIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CaseId
        {
            get
            {
                return this.CaseIdField;
            }
            set
            {
                this.CaseIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CaseRulingId
        {
            get
            {
                return this.CaseRulingIdField;
            }
            set
            {
                this.CaseRulingIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseRulingKindCode
        {
            get
            {
                return this.CaseRulingKindCodeField;
            }
            set
            {
                this.CaseRulingKindCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> HearingId
        {
            get
            {
                return this.HearingIdField;
            }
            set
            {
                this.HearingIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lawyer", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class Lawyer : object
    {
        
        private string CollegeField;
        
        private System.Nullable<System.Guid> LawyerIdField;
        
        private string NameField;
        
        private string NumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string College
        {
            get
            {
                return this.CollegeField;
            }
            set
            {
                this.CollegeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LawyerId
        {
            get
            {
                return this.LawyerIdField;
            }
            set
            {
                this.LawyerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                this.NumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRegistrationInfo", Namespace="http://www.abbaty.com/eCase/v2")]
    public partial class UserRegistrationInfo : object
    {
        
        private bool IsRegisteredField;
        
        private System.Nullable<System.Guid> LawyerRegistrationIdField;
        
        private System.Nullable<System.Guid> PersonRegistrationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegistered
        {
            get
            {
                return this.IsRegisteredField;
            }
            set
            {
                this.IsRegisteredField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> LawyerRegistrationId
        {
            get
            {
                return this.LawyerRegistrationIdField;
            }
            set
            {
                this.LawyerRegistrationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PersonRegistrationId
        {
            get
            {
                return this.PersonRegistrationIdField;
            }
            set
            {
                this.PersonRegistrationIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.abbaty.com/eCase/v2", ConfigurationName="Integration.Epep.IeCaseService")]
    public interface IeCaseService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Side GetSideById(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Side> GetSideByIdAsync(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideIdentifiersByCaseIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideIdentifiersByCaseIdInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Guid[] GetSideIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSideIdentifiersByCaseIdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetSideIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentByIdInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        Integration.Epep.LawyerAssignment GetLawyerAssignmentById(System.Guid lawyerAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.LawyerAssignment> GetLawyerAssignmentByIdAsync(System.Guid lawyerAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentIdentifiersBySide" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentIdentifiersBySide" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentIdentifiersBySide" +
            "IdInfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetLawyerAssignmentIdentifiersBySideId(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentIdentifiersBySide" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerAssignmentIdentifiersBySide" +
            "IdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetLawyerAssignmentIdentifiersBySideIdAsync(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentByIdInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        Integration.Epep.PersonAssignment GetPersonAssignmentById(System.Guid personAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PersonAssignment> GetPersonAssignmentByIdAsync(System.Guid personAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentIdentifiersBySide" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentIdentifiersBySide" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentIdentifiersBySide" +
            "IdInfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetPersonAssignmentIdentifiersBySideId(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentIdentifiersBySide" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonAssignmentIdentifiersBySide" +
            "IdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetPersonAssignmentIdentifiersBySideIdAsync(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationByIdInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        Integration.Epep.LawyerRegistration GetLawyerRegistrationById(System.Guid lawyerRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.LawyerRegistration> GetLawyerRegistrationByIdAsync(System.Guid lawyerRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/SelectLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/SelectLawyerRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/SelectLawyerRegistrationInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        Integration.Epep.LawyerRegistration SelectLawyerRegistration(string lawyerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/SelectLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/SelectLawyerRegistrationResponse")]
        System.Threading.Tasks.Task<Integration.Epep.LawyerRegistration> SelectLawyerRegistrationAsync(string lawyerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationIdentifiersByLa" +
            "wyerId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationIdentifiersByLa" +
            "wyerIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationIdentifiersByLa" +
            "wyerIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetLawyerRegistrationIdentifiersByLawyerId(System.Guid lawyerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationIdentifiersByLa" +
            "wyerId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerRegistrationIdentifiersByLa" +
            "wyerIdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetLawyerRegistrationIdentifiersByLawyerIdAsync(System.Guid lawyerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationByIdInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        Integration.Epep.PersonRegistration GetPersonRegistrationById(System.Guid personRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PersonRegistration> GetPersonRegistrationByIdAsync(System.Guid personRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/SelectPersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/SelectPersonRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/SelectPersonRegistrationInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        Integration.Epep.PersonRegistration SelectPersonRegistration(string EGN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/SelectPersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/SelectPersonRegistrationResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PersonRegistration> SelectPersonRegistrationAsync(string EGN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationIdentifierByPer" +
            "sonAssignmentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationIdentifierByPer" +
            "sonAssignmentIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationIdentifierByPer" +
            "sonAssignmentIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetPersonRegistrationIdentifierByPersonAssignmentId(System.Guid personassignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationIdentifierByPer" +
            "sonAssignmentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPersonRegistrationIdentifierByPer" +
            "sonAssignmentIdResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPersonRegistrationIdentifierByPersonAssignmentIdAsync(System.Guid personassignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Summon GetSummonById(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Summon> GetSummonByIdAsync(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonIdentifiersByParentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonIdentifiersByParentIdRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonIdentifiersByParentIdInfoca" +
            "seFaultFault", Name="InfocaseFault")]
        System.Guid[] GetSummonIdentifiersByParentId(System.Guid parentId, string summonTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonIdentifiersByParentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonIdentifiersByParentIdRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Guid[]> GetSummonIdentifiersByParentIdAsync(System.Guid parentId, string summonTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentByIdInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        Integration.Epep.ScannedDocument GetScannedDocumentById(System.Guid scannedDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.ScannedDocument> GetScannedDocumentByIdAsync(System.Guid scannedDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentIdentifiersByCaseI" +
            "d", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentIdentifiersByCaseI" +
            "dResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentIdentifiersByCaseI" +
            "dInfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetScannedDocumentIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentIdentifiersByCaseI" +
            "d", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetScannedDocumentIdentifiersByCaseI" +
            "dResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetScannedDocumentIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileByIdInfocaseFaultFa" +
            "ult", Name="InfocaseFault")]
        Integration.Epep.AssignmentFile GetAssignmentFileById(System.Guid assignmentFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.AssignmentFile> GetAssignmentFileByIdAsync(System.Guid assignmentFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileIdentifiersByAssign" +
            "mentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileIdentifiersByAssign" +
            "mentIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileIdentifiersByAssign" +
            "mentIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetAssignmentFileIdentifiersByAssignmentId(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileIdentifiersByAssign" +
            "mentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentFileIdentifiersByAssign" +
            "mentIdResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetAssignmentFileIdentifiersByAssignmentIdAsync(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileByIdInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        Integration.Epep.PrivateProtocolFile GetPrivateProtocolFileById(System.Guid privateProtocolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PrivateProtocolFile> GetPrivateProtocolFileByIdAsync(System.Guid privateProtocolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileIdentifierByHe" +
            "aringId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileIdentifierByHe" +
            "aringIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileIdentifierByHe" +
            "aringIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetPrivateProtocolFileIdentifierByHearingId(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileIdentifierByHe" +
            "aringId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateProtocolFileIdentifierByHe" +
            "aringIdResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPrivateProtocolFileIdentifierByHearingIdAsync(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileByIdInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        Integration.Epep.PublicProtocolFile GetPublicProtocolFileById(System.Guid publicProtocolFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PublicProtocolFile> GetPublicProtocolFileByIdAsync(System.Guid publicProtocolFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileIdentifierByHea" +
            "ringId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileIdentifierByHea" +
            "ringIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileIdentifierByHea" +
            "ringIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetPublicProtocolFileIdentifierByHearingId(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileIdentifierByHea" +
            "ringId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicProtocolFileIdentifierByHea" +
            "ringIdResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPublicProtocolFileIdentifierByHearingIdAsync(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileByIdInfocaseF" +
            "aultFault", Name="InfocaseFault")]
        Integration.Epep.IncomingDocumentFile GetIncomingDocumentFileById(System.Guid incomingDocumentFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.IncomingDocumentFile> GetIncomingDocumentFileByIdAsync(System.Guid incomingDocumentFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileIdentifierByI" +
            "ncomingDocumentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileIdentifierByI" +
            "ncomingDocumentIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileIdentifierByI" +
            "ncomingDocumentIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetIncomingDocumentFileIdentifierByIncomingDocumentId(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileIdentifierByI" +
            "ncomingDocumentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentFileIdentifierByI" +
            "ncomingDocumentIdResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetIncomingDocumentFileIdentifierByIncomingDocumentIdAsync(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileByIdInfocaseF" +
            "aultFault", Name="InfocaseFault")]
        Integration.Epep.OutgoingDocumentFile GetOutgoingDocumentFileById(System.Guid outgoingDocumentFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.OutgoingDocumentFile> GetOutgoingDocumentFileByIdAsync(System.Guid outgoingDocumentFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileIdentifierByO" +
            "utgoingDocumentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileIdentifierByO" +
            "utgoingDocumentIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileIdentifierByO" +
            "utgoingDocumentIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetOutgoingDocumentFileIdentifierByOutgoingDocumentId(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileIdentifierByO" +
            "utgoingDocumentId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentFileIdentifierByO" +
            "utgoingDocumentIdResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetOutgoingDocumentFileIdentifierByOutgoingDocumentIdAsync(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.SummonFile GetSummonFileById(System.Guid summonFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.SummonFile> GetSummonFileByIdAsync(System.Guid summonFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileIdentifierBySummonId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileIdentifierBySummonIdRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileIdentifierBySummonIdInf" +
            "ocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetSummonFileIdentifierBySummonId(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileIdentifierBySummonId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonFileIdentifierBySummonIdRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetSummonFileIdentifierBySummonIdAsync(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileByIdInfocaseFaultFa" +
            "ult", Name="InfocaseFault")]
        Integration.Epep.PrivateActFile GetPrivateActFileById(System.Guid privateActFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PrivateActFile> GetPrivateActFileByIdAsync(System.Guid privateActFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileIdentifiersByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileIdentifiersByActIdR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileIdentifiersByActIdI" +
            "nfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetPrivateActFileIdentifiersByActId(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileIdentifiersByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateActFileIdentifiersByActIdR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPrivateActFileIdentifiersByActIdAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileByIdInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        Integration.Epep.PublicActFile GetPublicActFileById(System.Guid publicActFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PublicActFile> GetPublicActFileByIdAsync(System.Guid publicActFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileIdentifierByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileIdentifierByActIdRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileIdentifierByActIdInf" +
            "ocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetPublicActFileIdentifierByActId(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileIdentifierByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicActFileIdentifierByActIdRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPublicActFileIdentifierByActIdAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileByIdInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        Integration.Epep.PrivateMotiveFile GetPrivateMotiveFileById(System.Guid privateMotiveFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PrivateMotiveFile> GetPrivateMotiveFileByIdAsync(System.Guid privateMotiveFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileIdentifierByActI" +
            "d", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileIdentifierByActI" +
            "dResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileIdentifierByActI" +
            "dInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetPrivateMotiveFileIdentifierByActId(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileIdentifierByActI" +
            "d", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPrivateMotiveFileIdentifierByActI" +
            "dResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPrivateMotiveFileIdentifierByActIdAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileByIdInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        Integration.Epep.PublicMotiveFile GetPublicMotiveFileById(System.Guid publicActFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.PublicMotiveFile> GetPublicMotiveFileByIdAsync(System.Guid publicActFileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileIdentifierByActId" +
            "", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileIdentifierByActId" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileIdentifierByActId" +
            "InfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetPublicMotiveFileIdentifierByActId(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileIdentifierByActId" +
            "", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetPublicMotiveFileIdentifierByActId" +
            "Response")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPublicMotiveFileIdentifierByActIdAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertIncomingDocument(Integration.Epep.IncomingDocument incomingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertIncomingDocumentAsync(Integration.Epep.IncomingDocument incomingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateIncomingDocument(Integration.Epep.IncomingDocument incomingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateIncomingDocumentAsync(Integration.Epep.IncomingDocument incomingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentFileInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertIncomingDocumentFile(Integration.Epep.IncomingDocumentFile incomingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertIncomingDocumentFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertIncomingDocumentFileAsync(Integration.Epep.IncomingDocumentFile incomingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentFileInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateIncomingDocumentFile(Integration.Epep.IncomingDocumentFile incomingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateIncomingDocumentFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateIncomingDocumentFileAsync(Integration.Epep.IncomingDocumentFile incomingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertOutgoingDocument(Integration.Epep.OutgoingDocument outgoingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertOutgoingDocumentAsync(Integration.Epep.OutgoingDocument outgoingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateOutgoingDocument(Integration.Epep.OutgoingDocument outgoingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateOutgoingDocumentAsync(Integration.Epep.OutgoingDocument outgoingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentFileInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertOutgoingDocumentFile(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertOutgoingDocumentFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertOutgoingDocumentFileAsync(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentFileInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateOutgoingDocumentFile(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateOutgoingDocumentFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateOutgoingDocumentFileAsync(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertCase(Integration.Epep.Case c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertCaseAsync(Integration.Epep.Case c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateCase(Integration.Epep.Case c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateCaseAsync(Integration.Epep.Case c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> GetCaseId(int incDocumentNumber, int incDocumentYear, string courtCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetCaseIdAsync(int incDocumentNumber, int incDocumentYear, string courtCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertConnectedCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertConnectedCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertConnectedCaseInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertConnectedCase(Integration.Epep.ConnectedCase connectedCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertConnectedCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertConnectedCaseResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertConnectedCaseAsync(Integration.Epep.ConnectedCase connectedCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateConnectedCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateConnectedCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateConnectedCaseInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateConnectedCase(Integration.Epep.ConnectedCase connectedCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateConnectedCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateConnectedCaseResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateConnectedCaseAsync(Integration.Epep.ConnectedCase connectedCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertReporter", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertReporterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertReporterInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertReporter(Integration.Epep.Reporter reporter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertReporter", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertReporterResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertReporterAsync(Integration.Epep.Reporter reporter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateReporter", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateReporterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateReporterInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateReporter(Integration.Epep.Reporter reporter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateReporter", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateReporterResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateReporterAsync(Integration.Epep.Reporter reporter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertAssignment(Integration.Epep.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertAssignmentAsync(Integration.Epep.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateAssignment(Integration.Epep.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateAssignmentAsync(Integration.Epep.Assignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentFileInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertAssignmentFile(Integration.Epep.AssignmentFile assignmentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAssignmentFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertAssignmentFileAsync(Integration.Epep.AssignmentFile assignmentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentFileInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateAssignmentFile(Integration.Epep.AssignmentFile assignmentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAssignmentFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateAssignmentFileAsync(Integration.Epep.AssignmentFile assignmentFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearing", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertHearing(Integration.Epep.Hearing hearing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearing", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertHearingAsync(Integration.Epep.Hearing hearing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearing", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateHearing(Integration.Epep.Hearing hearing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearing", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateHearingAsync(Integration.Epep.Hearing hearing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateProtocolFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateProtocolFileInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPrivateProtocolFile(Integration.Epep.PrivateProtocolFile privateProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateProtocolFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPrivateProtocolFileAsync(Integration.Epep.PrivateProtocolFile privateProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateProtocolFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateProtocolFileInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePrivateProtocolFile(Integration.Epep.PrivateProtocolFile privateProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateProtocolFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePrivateProtocolFileAsync(Integration.Epep.PrivateProtocolFile privateProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicProtocolFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicProtocolFileInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPublicProtocolFile(Integration.Epep.PublicProtocolFile publicProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicProtocolFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPublicProtocolFileAsync(Integration.Epep.PublicProtocolFile publicProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicProtocolFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicProtocolFileInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePublicProtocolFile(Integration.Epep.PublicProtocolFile publicProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicProtocolFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePublicProtocolFileAsync(Integration.Epep.PublicProtocolFile publicProtocolFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingParticipant", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingParticipantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingParticipantInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertHearingParticipant(Integration.Epep.HearingParticipant hearingParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingParticipant", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertHearingParticipantResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertHearingParticipantAsync(Integration.Epep.HearingParticipant hearingParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingParticipant", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingParticipantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingParticipantInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateHearingParticipant(Integration.Epep.HearingParticipant hearingParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingParticipant", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateHearingParticipantResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateHearingParticipantAsync(Integration.Epep.HearingParticipant hearingParticipant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAct", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertAct(Integration.Epep.Act act);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAct", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertActAsync(Integration.Epep.Act act);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAct", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateAct(Integration.Epep.Act act);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAct", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateActAsync(Integration.Epep.Act act);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicActFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicActFileInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPublicActFile(Integration.Epep.PublicActFile publicActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicActFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPublicActFileAsync(Integration.Epep.PublicActFile publicActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicActFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicActFileInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePublicActFile(Integration.Epep.PublicActFile publicActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicActFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePublicActFileAsync(Integration.Epep.PublicActFile publicActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateActFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateActFileInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPrivateActFile(Integration.Epep.PrivateActFile privateActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateActFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPrivateActFileAsync(Integration.Epep.PrivateActFile privateActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateActFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateActFileInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePrivateActFile(Integration.Epep.PrivateActFile privateActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateActFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePrivateActFileAsync(Integration.Epep.PrivateActFile privateActFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicMotiveFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicMotiveFileInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPublicMotiveFile(Integration.Epep.PublicMotiveFile publicMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPublicMotiveFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPublicMotiveFileAsync(Integration.Epep.PublicMotiveFile publicMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicMotiveFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicMotiveFileInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePublicMotiveFile(Integration.Epep.PublicMotiveFile publicMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePublicMotiveFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePublicMotiveFileAsync(Integration.Epep.PublicMotiveFile publicMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateMotiveFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateMotiveFileInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPrivateMotiveFile(Integration.Epep.PrivateMotiveFile privateMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPrivateMotiveFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPrivateMotiveFileAsync(Integration.Epep.PrivateMotiveFile privateMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateMotiveFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateMotiveFileInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePrivateMotiveFile(Integration.Epep.PrivateMotiveFile privateMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePrivateMotiveFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePrivateMotiveFileAsync(Integration.Epep.PrivateMotiveFile privateMotiveFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActPreparator", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActPreparatorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActPreparatorInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertActPreparator(Integration.Epep.ActPreparator actPreparator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActPreparator", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertActPreparatorResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertActPreparatorAsync(Integration.Epep.ActPreparator actPreparator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActPreparator", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActPreparatorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActPreparatorInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateActPreparator(Integration.Epep.ActPreparator actPreparator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActPreparator", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateActPreparatorResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateActPreparatorAsync(Integration.Epep.ActPreparator actPreparator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAppeal", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAppealResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAppealInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertAppeal(Integration.Epep.Appeal appeal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAppeal", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertAppealResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertAppealAsync(Integration.Epep.Appeal appeal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAppeal", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAppealResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAppealInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateAppeal(Integration.Epep.Appeal appeal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAppeal", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateAppealResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateAppealAsync(Integration.Epep.Appeal appeal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseRuling", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseRulingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseRulingInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertCaseRuling(Integration.Epep.CaseRuling caseRuling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseRuling", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertCaseRulingResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertCaseRulingAsync(Integration.Epep.CaseRuling caseRuling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseRuling", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseRulingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseRulingInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateCaseRuling(Integration.Epep.CaseRuling caseRuling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseRuling", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateCaseRulingResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateCaseRulingAsync(Integration.Epep.CaseRuling caseRuling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSide", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSideInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertSide(Integration.Epep.Side side);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSide", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSideResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertSideAsync(Integration.Epep.Side side);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSide", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSideInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateSide(Integration.Epep.Side side);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSide", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSideResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateSideAsync(Integration.Epep.Side side);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerAssignmentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertLawyerAssignment(Integration.Epep.LawyerAssignment lawyerAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerAssignmentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertLawyerAssignmentAsync(Integration.Epep.LawyerAssignment lawyerAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerAssignmentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateLawyerAssignment(Integration.Epep.LawyerAssignment lawyerAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerAssignmentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateLawyerAssignmentAsync(Integration.Epep.LawyerAssignment lawyerAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummon", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertSummon(Integration.Epep.Summon summon, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummon", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertSummonAsync(Integration.Epep.Summon summon, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummon", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateSummon(Integration.Epep.Summon summon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummon", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateSummonAsync(Integration.Epep.Summon summon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonFileInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertSummonFile(Integration.Epep.SummonFile summonFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertSummonFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertSummonFileAsync(Integration.Epep.SummonFile summonFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonFileInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateSummonFile(Integration.Epep.SummonFile summonFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateSummonFileResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateSummonFileAsync(Integration.Epep.SummonFile summonFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllLawyers", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllLawyersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllLawyersInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Lawyer[] GetAllLawyers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllLawyers", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllLawyersResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Lawyer[]> GetAllLawyersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllNewLawyers", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllNewLawyersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllNewLawyersInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Lawyer[] GetAllNewLawyers(System.DateTime from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllNewLawyers", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllNewLawyersResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Lawyer[]> GetAllNewLawyersAsync(System.DateTime from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerByNumber", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerByNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerByNumberInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Lawyer GetLawyerByNumber(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerByNumber", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetLawyerByNumberResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Lawyer> GetLawyerByNumberAsync(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllServedSummonsByCourt", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllServedSummonsByCourtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllServedSummonsByCourtInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Guid[] GetAllServedSummonsByCourt(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllServedSummonsByCourt", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllServedSummonsByCourtResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetAllServedSummonsByCourtAsync(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsServedTimestamp", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsServedTimestampResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsServedTimestampInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        System.DateTime GetSummonsServedTimestamp(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsServedTimestamp", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsServedTimestampResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetSummonsServedTimestampAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllReadSummonsByCourt", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllReadSummonsByCourtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllReadSummonsByCourtInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Guid[] GetAllReadSummonsByCourt(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllReadSummonsByCourt", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAllReadSummonsByCourtResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetAllReadSummonsByCourtAsync(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsReadTimestamp", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsReadTimestampResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsReadTimestampInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        System.DateTime GetSummonsReadTimestamp(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsReadTimestamp", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonsReadTimestampResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetSummonsReadTimestampAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/MarkSummonAsRead", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/MarkSummonAsReadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/MarkSummonAsReadInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> MarkSummonAsRead(System.Guid guid, System.Nullable<System.DateTime> date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/MarkSummonAsRead", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/MarkSummonAsReadResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> MarkSummonAsReadAsync(System.Guid guid, System.Nullable<System.DateTime> date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReadSummonsForCertainDay", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetReadSummonsForCertainDayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReadSummonsForCertainDayInfocaseF" +
            "aultFault", Name="InfocaseFault")]
        System.Guid[] GetReadSummonsForCertainDay(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReadSummonsForCertainDay", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetReadSummonsForCertainDayResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetReadSummonsForCertainDayAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonReportDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonReportDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonReportDocumentInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        byte[] GetSummonReportDocument(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonReportDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetSummonReportDocumentResponse")]
        System.Threading.Tasks.Task<byte[]> GetSummonReportDocumentAsync(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateSummonsAccess", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateSummonsAccessResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateSummonsAccessInfocaseFaultFa" +
            "ult", Name="InfocaseFault")]
        void ActivateSummonsAccess(System.Guid userId, System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateSummonsAccess", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateSummonsAccessResponse")]
        System.Threading.Tasks.Task ActivateSummonsAccessAsync(System.Guid userId, System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateSummonsAccess", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateSummonsAccessResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateSummonsAccessInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        void DeactivateSummonsAccess(System.Guid userId, System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateSummonsAccess", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateSummonsAccessResponse")]
        System.Threading.Tasks.Task DeactivateSummonsAccessAsync(System.Guid userId, System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonAssignmentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPersonAssignment(Integration.Epep.PersonAssignment personAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonAssignmentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPersonAssignmentAsync(Integration.Epep.PersonAssignment personAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonAssignmentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePersonAssignment(Integration.Epep.PersonAssignment personAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonAssignmentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePersonAssignmentAsync(Integration.Epep.PersonAssignment personAssignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertScannedDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertScannedDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertScannedDocumentInfocaseFaultFa" +
            "ult", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertScannedDocument(Integration.Epep.ScannedDocument scannedDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertScannedDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertScannedDocumentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertScannedDocumentAsync(Integration.Epep.ScannedDocument scannedDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateScannedDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateScannedDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateScannedDocumentInfocaseFaultFa" +
            "ult", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateScannedDocument(Integration.Epep.ScannedDocument scannedDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateScannedDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateScannedDocumentResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateScannedDocumentAsync(Integration.Epep.ScannedDocument scannedDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerRegistrationInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertLawyerRegistration(Integration.Epep.LawyerRegistration lawyerRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertLawyerRegistrationResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertLawyerRegistrationAsync(Integration.Epep.LawyerRegistration lawyerRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerRegistrationInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateLawyerRegistration(Integration.Epep.LawyerRegistration lawyerRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateLawyerRegistrationResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateLawyerRegistrationAsync(Integration.Epep.LawyerRegistration lawyerRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateLawyerRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateLawyerRegistrationInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> ActivateLawyerRegistration(System.Guid lawyerRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/ActivateLawyerRegistrationResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> ActivateLawyerRegistrationAsync(System.Guid lawyerRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateLawyerRegistrationResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateLawyerRegistrationInfocase" +
            "FaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> DeactivateLawyerRegistration(System.Guid lawyerRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateLawyerRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivateLawyerRegistrationResponse" +
            "")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> DeactivateLawyerRegistrationAsync(System.Guid lawyerRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonRegistrationInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> InsertPersonRegistration(Integration.Epep.PersonRegistration personRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/InsertPersonRegistrationResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPersonRegistrationAsync(Integration.Epep.PersonRegistration personRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonRegistrationInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdatePersonRegistration(Integration.Epep.PersonRegistration personRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdatePersonRegistrationResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePersonRegistrationAsync(Integration.Epep.PersonRegistration personRegistration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivatePersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/ActivatePersonRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivatePersonRegistrationInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> ActivatePersonRegistration(System.Guid personRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/ActivatePersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/ActivatePersonRegistrationResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> ActivatePersonRegistrationAsync(System.Guid personRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivatePersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivatePersonRegistrationResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivatePersonRegistrationInfocase" +
            "FaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> DeactivatePersonRegistration(System.Guid personRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivatePersonRegistration", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeactivatePersonRegistrationResponse" +
            "")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> DeactivatePersonRegistrationAsync(System.Guid personRegistrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetUserRegistrationInfoByUsername", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetUserRegistrationInfoByUsernameRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetUserRegistrationInfoByUsernameInf" +
            "ocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.UserRegistrationInfo GetUserRegistrationInfoByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetUserRegistrationInfoByUsername", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetUserRegistrationInfoByUsernameRes" +
            "ponse")]
        System.Threading.Tasks.Task<Integration.Epep.UserRegistrationInfo> GetUserRegistrationInfoByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateUsername", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateUsernameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateUsernameInfocaseFaultFault", Name="InfocaseFault")]
        System.Nullable<System.Guid> UpdateUsername(string oldUsername, string newUsername, string courtCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateUsername", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/UpdateUsernameResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateUsernameAsync(string oldUsername, string newUsername, string courtCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdentifiers", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdentifiersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdentifiersInfocaseFaultFault" +
            "", Name="InfocaseFault")]
        System.Guid[] GetCaseIdentifiers(System.Nullable<int> caseNumber, string caseKindCode, System.Nullable<int> caseYear, string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdentifiers", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseIdentifiersResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetCaseIdentifiersAsync(System.Nullable<int> caseNumber, string caseKindCode, System.Nullable<int> caseYear, string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        bool DeleteIncomingDocument(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentResponse")]
        System.Threading.Tasks.Task<bool> DeleteIncomingDocumentAsync(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        bool DeleteOutgoingDocument(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentResponse")]
        System.Threading.Tasks.Task<bool> DeleteOutgoingDocumentAsync(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteCase(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseResponse")]
        System.Threading.Tasks.Task<bool> DeleteCaseAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteConnectedCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteConnectedCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteConnectedCaseInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        bool DeleteConnectedCase(System.Guid connectedCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteConnectedCase", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteConnectedCaseResponse")]
        System.Threading.Tasks.Task<bool> DeleteConnectedCaseAsync(System.Guid connectedCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteReporter", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteReporterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteReporterInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteReporter(System.Guid reporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteReporter", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteReporterResponse")]
        System.Threading.Tasks.Task<bool> DeleteReporterAsync(System.Guid reporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteAssignment(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentResponse")]
        System.Threading.Tasks.Task<bool> DeleteAssignmentAsync(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearing", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteHearing(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearing", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingResponse")]
        System.Threading.Tasks.Task<bool> DeleteHearingAsync(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingParticipant", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingParticipantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingParticipantInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        bool DeleteHearingParticipant(System.Guid hearingParticipantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingParticipant", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteHearingParticipantResponse")]
        System.Threading.Tasks.Task<bool> DeleteHearingParticipantAsync(System.Guid hearingParticipantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAct", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteAct(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAct", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActResponse")]
        System.Threading.Tasks.Task<bool> DeleteActAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActPreparator", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActPreparatorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActPreparatorInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        bool DeleteActPreparator(System.Guid actPreparatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActPreparator", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteActPreparatorResponse")]
        System.Threading.Tasks.Task<bool> DeleteActPreparatorAsync(System.Guid actPreparatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAppeal", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAppealResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAppealInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteAppeal(System.Guid appealId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAppeal", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAppealResponse")]
        System.Threading.Tasks.Task<bool> DeleteAppealAsync(System.Guid appealId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseRuling", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseRulingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseRulingInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteCaseRuling(System.Guid caseRulingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseRuling", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteCaseRulingResponse")]
        System.Threading.Tasks.Task<bool> DeleteCaseRulingAsync(System.Guid caseRulingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSide", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSideInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteSide(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSide", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSideResponse")]
        System.Threading.Tasks.Task<bool> DeleteSideAsync(System.Guid sideId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteLawyerAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteLawyerAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteLawyerAssignmentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        bool DeleteLawyerAssignment(System.Guid lawyerAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteLawyerAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteLawyerAssignmentResponse")]
        System.Threading.Tasks.Task<bool> DeleteLawyerAssignmentAsync(System.Guid lawyerAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummon", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteSummon(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummon", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonResponse")]
        System.Threading.Tasks.Task<bool> DeleteSummonAsync(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePersonAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePersonAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePersonAssignmentInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        bool DeletePersonAssignment(System.Guid personAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePersonAssignment", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePersonAssignmentResponse")]
        System.Threading.Tasks.Task<bool> DeletePersonAssignmentAsync(System.Guid personAssignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteScannedDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteScannedDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteScannedDocumentInfocaseFaultFa" +
            "ult", Name="InfocaseFault")]
        bool DeleteScannedDocument(System.Guid scannedDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteScannedDocument", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteScannedDocumentResponse")]
        System.Threading.Tasks.Task<bool> DeleteScannedDocumentAsync(System.Guid scannedDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentFileInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        bool DeleteAssignmentFile(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteAssignmentFileResponse")]
        System.Threading.Tasks.Task<bool> DeleteAssignmentFileAsync(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateProtocolFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateProtocolFileInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        bool DeletePrivateProtocolFile(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateProtocolFileResponse")]
        System.Threading.Tasks.Task<bool> DeletePrivateProtocolFileAsync(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicProtocolFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicProtocolFileInfocaseFaul" +
            "tFault", Name="InfocaseFault")]
        bool DeletePublicProtocolFile(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicProtocolFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicProtocolFileResponse")]
        System.Threading.Tasks.Task<bool> DeletePublicProtocolFileAsync(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentFileInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        bool DeleteIncomingDocumentFile(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteIncomingDocumentFileResponse")]
        System.Threading.Tasks.Task<bool> DeleteIncomingDocumentFileAsync(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentFileInfocaseFa" +
            "ultFault", Name="InfocaseFault")]
        bool DeleteOutgoingDocumentFile(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteOutgoingDocumentFileResponse")]
        System.Threading.Tasks.Task<bool> DeleteOutgoingDocumentFileAsync(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonFileInfocaseFaultFault", Name="InfocaseFault")]
        bool DeleteSummonFile(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeleteSummonFileResponse")]
        System.Threading.Tasks.Task<bool> DeleteSummonFileAsync(System.Guid summonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateActFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateActFileInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        bool DeletePrivateActFile(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateActFileResponse")]
        System.Threading.Tasks.Task<bool> DeletePrivateActFileAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicActFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicActFileInfocaseFaultFaul" +
            "t", Name="InfocaseFault")]
        bool DeletePublicActFile(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicActFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicActFileResponse")]
        System.Threading.Tasks.Task<bool> DeletePublicActFileAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateMotiveFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateMotiveFileInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        bool DeletePrivateMotiveFile(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePrivateMotiveFileResponse")]
        System.Threading.Tasks.Task<bool> DeletePrivateMotiveFileAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicMotiveFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicMotiveFileInfocaseFaultF" +
            "ault", Name="InfocaseFault")]
        bool DeletePublicMotiveFile(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicMotiveFile", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/DeletePublicMotiveFileResponse")]
        System.Threading.Tasks.Task<bool> DeletePublicMotiveFileAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentByIdInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        Integration.Epep.IncomingDocument GetIncomingDocumentById(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.IncomingDocument> GetIncomingDocumentByIdAsync(System.Guid incomingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentIdentifiersByCase" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentIdentifiersByCase" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentIdentifiersByCase" +
            "IdInfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetIncomingDocumentIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentIdentifiersByCase" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetIncomingDocumentIdentifiersByCase" +
            "IdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetIncomingDocumentIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentByIdInfocaseFault" +
            "Fault", Name="InfocaseFault")]
        Integration.Epep.OutgoingDocument GetOutgoingDocumentById(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.OutgoingDocument> GetOutgoingDocumentByIdAsync(System.Guid outgoingDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentIdentifiersByCase" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentIdentifiersByCase" +
            "IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentIdentifiersByCase" +
            "IdInfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetOutgoingDocumentIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentIdentifiersByCase" +
            "Id", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetOutgoingDocumentIdentifiersByCase" +
            "IdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetOutgoingDocumentIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Case GetCaseById(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Case> GetCaseByIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseByIdInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        Integration.Epep.ConnectedCase GetConnectedCaseById(System.Guid connectedCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.ConnectedCase> GetConnectedCaseByIdAsync(System.Guid connectedCaseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseIdentifiersByCaseIdR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseIdentifiersByCaseIdI" +
            "nfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetConnectedCaseIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetConnectedCaseIdentifiersByCaseIdR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetConnectedCaseIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Reporter GetReporterById(System.Guid reporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Reporter> GetReporterByIdAsync(System.Guid reporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterIdentifiersByCaseIdRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterIdentifiersByCaseIdInfoca" +
            "seFaultFault", Name="InfocaseFault")]
        System.Guid[] GetReporterIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetReporterIdentifiersByCaseIdRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Guid[]> GetReporterIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Assignment GetAssignmentById(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Assignment> GetAssignmentByIdAsync(System.Guid assignmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentIdentifiersByCaseIdResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentIdentifiersByCaseIdInfo" +
            "caseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetAssignmentIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAssignmentIdentifiersByCaseIdResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Guid[]> GetAssignmentIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Hearing GetHearingById(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Hearing> GetHearingByIdAsync(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingIdentifiersByCaseIdRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingIdentifiersByCaseIdInfocas" +
            "eFaultFault", Name="InfocaseFault")]
        System.Guid[] GetHearingIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingIdentifiersByCaseIdRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Guid[]> GetHearingIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantByIdInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        Integration.Epep.HearingParticipant GetHearingParticipantById(System.Guid hearingParticipantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.HearingParticipant> GetHearingParticipantByIdAsync(System.Guid hearingParticipantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantIdentifiersByHe" +
            "aringId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantIdentifiersByHe" +
            "aringIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantIdentifiersByHe" +
            "aringIdInfocaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetHearingParticipantIdentifiersByHearingId(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantIdentifiersByHe" +
            "aringId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetHearingParticipantIdentifiersByHe" +
            "aringIdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetHearingParticipantIdentifiersByHearingIdAsync(System.Guid hearingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Act GetActById(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Act> GetActByIdAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActIdentifiersByCaseIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActIdentifiersByCaseIdInfocaseFau" +
            "ltFault", Name="InfocaseFault")]
        System.Guid[] GetActIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActIdentifiersByCaseIdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetActIdentifiersByCaseIdAsync(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorByIdInfocaseFaultFau" +
            "lt", Name="InfocaseFault")]
        Integration.Epep.ActPreparator GetActPreparatorById(System.Guid actPreparatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.ActPreparator> GetActPreparatorByIdAsync(System.Guid actPreparatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorIdentifiersByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorIdentifiersByActIdRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorIdentifiersByActIdIn" +
            "focaseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetActPreparatorIdentifiersByActId(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorIdentifiersByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetActPreparatorIdentifiersByActIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetActPreparatorIdentifiersByActIdAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.Appeal GetAppealById(System.Guid appealId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.Appeal> GetAppealByIdAsync(System.Guid appealId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealIdentifiersByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealIdentifiersByActIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealIdentifiersByActIdInfocaseF" +
            "aultFault", Name="InfocaseFault")]
        System.Guid[] GetAppealIdentifiersByActId(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealIdentifiersByActId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetAppealIdentifiersByActIdResponse")]
        System.Threading.Tasks.Task<System.Guid[]> GetAppealIdentifiersByActIdAsync(System.Guid actId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingByIdInfocaseFaultFault", Name="InfocaseFault")]
        Integration.Epep.CaseRuling GetCaseRulingById(System.Guid caseRulingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingById", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingByIdResponse")]
        System.Threading.Tasks.Task<Integration.Epep.CaseRuling> GetCaseRulingByIdAsync(System.Guid caseRulingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingIdentifiersByCaseIdResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Integration.Epep.InfocaseFault), Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingIdentifiersByCaseIdInfo" +
            "caseFaultFault", Name="InfocaseFault")]
        System.Guid[] GetCaseRulingIdentifiersByCaseId(System.Guid caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingIdentifiersByCaseId", ReplyAction="http://www.abbaty.com/eCase/v2/IeCaseService/GetCaseRulingIdentifiersByCaseIdResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Guid[]> GetCaseRulingIdentifiersByCaseIdAsync(System.Guid caseId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IeCaseServiceChannel : Integration.Epep.IeCaseService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class IeCaseServiceClient : System.ServiceModel.ClientBase<Integration.Epep.IeCaseService>, Integration.Epep.IeCaseService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public IeCaseServiceClient() : 
                base(IeCaseServiceClient.GetDefaultBinding(), IeCaseServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IeCaseService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IeCaseServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(IeCaseServiceClient.GetBindingForEndpoint(endpointConfiguration), IeCaseServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IeCaseServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(IeCaseServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IeCaseServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(IeCaseServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public IeCaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public Integration.Epep.Side GetSideById(System.Guid sideId)
        {
            return base.Channel.GetSideById(sideId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Side> GetSideByIdAsync(System.Guid sideId)
        {
            return base.Channel.GetSideByIdAsync(sideId);
        }
        
        public System.Guid[] GetSideIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetSideIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetSideIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetSideIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.LawyerAssignment GetLawyerAssignmentById(System.Guid lawyerAssignmentId)
        {
            return base.Channel.GetLawyerAssignmentById(lawyerAssignmentId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.LawyerAssignment> GetLawyerAssignmentByIdAsync(System.Guid lawyerAssignmentId)
        {
            return base.Channel.GetLawyerAssignmentByIdAsync(lawyerAssignmentId);
        }
        
        public System.Guid[] GetLawyerAssignmentIdentifiersBySideId(System.Guid sideId)
        {
            return base.Channel.GetLawyerAssignmentIdentifiersBySideId(sideId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetLawyerAssignmentIdentifiersBySideIdAsync(System.Guid sideId)
        {
            return base.Channel.GetLawyerAssignmentIdentifiersBySideIdAsync(sideId);
        }
        
        public Integration.Epep.PersonAssignment GetPersonAssignmentById(System.Guid personAssignmentId)
        {
            return base.Channel.GetPersonAssignmentById(personAssignmentId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PersonAssignment> GetPersonAssignmentByIdAsync(System.Guid personAssignmentId)
        {
            return base.Channel.GetPersonAssignmentByIdAsync(personAssignmentId);
        }
        
        public System.Guid[] GetPersonAssignmentIdentifiersBySideId(System.Guid sideId)
        {
            return base.Channel.GetPersonAssignmentIdentifiersBySideId(sideId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetPersonAssignmentIdentifiersBySideIdAsync(System.Guid sideId)
        {
            return base.Channel.GetPersonAssignmentIdentifiersBySideIdAsync(sideId);
        }
        
        public Integration.Epep.LawyerRegistration GetLawyerRegistrationById(System.Guid lawyerRegistrationId)
        {
            return base.Channel.GetLawyerRegistrationById(lawyerRegistrationId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.LawyerRegistration> GetLawyerRegistrationByIdAsync(System.Guid lawyerRegistrationId)
        {
            return base.Channel.GetLawyerRegistrationByIdAsync(lawyerRegistrationId);
        }
        
        public Integration.Epep.LawyerRegistration SelectLawyerRegistration(string lawyerNumber)
        {
            return base.Channel.SelectLawyerRegistration(lawyerNumber);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.LawyerRegistration> SelectLawyerRegistrationAsync(string lawyerNumber)
        {
            return base.Channel.SelectLawyerRegistrationAsync(lawyerNumber);
        }
        
        public System.Guid[] GetLawyerRegistrationIdentifiersByLawyerId(System.Guid lawyerId)
        {
            return base.Channel.GetLawyerRegistrationIdentifiersByLawyerId(lawyerId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetLawyerRegistrationIdentifiersByLawyerIdAsync(System.Guid lawyerId)
        {
            return base.Channel.GetLawyerRegistrationIdentifiersByLawyerIdAsync(lawyerId);
        }
        
        public Integration.Epep.PersonRegistration GetPersonRegistrationById(System.Guid personRegistrationId)
        {
            return base.Channel.GetPersonRegistrationById(personRegistrationId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PersonRegistration> GetPersonRegistrationByIdAsync(System.Guid personRegistrationId)
        {
            return base.Channel.GetPersonRegistrationByIdAsync(personRegistrationId);
        }
        
        public Integration.Epep.PersonRegistration SelectPersonRegistration(string EGN)
        {
            return base.Channel.SelectPersonRegistration(EGN);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PersonRegistration> SelectPersonRegistrationAsync(string EGN)
        {
            return base.Channel.SelectPersonRegistrationAsync(EGN);
        }
        
        public System.Nullable<System.Guid> GetPersonRegistrationIdentifierByPersonAssignmentId(System.Guid personassignmentId)
        {
            return base.Channel.GetPersonRegistrationIdentifierByPersonAssignmentId(personassignmentId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPersonRegistrationIdentifierByPersonAssignmentIdAsync(System.Guid personassignmentId)
        {
            return base.Channel.GetPersonRegistrationIdentifierByPersonAssignmentIdAsync(personassignmentId);
        }
        
        public Integration.Epep.Summon GetSummonById(System.Guid summonId)
        {
            return base.Channel.GetSummonById(summonId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Summon> GetSummonByIdAsync(System.Guid summonId)
        {
            return base.Channel.GetSummonByIdAsync(summonId);
        }
        
        public System.Guid[] GetSummonIdentifiersByParentId(System.Guid parentId, string summonTypeCode)
        {
            return base.Channel.GetSummonIdentifiersByParentId(parentId, summonTypeCode);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetSummonIdentifiersByParentIdAsync(System.Guid parentId, string summonTypeCode)
        {
            return base.Channel.GetSummonIdentifiersByParentIdAsync(parentId, summonTypeCode);
        }
        
        public Integration.Epep.ScannedDocument GetScannedDocumentById(System.Guid scannedDocumentId)
        {
            return base.Channel.GetScannedDocumentById(scannedDocumentId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.ScannedDocument> GetScannedDocumentByIdAsync(System.Guid scannedDocumentId)
        {
            return base.Channel.GetScannedDocumentByIdAsync(scannedDocumentId);
        }
        
        public System.Guid[] GetScannedDocumentIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetScannedDocumentIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetScannedDocumentIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetScannedDocumentIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.AssignmentFile GetAssignmentFileById(System.Guid assignmentFileId)
        {
            return base.Channel.GetAssignmentFileById(assignmentFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.AssignmentFile> GetAssignmentFileByIdAsync(System.Guid assignmentFileId)
        {
            return base.Channel.GetAssignmentFileByIdAsync(assignmentFileId);
        }
        
        public System.Nullable<System.Guid> GetAssignmentFileIdentifiersByAssignmentId(System.Guid assignmentId)
        {
            return base.Channel.GetAssignmentFileIdentifiersByAssignmentId(assignmentId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetAssignmentFileIdentifiersByAssignmentIdAsync(System.Guid assignmentId)
        {
            return base.Channel.GetAssignmentFileIdentifiersByAssignmentIdAsync(assignmentId);
        }
        
        public Integration.Epep.PrivateProtocolFile GetPrivateProtocolFileById(System.Guid privateProtocolId)
        {
            return base.Channel.GetPrivateProtocolFileById(privateProtocolId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PrivateProtocolFile> GetPrivateProtocolFileByIdAsync(System.Guid privateProtocolId)
        {
            return base.Channel.GetPrivateProtocolFileByIdAsync(privateProtocolId);
        }
        
        public System.Nullable<System.Guid> GetPrivateProtocolFileIdentifierByHearingId(System.Guid hearingId)
        {
            return base.Channel.GetPrivateProtocolFileIdentifierByHearingId(hearingId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPrivateProtocolFileIdentifierByHearingIdAsync(System.Guid hearingId)
        {
            return base.Channel.GetPrivateProtocolFileIdentifierByHearingIdAsync(hearingId);
        }
        
        public Integration.Epep.PublicProtocolFile GetPublicProtocolFileById(System.Guid publicProtocolFileId)
        {
            return base.Channel.GetPublicProtocolFileById(publicProtocolFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PublicProtocolFile> GetPublicProtocolFileByIdAsync(System.Guid publicProtocolFileId)
        {
            return base.Channel.GetPublicProtocolFileByIdAsync(publicProtocolFileId);
        }
        
        public System.Nullable<System.Guid> GetPublicProtocolFileIdentifierByHearingId(System.Guid hearingId)
        {
            return base.Channel.GetPublicProtocolFileIdentifierByHearingId(hearingId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPublicProtocolFileIdentifierByHearingIdAsync(System.Guid hearingId)
        {
            return base.Channel.GetPublicProtocolFileIdentifierByHearingIdAsync(hearingId);
        }
        
        public Integration.Epep.IncomingDocumentFile GetIncomingDocumentFileById(System.Guid incomingDocumentFileId)
        {
            return base.Channel.GetIncomingDocumentFileById(incomingDocumentFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.IncomingDocumentFile> GetIncomingDocumentFileByIdAsync(System.Guid incomingDocumentFileId)
        {
            return base.Channel.GetIncomingDocumentFileByIdAsync(incomingDocumentFileId);
        }
        
        public System.Nullable<System.Guid> GetIncomingDocumentFileIdentifierByIncomingDocumentId(System.Guid incomingDocumentId)
        {
            return base.Channel.GetIncomingDocumentFileIdentifierByIncomingDocumentId(incomingDocumentId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetIncomingDocumentFileIdentifierByIncomingDocumentIdAsync(System.Guid incomingDocumentId)
        {
            return base.Channel.GetIncomingDocumentFileIdentifierByIncomingDocumentIdAsync(incomingDocumentId);
        }
        
        public Integration.Epep.OutgoingDocumentFile GetOutgoingDocumentFileById(System.Guid outgoingDocumentFileId)
        {
            return base.Channel.GetOutgoingDocumentFileById(outgoingDocumentFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.OutgoingDocumentFile> GetOutgoingDocumentFileByIdAsync(System.Guid outgoingDocumentFileId)
        {
            return base.Channel.GetOutgoingDocumentFileByIdAsync(outgoingDocumentFileId);
        }
        
        public System.Nullable<System.Guid> GetOutgoingDocumentFileIdentifierByOutgoingDocumentId(System.Guid outgoingDocumentId)
        {
            return base.Channel.GetOutgoingDocumentFileIdentifierByOutgoingDocumentId(outgoingDocumentId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetOutgoingDocumentFileIdentifierByOutgoingDocumentIdAsync(System.Guid outgoingDocumentId)
        {
            return base.Channel.GetOutgoingDocumentFileIdentifierByOutgoingDocumentIdAsync(outgoingDocumentId);
        }
        
        public Integration.Epep.SummonFile GetSummonFileById(System.Guid summonFileId)
        {
            return base.Channel.GetSummonFileById(summonFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.SummonFile> GetSummonFileByIdAsync(System.Guid summonFileId)
        {
            return base.Channel.GetSummonFileByIdAsync(summonFileId);
        }
        
        public System.Nullable<System.Guid> GetSummonFileIdentifierBySummonId(System.Guid summonId)
        {
            return base.Channel.GetSummonFileIdentifierBySummonId(summonId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetSummonFileIdentifierBySummonIdAsync(System.Guid summonId)
        {
            return base.Channel.GetSummonFileIdentifierBySummonIdAsync(summonId);
        }
        
        public Integration.Epep.PrivateActFile GetPrivateActFileById(System.Guid privateActFileId)
        {
            return base.Channel.GetPrivateActFileById(privateActFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PrivateActFile> GetPrivateActFileByIdAsync(System.Guid privateActFileId)
        {
            return base.Channel.GetPrivateActFileByIdAsync(privateActFileId);
        }
        
        public System.Nullable<System.Guid> GetPrivateActFileIdentifiersByActId(System.Guid actId)
        {
            return base.Channel.GetPrivateActFileIdentifiersByActId(actId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPrivateActFileIdentifiersByActIdAsync(System.Guid actId)
        {
            return base.Channel.GetPrivateActFileIdentifiersByActIdAsync(actId);
        }
        
        public Integration.Epep.PublicActFile GetPublicActFileById(System.Guid publicActFileId)
        {
            return base.Channel.GetPublicActFileById(publicActFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PublicActFile> GetPublicActFileByIdAsync(System.Guid publicActFileId)
        {
            return base.Channel.GetPublicActFileByIdAsync(publicActFileId);
        }
        
        public System.Nullable<System.Guid> GetPublicActFileIdentifierByActId(System.Guid actId)
        {
            return base.Channel.GetPublicActFileIdentifierByActId(actId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPublicActFileIdentifierByActIdAsync(System.Guid actId)
        {
            return base.Channel.GetPublicActFileIdentifierByActIdAsync(actId);
        }
        
        public Integration.Epep.PrivateMotiveFile GetPrivateMotiveFileById(System.Guid privateMotiveFileId)
        {
            return base.Channel.GetPrivateMotiveFileById(privateMotiveFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PrivateMotiveFile> GetPrivateMotiveFileByIdAsync(System.Guid privateMotiveFileId)
        {
            return base.Channel.GetPrivateMotiveFileByIdAsync(privateMotiveFileId);
        }
        
        public System.Nullable<System.Guid> GetPrivateMotiveFileIdentifierByActId(System.Guid actId)
        {
            return base.Channel.GetPrivateMotiveFileIdentifierByActId(actId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPrivateMotiveFileIdentifierByActIdAsync(System.Guid actId)
        {
            return base.Channel.GetPrivateMotiveFileIdentifierByActIdAsync(actId);
        }
        
        public Integration.Epep.PublicMotiveFile GetPublicMotiveFileById(System.Guid publicActFileId)
        {
            return base.Channel.GetPublicMotiveFileById(publicActFileId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.PublicMotiveFile> GetPublicMotiveFileByIdAsync(System.Guid publicActFileId)
        {
            return base.Channel.GetPublicMotiveFileByIdAsync(publicActFileId);
        }
        
        public System.Nullable<System.Guid> GetPublicMotiveFileIdentifierByActId(System.Guid actId)
        {
            return base.Channel.GetPublicMotiveFileIdentifierByActId(actId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetPublicMotiveFileIdentifierByActIdAsync(System.Guid actId)
        {
            return base.Channel.GetPublicMotiveFileIdentifierByActIdAsync(actId);
        }
        
        public System.Nullable<System.Guid> InsertIncomingDocument(Integration.Epep.IncomingDocument incomingDocument)
        {
            return base.Channel.InsertIncomingDocument(incomingDocument);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertIncomingDocumentAsync(Integration.Epep.IncomingDocument incomingDocument)
        {
            return base.Channel.InsertIncomingDocumentAsync(incomingDocument);
        }
        
        public System.Nullable<System.Guid> UpdateIncomingDocument(Integration.Epep.IncomingDocument incomingDocument)
        {
            return base.Channel.UpdateIncomingDocument(incomingDocument);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateIncomingDocumentAsync(Integration.Epep.IncomingDocument incomingDocument)
        {
            return base.Channel.UpdateIncomingDocumentAsync(incomingDocument);
        }
        
        public System.Nullable<System.Guid> InsertIncomingDocumentFile(Integration.Epep.IncomingDocumentFile incomingDocumentFile)
        {
            return base.Channel.InsertIncomingDocumentFile(incomingDocumentFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertIncomingDocumentFileAsync(Integration.Epep.IncomingDocumentFile incomingDocumentFile)
        {
            return base.Channel.InsertIncomingDocumentFileAsync(incomingDocumentFile);
        }
        
        public System.Nullable<System.Guid> UpdateIncomingDocumentFile(Integration.Epep.IncomingDocumentFile incomingDocumentFile)
        {
            return base.Channel.UpdateIncomingDocumentFile(incomingDocumentFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateIncomingDocumentFileAsync(Integration.Epep.IncomingDocumentFile incomingDocumentFile)
        {
            return base.Channel.UpdateIncomingDocumentFileAsync(incomingDocumentFile);
        }
        
        public System.Nullable<System.Guid> InsertOutgoingDocument(Integration.Epep.OutgoingDocument outgoingDocument)
        {
            return base.Channel.InsertOutgoingDocument(outgoingDocument);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertOutgoingDocumentAsync(Integration.Epep.OutgoingDocument outgoingDocument)
        {
            return base.Channel.InsertOutgoingDocumentAsync(outgoingDocument);
        }
        
        public System.Nullable<System.Guid> UpdateOutgoingDocument(Integration.Epep.OutgoingDocument outgoingDocument)
        {
            return base.Channel.UpdateOutgoingDocument(outgoingDocument);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateOutgoingDocumentAsync(Integration.Epep.OutgoingDocument outgoingDocument)
        {
            return base.Channel.UpdateOutgoingDocumentAsync(outgoingDocument);
        }
        
        public System.Nullable<System.Guid> InsertOutgoingDocumentFile(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile)
        {
            return base.Channel.InsertOutgoingDocumentFile(outgoingDocumentFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertOutgoingDocumentFileAsync(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile)
        {
            return base.Channel.InsertOutgoingDocumentFileAsync(outgoingDocumentFile);
        }
        
        public System.Nullable<System.Guid> UpdateOutgoingDocumentFile(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile)
        {
            return base.Channel.UpdateOutgoingDocumentFile(outgoingDocumentFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateOutgoingDocumentFileAsync(Integration.Epep.OutgoingDocumentFile outgoingDocumentFile)
        {
            return base.Channel.UpdateOutgoingDocumentFileAsync(outgoingDocumentFile);
        }
        
        public System.Nullable<System.Guid> InsertCase(Integration.Epep.Case c)
        {
            return base.Channel.InsertCase(c);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertCaseAsync(Integration.Epep.Case c)
        {
            return base.Channel.InsertCaseAsync(c);
        }
        
        public System.Nullable<System.Guid> UpdateCase(Integration.Epep.Case c)
        {
            return base.Channel.UpdateCase(c);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateCaseAsync(Integration.Epep.Case c)
        {
            return base.Channel.UpdateCaseAsync(c);
        }
        
        public System.Nullable<System.Guid> GetCaseId(int incDocumentNumber, int incDocumentYear, string courtCode)
        {
            return base.Channel.GetCaseId(incDocumentNumber, incDocumentYear, courtCode);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> GetCaseIdAsync(int incDocumentNumber, int incDocumentYear, string courtCode)
        {
            return base.Channel.GetCaseIdAsync(incDocumentNumber, incDocumentYear, courtCode);
        }
        
        public System.Nullable<System.Guid> InsertConnectedCase(Integration.Epep.ConnectedCase connectedCase)
        {
            return base.Channel.InsertConnectedCase(connectedCase);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertConnectedCaseAsync(Integration.Epep.ConnectedCase connectedCase)
        {
            return base.Channel.InsertConnectedCaseAsync(connectedCase);
        }
        
        public System.Nullable<System.Guid> UpdateConnectedCase(Integration.Epep.ConnectedCase connectedCase)
        {
            return base.Channel.UpdateConnectedCase(connectedCase);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateConnectedCaseAsync(Integration.Epep.ConnectedCase connectedCase)
        {
            return base.Channel.UpdateConnectedCaseAsync(connectedCase);
        }
        
        public System.Nullable<System.Guid> InsertReporter(Integration.Epep.Reporter reporter)
        {
            return base.Channel.InsertReporter(reporter);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertReporterAsync(Integration.Epep.Reporter reporter)
        {
            return base.Channel.InsertReporterAsync(reporter);
        }
        
        public System.Nullable<System.Guid> UpdateReporter(Integration.Epep.Reporter reporter)
        {
            return base.Channel.UpdateReporter(reporter);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateReporterAsync(Integration.Epep.Reporter reporter)
        {
            return base.Channel.UpdateReporterAsync(reporter);
        }
        
        public System.Nullable<System.Guid> InsertAssignment(Integration.Epep.Assignment assignment)
        {
            return base.Channel.InsertAssignment(assignment);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertAssignmentAsync(Integration.Epep.Assignment assignment)
        {
            return base.Channel.InsertAssignmentAsync(assignment);
        }
        
        public System.Nullable<System.Guid> UpdateAssignment(Integration.Epep.Assignment assignment)
        {
            return base.Channel.UpdateAssignment(assignment);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateAssignmentAsync(Integration.Epep.Assignment assignment)
        {
            return base.Channel.UpdateAssignmentAsync(assignment);
        }
        
        public System.Nullable<System.Guid> InsertAssignmentFile(Integration.Epep.AssignmentFile assignmentFile)
        {
            return base.Channel.InsertAssignmentFile(assignmentFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertAssignmentFileAsync(Integration.Epep.AssignmentFile assignmentFile)
        {
            return base.Channel.InsertAssignmentFileAsync(assignmentFile);
        }
        
        public System.Nullable<System.Guid> UpdateAssignmentFile(Integration.Epep.AssignmentFile assignmentFile)
        {
            return base.Channel.UpdateAssignmentFile(assignmentFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateAssignmentFileAsync(Integration.Epep.AssignmentFile assignmentFile)
        {
            return base.Channel.UpdateAssignmentFileAsync(assignmentFile);
        }
        
        public System.Nullable<System.Guid> InsertHearing(Integration.Epep.Hearing hearing)
        {
            return base.Channel.InsertHearing(hearing);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertHearingAsync(Integration.Epep.Hearing hearing)
        {
            return base.Channel.InsertHearingAsync(hearing);
        }
        
        public System.Nullable<System.Guid> UpdateHearing(Integration.Epep.Hearing hearing)
        {
            return base.Channel.UpdateHearing(hearing);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateHearingAsync(Integration.Epep.Hearing hearing)
        {
            return base.Channel.UpdateHearingAsync(hearing);
        }
        
        public System.Nullable<System.Guid> InsertPrivateProtocolFile(Integration.Epep.PrivateProtocolFile privateProtocolFile)
        {
            return base.Channel.InsertPrivateProtocolFile(privateProtocolFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPrivateProtocolFileAsync(Integration.Epep.PrivateProtocolFile privateProtocolFile)
        {
            return base.Channel.InsertPrivateProtocolFileAsync(privateProtocolFile);
        }
        
        public System.Nullable<System.Guid> UpdatePrivateProtocolFile(Integration.Epep.PrivateProtocolFile privateProtocolFile)
        {
            return base.Channel.UpdatePrivateProtocolFile(privateProtocolFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePrivateProtocolFileAsync(Integration.Epep.PrivateProtocolFile privateProtocolFile)
        {
            return base.Channel.UpdatePrivateProtocolFileAsync(privateProtocolFile);
        }
        
        public System.Nullable<System.Guid> InsertPublicProtocolFile(Integration.Epep.PublicProtocolFile publicProtocolFile)
        {
            return base.Channel.InsertPublicProtocolFile(publicProtocolFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPublicProtocolFileAsync(Integration.Epep.PublicProtocolFile publicProtocolFile)
        {
            return base.Channel.InsertPublicProtocolFileAsync(publicProtocolFile);
        }
        
        public System.Nullable<System.Guid> UpdatePublicProtocolFile(Integration.Epep.PublicProtocolFile publicProtocolFile)
        {
            return base.Channel.UpdatePublicProtocolFile(publicProtocolFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePublicProtocolFileAsync(Integration.Epep.PublicProtocolFile publicProtocolFile)
        {
            return base.Channel.UpdatePublicProtocolFileAsync(publicProtocolFile);
        }
        
        public System.Nullable<System.Guid> InsertHearingParticipant(Integration.Epep.HearingParticipant hearingParticipant)
        {
            return base.Channel.InsertHearingParticipant(hearingParticipant);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertHearingParticipantAsync(Integration.Epep.HearingParticipant hearingParticipant)
        {
            return base.Channel.InsertHearingParticipantAsync(hearingParticipant);
        }
        
        public System.Nullable<System.Guid> UpdateHearingParticipant(Integration.Epep.HearingParticipant hearingParticipant)
        {
            return base.Channel.UpdateHearingParticipant(hearingParticipant);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateHearingParticipantAsync(Integration.Epep.HearingParticipant hearingParticipant)
        {
            return base.Channel.UpdateHearingParticipantAsync(hearingParticipant);
        }
        
        public System.Nullable<System.Guid> InsertAct(Integration.Epep.Act act)
        {
            return base.Channel.InsertAct(act);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertActAsync(Integration.Epep.Act act)
        {
            return base.Channel.InsertActAsync(act);
        }
        
        public System.Nullable<System.Guid> UpdateAct(Integration.Epep.Act act)
        {
            return base.Channel.UpdateAct(act);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateActAsync(Integration.Epep.Act act)
        {
            return base.Channel.UpdateActAsync(act);
        }
        
        public System.Nullable<System.Guid> InsertPublicActFile(Integration.Epep.PublicActFile publicActFile)
        {
            return base.Channel.InsertPublicActFile(publicActFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPublicActFileAsync(Integration.Epep.PublicActFile publicActFile)
        {
            return base.Channel.InsertPublicActFileAsync(publicActFile);
        }
        
        public System.Nullable<System.Guid> UpdatePublicActFile(Integration.Epep.PublicActFile publicActFile)
        {
            return base.Channel.UpdatePublicActFile(publicActFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePublicActFileAsync(Integration.Epep.PublicActFile publicActFile)
        {
            return base.Channel.UpdatePublicActFileAsync(publicActFile);
        }
        
        public System.Nullable<System.Guid> InsertPrivateActFile(Integration.Epep.PrivateActFile privateActFile)
        {
            return base.Channel.InsertPrivateActFile(privateActFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPrivateActFileAsync(Integration.Epep.PrivateActFile privateActFile)
        {
            return base.Channel.InsertPrivateActFileAsync(privateActFile);
        }
        
        public System.Nullable<System.Guid> UpdatePrivateActFile(Integration.Epep.PrivateActFile privateActFile)
        {
            return base.Channel.UpdatePrivateActFile(privateActFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePrivateActFileAsync(Integration.Epep.PrivateActFile privateActFile)
        {
            return base.Channel.UpdatePrivateActFileAsync(privateActFile);
        }
        
        public System.Nullable<System.Guid> InsertPublicMotiveFile(Integration.Epep.PublicMotiveFile publicMotiveFile)
        {
            return base.Channel.InsertPublicMotiveFile(publicMotiveFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPublicMotiveFileAsync(Integration.Epep.PublicMotiveFile publicMotiveFile)
        {
            return base.Channel.InsertPublicMotiveFileAsync(publicMotiveFile);
        }
        
        public System.Nullable<System.Guid> UpdatePublicMotiveFile(Integration.Epep.PublicMotiveFile publicMotiveFile)
        {
            return base.Channel.UpdatePublicMotiveFile(publicMotiveFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePublicMotiveFileAsync(Integration.Epep.PublicMotiveFile publicMotiveFile)
        {
            return base.Channel.UpdatePublicMotiveFileAsync(publicMotiveFile);
        }
        
        public System.Nullable<System.Guid> InsertPrivateMotiveFile(Integration.Epep.PrivateMotiveFile privateMotiveFile)
        {
            return base.Channel.InsertPrivateMotiveFile(privateMotiveFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPrivateMotiveFileAsync(Integration.Epep.PrivateMotiveFile privateMotiveFile)
        {
            return base.Channel.InsertPrivateMotiveFileAsync(privateMotiveFile);
        }
        
        public System.Nullable<System.Guid> UpdatePrivateMotiveFile(Integration.Epep.PrivateMotiveFile privateMotiveFile)
        {
            return base.Channel.UpdatePrivateMotiveFile(privateMotiveFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePrivateMotiveFileAsync(Integration.Epep.PrivateMotiveFile privateMotiveFile)
        {
            return base.Channel.UpdatePrivateMotiveFileAsync(privateMotiveFile);
        }
        
        public System.Nullable<System.Guid> InsertActPreparator(Integration.Epep.ActPreparator actPreparator)
        {
            return base.Channel.InsertActPreparator(actPreparator);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertActPreparatorAsync(Integration.Epep.ActPreparator actPreparator)
        {
            return base.Channel.InsertActPreparatorAsync(actPreparator);
        }
        
        public System.Nullable<System.Guid> UpdateActPreparator(Integration.Epep.ActPreparator actPreparator)
        {
            return base.Channel.UpdateActPreparator(actPreparator);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateActPreparatorAsync(Integration.Epep.ActPreparator actPreparator)
        {
            return base.Channel.UpdateActPreparatorAsync(actPreparator);
        }
        
        public System.Nullable<System.Guid> InsertAppeal(Integration.Epep.Appeal appeal)
        {
            return base.Channel.InsertAppeal(appeal);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertAppealAsync(Integration.Epep.Appeal appeal)
        {
            return base.Channel.InsertAppealAsync(appeal);
        }
        
        public System.Nullable<System.Guid> UpdateAppeal(Integration.Epep.Appeal appeal)
        {
            return base.Channel.UpdateAppeal(appeal);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateAppealAsync(Integration.Epep.Appeal appeal)
        {
            return base.Channel.UpdateAppealAsync(appeal);
        }
        
        public System.Nullable<System.Guid> InsertCaseRuling(Integration.Epep.CaseRuling caseRuling)
        {
            return base.Channel.InsertCaseRuling(caseRuling);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertCaseRulingAsync(Integration.Epep.CaseRuling caseRuling)
        {
            return base.Channel.InsertCaseRulingAsync(caseRuling);
        }
        
        public System.Nullable<System.Guid> UpdateCaseRuling(Integration.Epep.CaseRuling caseRuling)
        {
            return base.Channel.UpdateCaseRuling(caseRuling);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateCaseRulingAsync(Integration.Epep.CaseRuling caseRuling)
        {
            return base.Channel.UpdateCaseRulingAsync(caseRuling);
        }
        
        public System.Nullable<System.Guid> InsertSide(Integration.Epep.Side side)
        {
            return base.Channel.InsertSide(side);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertSideAsync(Integration.Epep.Side side)
        {
            return base.Channel.InsertSideAsync(side);
        }
        
        public System.Nullable<System.Guid> UpdateSide(Integration.Epep.Side side)
        {
            return base.Channel.UpdateSide(side);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateSideAsync(Integration.Epep.Side side)
        {
            return base.Channel.UpdateSideAsync(side);
        }
        
        public System.Nullable<System.Guid> InsertLawyerAssignment(Integration.Epep.LawyerAssignment lawyerAssignment)
        {
            return base.Channel.InsertLawyerAssignment(lawyerAssignment);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertLawyerAssignmentAsync(Integration.Epep.LawyerAssignment lawyerAssignment)
        {
            return base.Channel.InsertLawyerAssignmentAsync(lawyerAssignment);
        }
        
        public System.Nullable<System.Guid> UpdateLawyerAssignment(Integration.Epep.LawyerAssignment lawyerAssignment)
        {
            return base.Channel.UpdateLawyerAssignment(lawyerAssignment);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateLawyerAssignmentAsync(Integration.Epep.LawyerAssignment lawyerAssignment)
        {
            return base.Channel.UpdateLawyerAssignmentAsync(lawyerAssignment);
        }
        
        public System.Nullable<System.Guid> InsertSummon(Integration.Epep.Summon summon, System.Guid userId)
        {
            return base.Channel.InsertSummon(summon, userId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertSummonAsync(Integration.Epep.Summon summon, System.Guid userId)
        {
            return base.Channel.InsertSummonAsync(summon, userId);
        }
        
        public System.Nullable<System.Guid> UpdateSummon(Integration.Epep.Summon summon)
        {
            return base.Channel.UpdateSummon(summon);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateSummonAsync(Integration.Epep.Summon summon)
        {
            return base.Channel.UpdateSummonAsync(summon);
        }
        
        public System.Nullable<System.Guid> InsertSummonFile(Integration.Epep.SummonFile summonFile)
        {
            return base.Channel.InsertSummonFile(summonFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertSummonFileAsync(Integration.Epep.SummonFile summonFile)
        {
            return base.Channel.InsertSummonFileAsync(summonFile);
        }
        
        public System.Nullable<System.Guid> UpdateSummonFile(Integration.Epep.SummonFile summonFile)
        {
            return base.Channel.UpdateSummonFile(summonFile);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateSummonFileAsync(Integration.Epep.SummonFile summonFile)
        {
            return base.Channel.UpdateSummonFileAsync(summonFile);
        }
        
        public Integration.Epep.Lawyer[] GetAllLawyers()
        {
            return base.Channel.GetAllLawyers();
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Lawyer[]> GetAllLawyersAsync()
        {
            return base.Channel.GetAllLawyersAsync();
        }
        
        public Integration.Epep.Lawyer[] GetAllNewLawyers(System.DateTime from)
        {
            return base.Channel.GetAllNewLawyers(from);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Lawyer[]> GetAllNewLawyersAsync(System.DateTime from)
        {
            return base.Channel.GetAllNewLawyersAsync(from);
        }
        
        public Integration.Epep.Lawyer GetLawyerByNumber(string number)
        {
            return base.Channel.GetLawyerByNumber(number);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Lawyer> GetLawyerByNumberAsync(string number)
        {
            return base.Channel.GetLawyerByNumberAsync(number);
        }
        
        public System.Guid[] GetAllServedSummonsByCourt(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to)
        {
            return base.Channel.GetAllServedSummonsByCourt(courtcode, from, to);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetAllServedSummonsByCourtAsync(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to)
        {
            return base.Channel.GetAllServedSummonsByCourtAsync(courtcode, from, to);
        }
        
        public System.DateTime GetSummonsServedTimestamp(System.Guid guid)
        {
            return base.Channel.GetSummonsServedTimestamp(guid);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetSummonsServedTimestampAsync(System.Guid guid)
        {
            return base.Channel.GetSummonsServedTimestampAsync(guid);
        }
        
        public System.Guid[] GetAllReadSummonsByCourt(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to)
        {
            return base.Channel.GetAllReadSummonsByCourt(courtcode, from, to);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetAllReadSummonsByCourtAsync(string courtcode, System.Nullable<System.DateTime> from, System.Nullable<System.DateTime> to)
        {
            return base.Channel.GetAllReadSummonsByCourtAsync(courtcode, from, to);
        }
        
        public System.DateTime GetSummonsReadTimestamp(System.Guid guid)
        {
            return base.Channel.GetSummonsReadTimestamp(guid);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetSummonsReadTimestampAsync(System.Guid guid)
        {
            return base.Channel.GetSummonsReadTimestampAsync(guid);
        }
        
        public System.Nullable<System.Guid> MarkSummonAsRead(System.Guid guid, System.Nullable<System.DateTime> date)
        {
            return base.Channel.MarkSummonAsRead(guid, date);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> MarkSummonAsReadAsync(System.Guid guid, System.Nullable<System.DateTime> date)
        {
            return base.Channel.MarkSummonAsReadAsync(guid, date);
        }
        
        public System.Guid[] GetReadSummonsForCertainDay(System.DateTime date)
        {
            return base.Channel.GetReadSummonsForCertainDay(date);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetReadSummonsForCertainDayAsync(System.DateTime date)
        {
            return base.Channel.GetReadSummonsForCertainDayAsync(date);
        }
        
        public byte[] GetSummonReportDocument(System.Guid summonId)
        {
            return base.Channel.GetSummonReportDocument(summonId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetSummonReportDocumentAsync(System.Guid summonId)
        {
            return base.Channel.GetSummonReportDocumentAsync(summonId);
        }
        
        public void ActivateSummonsAccess(System.Guid userId, System.Guid caseId)
        {
            base.Channel.ActivateSummonsAccess(userId, caseId);
        }
        
        public System.Threading.Tasks.Task ActivateSummonsAccessAsync(System.Guid userId, System.Guid caseId)
        {
            return base.Channel.ActivateSummonsAccessAsync(userId, caseId);
        }
        
        public void DeactivateSummonsAccess(System.Guid userId, System.Guid caseId)
        {
            base.Channel.DeactivateSummonsAccess(userId, caseId);
        }
        
        public System.Threading.Tasks.Task DeactivateSummonsAccessAsync(System.Guid userId, System.Guid caseId)
        {
            return base.Channel.DeactivateSummonsAccessAsync(userId, caseId);
        }
        
        public System.Nullable<System.Guid> InsertPersonAssignment(Integration.Epep.PersonAssignment personAssignment)
        {
            return base.Channel.InsertPersonAssignment(personAssignment);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPersonAssignmentAsync(Integration.Epep.PersonAssignment personAssignment)
        {
            return base.Channel.InsertPersonAssignmentAsync(personAssignment);
        }
        
        public System.Nullable<System.Guid> UpdatePersonAssignment(Integration.Epep.PersonAssignment personAssignment)
        {
            return base.Channel.UpdatePersonAssignment(personAssignment);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePersonAssignmentAsync(Integration.Epep.PersonAssignment personAssignment)
        {
            return base.Channel.UpdatePersonAssignmentAsync(personAssignment);
        }
        
        public System.Nullable<System.Guid> InsertScannedDocument(Integration.Epep.ScannedDocument scannedDocument)
        {
            return base.Channel.InsertScannedDocument(scannedDocument);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertScannedDocumentAsync(Integration.Epep.ScannedDocument scannedDocument)
        {
            return base.Channel.InsertScannedDocumentAsync(scannedDocument);
        }
        
        public System.Nullable<System.Guid> UpdateScannedDocument(Integration.Epep.ScannedDocument scannedDocument)
        {
            return base.Channel.UpdateScannedDocument(scannedDocument);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateScannedDocumentAsync(Integration.Epep.ScannedDocument scannedDocument)
        {
            return base.Channel.UpdateScannedDocumentAsync(scannedDocument);
        }
        
        public System.Nullable<System.Guid> InsertLawyerRegistration(Integration.Epep.LawyerRegistration lawyerRegistration)
        {
            return base.Channel.InsertLawyerRegistration(lawyerRegistration);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertLawyerRegistrationAsync(Integration.Epep.LawyerRegistration lawyerRegistration)
        {
            return base.Channel.InsertLawyerRegistrationAsync(lawyerRegistration);
        }
        
        public System.Nullable<System.Guid> UpdateLawyerRegistration(Integration.Epep.LawyerRegistration lawyerRegistration)
        {
            return base.Channel.UpdateLawyerRegistration(lawyerRegistration);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateLawyerRegistrationAsync(Integration.Epep.LawyerRegistration lawyerRegistration)
        {
            return base.Channel.UpdateLawyerRegistrationAsync(lawyerRegistration);
        }
        
        public System.Nullable<System.Guid> ActivateLawyerRegistration(System.Guid lawyerRegistrationId)
        {
            return base.Channel.ActivateLawyerRegistration(lawyerRegistrationId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> ActivateLawyerRegistrationAsync(System.Guid lawyerRegistrationId)
        {
            return base.Channel.ActivateLawyerRegistrationAsync(lawyerRegistrationId);
        }
        
        public System.Nullable<System.Guid> DeactivateLawyerRegistration(System.Guid lawyerRegistrationId)
        {
            return base.Channel.DeactivateLawyerRegistration(lawyerRegistrationId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> DeactivateLawyerRegistrationAsync(System.Guid lawyerRegistrationId)
        {
            return base.Channel.DeactivateLawyerRegistrationAsync(lawyerRegistrationId);
        }
        
        public System.Nullable<System.Guid> InsertPersonRegistration(Integration.Epep.PersonRegistration personRegistration)
        {
            return base.Channel.InsertPersonRegistration(personRegistration);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> InsertPersonRegistrationAsync(Integration.Epep.PersonRegistration personRegistration)
        {
            return base.Channel.InsertPersonRegistrationAsync(personRegistration);
        }
        
        public System.Nullable<System.Guid> UpdatePersonRegistration(Integration.Epep.PersonRegistration personRegistration)
        {
            return base.Channel.UpdatePersonRegistration(personRegistration);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdatePersonRegistrationAsync(Integration.Epep.PersonRegistration personRegistration)
        {
            return base.Channel.UpdatePersonRegistrationAsync(personRegistration);
        }
        
        public System.Nullable<System.Guid> ActivatePersonRegistration(System.Guid personRegistrationId)
        {
            return base.Channel.ActivatePersonRegistration(personRegistrationId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> ActivatePersonRegistrationAsync(System.Guid personRegistrationId)
        {
            return base.Channel.ActivatePersonRegistrationAsync(personRegistrationId);
        }
        
        public System.Nullable<System.Guid> DeactivatePersonRegistration(System.Guid personRegistrationId)
        {
            return base.Channel.DeactivatePersonRegistration(personRegistrationId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> DeactivatePersonRegistrationAsync(System.Guid personRegistrationId)
        {
            return base.Channel.DeactivatePersonRegistrationAsync(personRegistrationId);
        }
        
        public Integration.Epep.UserRegistrationInfo GetUserRegistrationInfoByUsername(string username)
        {
            return base.Channel.GetUserRegistrationInfoByUsername(username);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.UserRegistrationInfo> GetUserRegistrationInfoByUsernameAsync(string username)
        {
            return base.Channel.GetUserRegistrationInfoByUsernameAsync(username);
        }
        
        public System.Nullable<System.Guid> UpdateUsername(string oldUsername, string newUsername, string courtCode)
        {
            return base.Channel.UpdateUsername(oldUsername, newUsername, courtCode);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.Guid>> UpdateUsernameAsync(string oldUsername, string newUsername, string courtCode)
        {
            return base.Channel.UpdateUsernameAsync(oldUsername, newUsername, courtCode);
        }
        
        public System.Guid[] GetCaseIdentifiers(System.Nullable<int> caseNumber, string caseKindCode, System.Nullable<int> caseYear, string department)
        {
            return base.Channel.GetCaseIdentifiers(caseNumber, caseKindCode, caseYear, department);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetCaseIdentifiersAsync(System.Nullable<int> caseNumber, string caseKindCode, System.Nullable<int> caseYear, string department)
        {
            return base.Channel.GetCaseIdentifiersAsync(caseNumber, caseKindCode, caseYear, department);
        }
        
        public bool DeleteIncomingDocument(System.Guid incomingDocumentId)
        {
            return base.Channel.DeleteIncomingDocument(incomingDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteIncomingDocumentAsync(System.Guid incomingDocumentId)
        {
            return base.Channel.DeleteIncomingDocumentAsync(incomingDocumentId);
        }
        
        public bool DeleteOutgoingDocument(System.Guid outgoingDocumentId)
        {
            return base.Channel.DeleteOutgoingDocument(outgoingDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteOutgoingDocumentAsync(System.Guid outgoingDocumentId)
        {
            return base.Channel.DeleteOutgoingDocumentAsync(outgoingDocumentId);
        }
        
        public bool DeleteCase(System.Guid caseId)
        {
            return base.Channel.DeleteCase(caseId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCaseAsync(System.Guid caseId)
        {
            return base.Channel.DeleteCaseAsync(caseId);
        }
        
        public bool DeleteConnectedCase(System.Guid connectedCaseId)
        {
            return base.Channel.DeleteConnectedCase(connectedCaseId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteConnectedCaseAsync(System.Guid connectedCaseId)
        {
            return base.Channel.DeleteConnectedCaseAsync(connectedCaseId);
        }
        
        public bool DeleteReporter(System.Guid reporterId)
        {
            return base.Channel.DeleteReporter(reporterId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteReporterAsync(System.Guid reporterId)
        {
            return base.Channel.DeleteReporterAsync(reporterId);
        }
        
        public bool DeleteAssignment(System.Guid assignmentId)
        {
            return base.Channel.DeleteAssignment(assignmentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAssignmentAsync(System.Guid assignmentId)
        {
            return base.Channel.DeleteAssignmentAsync(assignmentId);
        }
        
        public bool DeleteHearing(System.Guid hearingId)
        {
            return base.Channel.DeleteHearing(hearingId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHearingAsync(System.Guid hearingId)
        {
            return base.Channel.DeleteHearingAsync(hearingId);
        }
        
        public bool DeleteHearingParticipant(System.Guid hearingParticipantId)
        {
            return base.Channel.DeleteHearingParticipant(hearingParticipantId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHearingParticipantAsync(System.Guid hearingParticipantId)
        {
            return base.Channel.DeleteHearingParticipantAsync(hearingParticipantId);
        }
        
        public bool DeleteAct(System.Guid actId)
        {
            return base.Channel.DeleteAct(actId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteActAsync(System.Guid actId)
        {
            return base.Channel.DeleteActAsync(actId);
        }
        
        public bool DeleteActPreparator(System.Guid actPreparatorId)
        {
            return base.Channel.DeleteActPreparator(actPreparatorId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteActPreparatorAsync(System.Guid actPreparatorId)
        {
            return base.Channel.DeleteActPreparatorAsync(actPreparatorId);
        }
        
        public bool DeleteAppeal(System.Guid appealId)
        {
            return base.Channel.DeleteAppeal(appealId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAppealAsync(System.Guid appealId)
        {
            return base.Channel.DeleteAppealAsync(appealId);
        }
        
        public bool DeleteCaseRuling(System.Guid caseRulingId)
        {
            return base.Channel.DeleteCaseRuling(caseRulingId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCaseRulingAsync(System.Guid caseRulingId)
        {
            return base.Channel.DeleteCaseRulingAsync(caseRulingId);
        }
        
        public bool DeleteSide(System.Guid sideId)
        {
            return base.Channel.DeleteSide(sideId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSideAsync(System.Guid sideId)
        {
            return base.Channel.DeleteSideAsync(sideId);
        }
        
        public bool DeleteLawyerAssignment(System.Guid lawyerAssignmentId)
        {
            return base.Channel.DeleteLawyerAssignment(lawyerAssignmentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLawyerAssignmentAsync(System.Guid lawyerAssignmentId)
        {
            return base.Channel.DeleteLawyerAssignmentAsync(lawyerAssignmentId);
        }
        
        public bool DeleteSummon(System.Guid summonId)
        {
            return base.Channel.DeleteSummon(summonId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSummonAsync(System.Guid summonId)
        {
            return base.Channel.DeleteSummonAsync(summonId);
        }
        
        public bool DeletePersonAssignment(System.Guid personAssignmentId)
        {
            return base.Channel.DeletePersonAssignment(personAssignmentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePersonAssignmentAsync(System.Guid personAssignmentId)
        {
            return base.Channel.DeletePersonAssignmentAsync(personAssignmentId);
        }
        
        public bool DeleteScannedDocument(System.Guid scannedDocumentId)
        {
            return base.Channel.DeleteScannedDocument(scannedDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteScannedDocumentAsync(System.Guid scannedDocumentId)
        {
            return base.Channel.DeleteScannedDocumentAsync(scannedDocumentId);
        }
        
        public bool DeleteAssignmentFile(System.Guid assignmentId)
        {
            return base.Channel.DeleteAssignmentFile(assignmentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAssignmentFileAsync(System.Guid assignmentId)
        {
            return base.Channel.DeleteAssignmentFileAsync(assignmentId);
        }
        
        public bool DeletePrivateProtocolFile(System.Guid hearingId)
        {
            return base.Channel.DeletePrivateProtocolFile(hearingId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePrivateProtocolFileAsync(System.Guid hearingId)
        {
            return base.Channel.DeletePrivateProtocolFileAsync(hearingId);
        }
        
        public bool DeletePublicProtocolFile(System.Guid hearingId)
        {
            return base.Channel.DeletePublicProtocolFile(hearingId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePublicProtocolFileAsync(System.Guid hearingId)
        {
            return base.Channel.DeletePublicProtocolFileAsync(hearingId);
        }
        
        public bool DeleteIncomingDocumentFile(System.Guid incomingDocumentId)
        {
            return base.Channel.DeleteIncomingDocumentFile(incomingDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteIncomingDocumentFileAsync(System.Guid incomingDocumentId)
        {
            return base.Channel.DeleteIncomingDocumentFileAsync(incomingDocumentId);
        }
        
        public bool DeleteOutgoingDocumentFile(System.Guid outgoingDocumentId)
        {
            return base.Channel.DeleteOutgoingDocumentFile(outgoingDocumentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteOutgoingDocumentFileAsync(System.Guid outgoingDocumentId)
        {
            return base.Channel.DeleteOutgoingDocumentFileAsync(outgoingDocumentId);
        }
        
        public bool DeleteSummonFile(System.Guid summonId)
        {
            return base.Channel.DeleteSummonFile(summonId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSummonFileAsync(System.Guid summonId)
        {
            return base.Channel.DeleteSummonFileAsync(summonId);
        }
        
        public bool DeletePrivateActFile(System.Guid actId)
        {
            return base.Channel.DeletePrivateActFile(actId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePrivateActFileAsync(System.Guid actId)
        {
            return base.Channel.DeletePrivateActFileAsync(actId);
        }
        
        public bool DeletePublicActFile(System.Guid actId)
        {
            return base.Channel.DeletePublicActFile(actId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePublicActFileAsync(System.Guid actId)
        {
            return base.Channel.DeletePublicActFileAsync(actId);
        }
        
        public bool DeletePrivateMotiveFile(System.Guid actId)
        {
            return base.Channel.DeletePrivateMotiveFile(actId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePrivateMotiveFileAsync(System.Guid actId)
        {
            return base.Channel.DeletePrivateMotiveFileAsync(actId);
        }
        
        public bool DeletePublicMotiveFile(System.Guid actId)
        {
            return base.Channel.DeletePublicMotiveFile(actId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePublicMotiveFileAsync(System.Guid actId)
        {
            return base.Channel.DeletePublicMotiveFileAsync(actId);
        }
        
        public Integration.Epep.IncomingDocument GetIncomingDocumentById(System.Guid incomingDocumentId)
        {
            return base.Channel.GetIncomingDocumentById(incomingDocumentId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.IncomingDocument> GetIncomingDocumentByIdAsync(System.Guid incomingDocumentId)
        {
            return base.Channel.GetIncomingDocumentByIdAsync(incomingDocumentId);
        }
        
        public System.Guid[] GetIncomingDocumentIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetIncomingDocumentIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetIncomingDocumentIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetIncomingDocumentIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.OutgoingDocument GetOutgoingDocumentById(System.Guid outgoingDocumentId)
        {
            return base.Channel.GetOutgoingDocumentById(outgoingDocumentId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.OutgoingDocument> GetOutgoingDocumentByIdAsync(System.Guid outgoingDocumentId)
        {
            return base.Channel.GetOutgoingDocumentByIdAsync(outgoingDocumentId);
        }
        
        public System.Guid[] GetOutgoingDocumentIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetOutgoingDocumentIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetOutgoingDocumentIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetOutgoingDocumentIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.Case GetCaseById(System.Guid caseId)
        {
            return base.Channel.GetCaseById(caseId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Case> GetCaseByIdAsync(System.Guid caseId)
        {
            return base.Channel.GetCaseByIdAsync(caseId);
        }
        
        public Integration.Epep.ConnectedCase GetConnectedCaseById(System.Guid connectedCaseId)
        {
            return base.Channel.GetConnectedCaseById(connectedCaseId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.ConnectedCase> GetConnectedCaseByIdAsync(System.Guid connectedCaseId)
        {
            return base.Channel.GetConnectedCaseByIdAsync(connectedCaseId);
        }
        
        public System.Guid[] GetConnectedCaseIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetConnectedCaseIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetConnectedCaseIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetConnectedCaseIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.Reporter GetReporterById(System.Guid reporterId)
        {
            return base.Channel.GetReporterById(reporterId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Reporter> GetReporterByIdAsync(System.Guid reporterId)
        {
            return base.Channel.GetReporterByIdAsync(reporterId);
        }
        
        public System.Guid[] GetReporterIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetReporterIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetReporterIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetReporterIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.Assignment GetAssignmentById(System.Guid assignmentId)
        {
            return base.Channel.GetAssignmentById(assignmentId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Assignment> GetAssignmentByIdAsync(System.Guid assignmentId)
        {
            return base.Channel.GetAssignmentByIdAsync(assignmentId);
        }
        
        public System.Guid[] GetAssignmentIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetAssignmentIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetAssignmentIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetAssignmentIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.Hearing GetHearingById(System.Guid hearingId)
        {
            return base.Channel.GetHearingById(hearingId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Hearing> GetHearingByIdAsync(System.Guid hearingId)
        {
            return base.Channel.GetHearingByIdAsync(hearingId);
        }
        
        public System.Guid[] GetHearingIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetHearingIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetHearingIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetHearingIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.HearingParticipant GetHearingParticipantById(System.Guid hearingParticipantId)
        {
            return base.Channel.GetHearingParticipantById(hearingParticipantId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.HearingParticipant> GetHearingParticipantByIdAsync(System.Guid hearingParticipantId)
        {
            return base.Channel.GetHearingParticipantByIdAsync(hearingParticipantId);
        }
        
        public System.Guid[] GetHearingParticipantIdentifiersByHearingId(System.Guid hearingId)
        {
            return base.Channel.GetHearingParticipantIdentifiersByHearingId(hearingId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetHearingParticipantIdentifiersByHearingIdAsync(System.Guid hearingId)
        {
            return base.Channel.GetHearingParticipantIdentifiersByHearingIdAsync(hearingId);
        }
        
        public Integration.Epep.Act GetActById(System.Guid actId)
        {
            return base.Channel.GetActById(actId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Act> GetActByIdAsync(System.Guid actId)
        {
            return base.Channel.GetActByIdAsync(actId);
        }
        
        public System.Guid[] GetActIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetActIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetActIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetActIdentifiersByCaseIdAsync(caseId);
        }
        
        public Integration.Epep.ActPreparator GetActPreparatorById(System.Guid actPreparatorId)
        {
            return base.Channel.GetActPreparatorById(actPreparatorId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.ActPreparator> GetActPreparatorByIdAsync(System.Guid actPreparatorId)
        {
            return base.Channel.GetActPreparatorByIdAsync(actPreparatorId);
        }
        
        public System.Guid[] GetActPreparatorIdentifiersByActId(System.Guid actId)
        {
            return base.Channel.GetActPreparatorIdentifiersByActId(actId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetActPreparatorIdentifiersByActIdAsync(System.Guid actId)
        {
            return base.Channel.GetActPreparatorIdentifiersByActIdAsync(actId);
        }
        
        public Integration.Epep.Appeal GetAppealById(System.Guid appealId)
        {
            return base.Channel.GetAppealById(appealId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.Appeal> GetAppealByIdAsync(System.Guid appealId)
        {
            return base.Channel.GetAppealByIdAsync(appealId);
        }
        
        public System.Guid[] GetAppealIdentifiersByActId(System.Guid actId)
        {
            return base.Channel.GetAppealIdentifiersByActId(actId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetAppealIdentifiersByActIdAsync(System.Guid actId)
        {
            return base.Channel.GetAppealIdentifiersByActIdAsync(actId);
        }
        
        public Integration.Epep.CaseRuling GetCaseRulingById(System.Guid caseRulingId)
        {
            return base.Channel.GetCaseRulingById(caseRulingId);
        }
        
        public System.Threading.Tasks.Task<Integration.Epep.CaseRuling> GetCaseRulingByIdAsync(System.Guid caseRulingId)
        {
            return base.Channel.GetCaseRulingByIdAsync(caseRulingId);
        }
        
        public System.Guid[] GetCaseRulingIdentifiersByCaseId(System.Guid caseId)
        {
            return base.Channel.GetCaseRulingIdentifiersByCaseId(caseId);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> GetCaseRulingIdentifiersByCaseIdAsync(System.Guid caseId)
        {
            return base.Channel.GetCaseRulingIdentifiersByCaseIdAsync(caseId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IeCaseService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Certificate;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IeCaseService))
            {
                return new System.ServiceModel.EndpointAddress("https://ecase-test.justice.bg/Service/eCaseService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return IeCaseServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IeCaseService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return IeCaseServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IeCaseService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IeCaseService,
        }
    }
}
